{"version":3,"sources":["mlpa_engine/graduation.js","mlpa_engine/parameter.js","mlpa_engine/phrase.js","mlpa_engine/range.js","mlpa_engine/stage.js","mlpa_engine/stuff.js","mlpa_engine/topic.js","mlpa_engine/change.js","mlpa_engine/interf.js","mlpa_engine/loc.js","components/Game/ReplicI/ReplicI.js","components/Game/AnswerI/AnswerI.js","components/Game/Params.js","components/Game/UI.js","game/loc_example.js","game/parameters.js","game/ranges.js","game/grads.js","components/Editor/Topics/TopicItem.js","components/Editor/Stages/StageItem.js","components/Editor/Stuffs/StuffItem.js","components/Editor/Ranges/RangeItem.js","components/Editor/Stuffs/AddStuff.js","components/Editor/Stages/Stage.js","components/Editor/Topics/Topic.js","components/Editor/Topics/AddTopic.js","components/Editor/Editor.js","App.js","serviceWorker.js","index.js"],"names":["Graduation","name","rangesNames","this","Parameter","value","Phrase","rangeName","text","isGeneral","id","stuff_id","Range","paramName","min","max","Stage","isStart","isBeen","topic_id","Stuff","next_stage_id","changes","isA","stage_id","Topic","graduation","isFin","Change","term","Interf","generalPhrase","phrase","Loc","params","ranges","grads","topics","stuffs","stages","phrases","lim","addStages","topicId","_getTopic","newStages","map","stage","concat","console","error","_getStages","filter","_getStuffs","stageId","stuff","_getPhrases","stuffId","checkGrad","gradName","_getGrad","rName","_getRange","key","forEach","range","checkRange","idState","getId","type","getStartId","startTopic","find","topic","startStage","calcStuff","s","_editParams","getGeneralPhrase","getCorrectPhrase","neutralPhrase","i","checkAnswToGrad","nextStage","getInterfaceStage","replicStuff","replic","answers","ssign","data","addTopics","addStuffs","props","nextStageId","addPhrases","c","newStuffs","newPhrases","phraseId","param","grad","change","_getParam","newValue","ReplicI","style","backgroundColor","isPlayerReplic","className","React","Component","AnswerI","answer","updateStage","onClick","Params","g","edit","correctGradsItems","correctGrads","paramItems","display","height","width","UI","loc","mlpaState","defaultParams","currentStage","state","prevAnswer","p","newStageId","newPrevAnswer","setState","currentInterface","answersItems","cChange","forceUpdate","locE","addParams","cParam","addRanges","cRange","addGrads","cGrad","TopicItem","isSelect","click","margin","padding","cursor","color","StageItem","stuffText","StuffItem","allStages","currentTopic","methods","stat","goStage","allTopics","getPhrases","changesItems","marginRight","onChange","e","updateStuff","Number","target","paddingTop","paddingBottom","linkItems","getStages","unshift","linkThemesItems","t","next","newCurrTopic","topicStages","length","removeButton","removeStuff","updatePhrase","RangeItem","AddStuff","addStuff","currentRange","pAnswers","changeStage","getStuffs","splitStuffs","stuffsItems","shift","generStuff","noRanges","rangesItems","align","removeStage","checked","nextStuff","nextPhrase","slice","newStageStart","stagesItems","optItems","curStage","stageView","updateTopic","removeTopic","marginLeft","addStage","AddTopic","addTopic","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.04c9bb3b.chunk.js","sourcesContent":["export default class Graduation {\r\n  constructor(name, rangesNames) {\r\n    this.name = name;\r\n    this.rangesNames = rangesNames;\r\n  }\r\n}\r\n","export default class Parameter {\r\n  constructor(name, value) {\r\n    this.name = name;\r\n    this.value = value;\r\n  }\r\n}\r\n","export default class Phrase {\r\n  constructor(rangeName, text, isGeneral, id) {\r\n    this.rangeName = rangeName;\r\n    this.text = text;\r\n    this.isGeneral = isGeneral;\r\n    this.id = id;\r\n  }\r\n  stuff_id = null;\r\n}\r\n","export default class Range {\r\n  constructor(name, paramName, min, max) {\r\n    this.name = name;\r\n    this.paramName = paramName;\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n}\r\n","export default class Stage {\r\n  constructor(isStart, id) {\r\n    this.id = id;\r\n    this.isStart = isStart\r\n  }\r\n  isBeen = false;\r\n  topic_id = null;\r\n}\r\n","export default class Stuff {\r\n  constructor(next_stage_id, changes = [], isA = false, id) {\r\n    this.next_stage_id = next_stage_id;\r\n    this.changes = changes;\r\n    this.isA = isA;\r\n    this.id = id;\r\n  }\r\n  stage_id = null;\r\n}\r\n","export default class Topic {\r\n  constructor(name, graduation, isFin, isStart, id) {\r\n    this.name = name;\r\n    this.graduation = graduation;\r\n    this.isFin = isFin;\r\n    this.isStart = isStart;\r\n    this.id = id;\r\n  }\r\n}\r\n","export default class Change {\r\n  constructor(paramName, term) {\r\n    this.paramName = paramName;\r\n    this.term = term;\r\n  }\r\n}\r\n","export default class Interf {\r\n  constructor(generalPhrase, phrase, id) {\r\n    this.generalPhrase = generalPhrase;\r\n    this.phrase = phrase;\r\n    this.id = id;\r\n  }\r\n}\r\n","import Parameter from \"./parameter\";\r\nimport Range from \"./range\";\r\nimport Graduation from \"./graduation\";\r\nimport Phrase from \"./phrase\";\r\nimport Stuff from \"./stuff\";\r\nimport Change from \"./change\";\r\nimport Stage from \"./stage\";\r\nimport Topic from \"./topic\";\r\nimport Interf from \"./interf\";\r\n\r\nexport default class Loc {\r\n  params = [];\r\n  ranges = [];\r\n  grads = [];\r\n  topics = [];\r\n\r\n  stuffs = [];\r\n  stages = [];\r\n  phrases = [];\r\n\r\n  lim = 15;\r\n\r\n  cParam(name, value) {\r\n    return new Parameter(name, value);\r\n  }\r\n  addParams(...params) {\r\n    this.params = this.params.concat(params);\r\n  }\r\n\r\n  cRange(name, min, max, paramName) {\r\n    return new Range(name, paramName, min, max);\r\n  }\r\n  addRanges(...ranges) {\r\n    this.ranges = this.ranges.concat(ranges);\r\n  }\r\n\r\n  cGrad(name, ...rangesNames) {\r\n    return new Graduation(name, rangesNames);\r\n  }\r\n  addGrads(...grads) {\r\n    this.grads = this.grads.concat(grads);\r\n  }\r\n\r\n  cTopic(name, gradName, isFin, isStart, ...stages) {\r\n    const topicId = this.getId(\"topics\");\r\n    this.addTopics(new Topic(name, gradName, isFin, isStart, topicId));\r\n    this.addStages(topicId, ...stages);\r\n  }\r\n\r\n  addTopics(...topics) {\r\n    this.topics = this.topics.concat(topics);\r\n  }\r\n\r\n  cStage(isStart, ...answers) {\r\n    const stageId = this.getId(\"stages\");\r\n    this.addStuffs(stageId, ...answers);\r\n    return new Stage(isStart, stageId);\r\n  }\r\n\r\n  addStages = (topicId, ...stages) => {\r\n    if (this._getTopic(topicId)) {\r\n      const newStages = stages.map(stage => {\r\n        return { ...stage, topic_id: topicId };\r\n      });\r\n      this.stages = this.stages.concat(newStages);\r\n    } else console.error(`Topic ${topicId} not found!`);\r\n  };\r\n\r\n  cStuff(props, ...phrases) {\r\n    const { id: nextStageId, changes, isA } = props ? props : {};\r\n    const stuffId = this.getId(\"stuffs\");\r\n\r\n    this.addPhrases(stuffId, phrases);\r\n    return new Stuff(\r\n      nextStageId,\r\n      !isA ? changes.filter(c => c.term) : [],\r\n      isA,\r\n      stuffId\r\n    );\r\n  }\r\n\r\n  addStuffs(stageId, ...stuffs) {\r\n    const newStuffs = stuffs.map(stuff => ({ ...stuff, stage_id: stageId }));\r\n    this.stuffs = this.stuffs.concat(newStuffs);\r\n  }\r\n\r\n  addPhrases(stuffId, phrases) {\r\n    const newPhrases = phrases.map(phrase => ({\r\n      ...phrase,\r\n      stuff_id: stuffId\r\n    }));\r\n\r\n    this.phrases = this.phrases.concat(newPhrases);\r\n  }\r\n\r\n  cPhrase(text, isGeneral = false, rangeName) {\r\n    const phraseId = this.getId(\"phrases\");\r\n    return new Phrase(rangeName, text, isGeneral, phraseId);\r\n  }\r\n\r\n  cChange(paramName, term) {\r\n    return new Change(paramName, term);\r\n  }\r\n\r\n  _getTopic(id) {\r\n    return this.topics.find(topic => topic.id === id);\r\n  }\r\n  _getStages = topicId => {\r\n    return this.stages.filter(stage => stage.topic_id === topicId);\r\n  };\r\n\r\n  _getStuffs = stageId => {\r\n    return this.stuffs.filter(stuff => stuff.stage_id === stageId);\r\n  };\r\n\r\n  _getPhrases = stuffId => {\r\n    return this.phrases.filter(phrase => phrase.stuff_id === stuffId);\r\n  };\r\n\r\n  _getParam(name) {\r\n    return this.params.find(param => param.name === name);\r\n  }\r\n\r\n  _getRange(name) {\r\n    return this.ranges.find(range => range.name === name);\r\n  }\r\n\r\n  _getGrad(name) {\r\n    return this.grads.find(grad => grad.name === name);\r\n  }\r\n\r\n  _editParams(changes) {\r\n    changes.forEach(change => {\r\n      const param = this._getParam(change.paramName);\r\n\r\n      const newValue = param.value + change.term;\r\n      if (newValue > this.lim) {\r\n        param.value = this.lim;\r\n      } else if (newValue < 1) {\r\n        param.value = 1;\r\n      } else param.value = newValue;\r\n    });\r\n  }\r\n\r\n  checkRange(rangeName) {\r\n    const range = this._getRange(rangeName);\r\n    const param = this._getParam(range.paramName);\r\n    return param.value >= range.min && param.value <= range.max;\r\n  }\r\n\r\n  checkGrad = gradName => {\r\n    const grad = this._getGrad(gradName);\r\n    const ranges = grad.rangesNames.map(rName => this._getRange(rName));\r\n    const params = [];\r\n    ranges.forEach(range => {\r\n      if (!params[range.paramName]) {\r\n        params[range.paramName] = this.checkRange(range.name);\r\n      }\r\n    });\r\n    for (let key in params) {\r\n      if (!params[key]) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  idState = {};\r\n  getId = type => {\r\n    if (!this.idState[type]) this.idState[type] = 0;\r\n    this.idState[type]++;\r\n    return this.idState[type];\r\n  };\r\n\r\n  getStartId = () => {\r\n    const startTopic = this.topics.find(topic => topic.isStart);\r\n    const stages = this._getStages(startTopic.id);\r\n    const startStage = stages.find(stage => stage.isStart);\r\n    return startStage ? startStage.id : null;\r\n  };\r\n\r\n  calcStuff = stuffId => {\r\n    const stuff = this.stuffs.find(s => s.id === stuffId);\r\n\r\n    this._editParams(stuff.changes);\r\n    return stuff.next_stage_id;\r\n  };\r\n\r\n  getGeneralPhrase = stuffId => {\r\n    const stuff = this.stuffs.find(s => s.id === stuffId);\r\n    const phrases = this._getPhrases(stuff.id);\r\n    const generalPhrase = phrases.find(phrase => phrase.isGeneral);\r\n    return generalPhrase?.text;\r\n  };\r\n\r\n  getCorrectPhrase = stuffId => {\r\n    const stuff = this.stuffs.find(s => s.id === stuffId);\r\n    const phrases = this._getPhrases(stuff.id);\r\n    const neutralPhrase = phrases.find(phrase => !phrase.rangeName);\r\n    for (let i in phrases) {\r\n      const phrase = phrases[i];\r\n      if (phrase.rangeName && this.checkRange(phrase.rangeName))\r\n        return phrase.text;\r\n    }\r\n\r\n    return neutralPhrase.text;\r\n  };\r\n\r\n  checkAnswToGrad = stuff => {\r\n    const nextStage = this.stages.find(\r\n      stage => stage.id === stuff.next_stage_id\r\n    );\r\n    const topic = this._getTopic(nextStage.topic_id);\r\n    return this.checkGrad(topic.graduation);\r\n  };\r\n\r\n  getInterfaceStage = id => {\r\n    //ДОБАВИТЬ ПОДКЛЮЧЕНИЕ ФИНАЛОЧЕК КОГДА НАДО\r\n\r\n    /* const necessity = 2;*/\r\n\r\n    const stage = this.stages.find(s => s.id === id);\r\n    stage.isBeen = true;\r\n\r\n    const stuffs = this._getStuffs(id);\r\n\r\n    const replicStuff = stuffs.find(stuff => stuff.isA);\r\n    const replic = new Interf(null, this.getCorrectPhrase(replicStuff.id));\r\n\r\n    //ОГРАНИЧЕНИЯ ПО *БЫЛ ТУТ*\r\n    const answersAll = stuffs.filter(stuff => {\r\n      /*if (!stuff.isA) {\r\n        const stage = this.stages.find(s => s.id === stuff.next_stage_id);\r\n        return !stage.isBeen;\r\n      } else return false;*/\r\n      return !stuff.isA;\r\n    });\r\n\r\n    //ПОДХОДЯЩИЕ И НЕ ПОДХОДЯЩИЕ ПО ГРАДАЦИИ\r\n    /* const gradAnswers = answersAll.filter(stuff => this.checkAnswToGrad(stuff));\r\n    const notGradAnswers = answersAll.filter(\r\n      stuff => !this.checkAnswToGrad(stuff)\r\n    );*/\r\n\r\n    //РАЗНИЦА\r\n    /*const gradDiff = necessity - gradAnswers.length;*/\r\n\r\n    //РЕЗУЛЬТАТ\r\n    const resAnswers = answersAll; /*gradAnswers.concat(\r\n      notGradAnswers.slice(0, gradDiff > necessity ? 0 : gradDiff)\r\n    );*/\r\n\r\n    const interf = {\r\n      answers: resAnswers.map(stuff => {\r\n        return new Interf(\r\n          this.getGeneralPhrase(stuff.id),\r\n          this.getCorrectPhrase(stuff.id),\r\n          stuff.id\r\n        );\r\n      }),\r\n      replic\r\n    };\r\n\r\n    return interf;\r\n  };\r\n\r\n  ssign = data => {\r\n    for (let key in data) {\r\n      this[key] = data[key];\r\n    }\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default class ReplicI extends React.Component {\r\n  render() {\r\n    const { replic, isPlayerReplic } = this.props;\r\n    const style = {\r\n      backgroundColor: isPlayerReplic ? \"#ebebe0\" : \"white\"\r\n    };\r\n    return (\r\n      <div className=\"replica\" style={style}>\r\n        {replic.phrase}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default class AnswerI extends React.Component {\r\n  render() {\r\n    const { answer, updateStage } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className=\"answer\"\r\n        onClick={() => {\r\n          updateStage();\r\n        }}\r\n      >\r\n        {answer.generalPhrase}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Params extends React.Component {\r\n  /* constructor() {\r\n    super();\r\n\r\n  }*/\r\n\r\n  correctGrads() {\r\n    const { grads, checkGrad } = this.props;\r\n    const corrGrads = grads.filter(g => checkGrad(g.name));\r\n\r\n    return corrGrads;\r\n  }\r\n  render() {\r\n    const { params, lim, edit } = this.props;\r\n\r\n    const correctGrads = this.correctGrads();\r\n    const correctGradsItems = correctGrads.map(g => (\r\n      <div key={g.name}>{g.name}</div>\r\n    ));\r\n\r\n    const paramItems = params.map(param => (\r\n      <div key={param.name}>\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              edit(param.name, -1);\r\n            }}\r\n          >\r\n            -\r\n          </button>\r\n          <div\r\n            style={{\r\n              display: \"inline-block\",\r\n              height: \"15px\",\r\n              width: `${param.value * 10}px`,\r\n              backgroundColor: \"red\"\r\n            }}\r\n          ></div>\r\n          <div\r\n            style={{\r\n              display: \"inline-block\",\r\n              height: \"15px\",\r\n              width: `${(lim - param.value) * 10}px`,\r\n              backgroundColor: \"gray\"\r\n            }}\r\n          ></div>\r\n\r\n          <button\r\n            onClick={() => {\r\n              edit(param.name, 1);\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n          {param.name}\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        {paramItems}\r\n        {correctGradsItems}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Loc } from \"../../mlpa_engine\";\r\nimport mlpaState from \"../../mlpa_state\";\r\nimport ReplicI from \"./ReplicI/ReplicI\";\r\nimport AnswerI from \"./AnswerI/AnswerI\";\r\nimport Params from \"./Params\";\r\n\r\nexport default class UI extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.loc = new Loc();\r\n    this.loc.ssign(mlpaState);\r\n    this.defaultParams();\r\n    const currentStage = this.loc.getStartId();\r\n    this.state = {\r\n      currentStage,\r\n      prevAnswer: \"...\"\r\n    };\r\n  }\r\n\r\n  defaultParams() {\r\n    this.loc.params.forEach(p => (p.value = 7));\r\n  }\r\n\r\n  updateStage(stuffId) {\r\n    const newStageId = this.loc.calcStuff(stuffId);\r\n    const newPrevAnswer = this.loc.getCorrectPhrase(stuffId);\r\n    this.setState({ currentStage: newStageId, prevAnswer: newPrevAnswer });\r\n  }\r\n\r\n  render() {\r\n    const { currentStage, prevAnswer } = this.state;\r\n    const currentInterface = this.loc.getInterfaceStage(currentStage);\r\n\r\n    const { answers, replic } = currentInterface;\r\n    const answersItems = answers.map(answer => {\r\n      return (\r\n        <AnswerI\r\n          key={answer.id}\r\n          answer={answer}\r\n          updateStage={() => {\r\n            this.updateStage(answer.id);\r\n          }}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <Params\r\n          params={this.loc.params}\r\n          lim={this.loc.lim}\r\n          edit={(paramName, term) => {\r\n            this.loc._editParams([this.loc.cChange(paramName, term)]);\r\n            this.forceUpdate();\r\n          }}\r\n          grads={this.loc.grads}\r\n          checkGrad={this.loc.checkGrad}\r\n        />\r\n        <ReplicI replic={{ phrase: prevAnswer }} isPlayerReplic={true} />\r\n        <ReplicI replic={replic} />\r\n        {answersItems}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Loc } from \"./../mlpa_engine\";\r\n\r\nimport { PARAM_EQUILIBRIUM, PARAM_DETERMINATION } from \"./parameters\";\r\n\r\nimport { RANGE_PANIC, RANGE_TENSION, RANGE_STABILITY, \r\n  RANGE_APATHY, RANGE_UNCERTAINTY, RANGE_CONFIDENCE } from \"./ranges\";\r\n\r\nimport { GRAD_PAN_APA, GRAD_PAN_UNC, GRAD_PAN_CON,\r\n GRAD_TEN_APA, GRAD_TEN_UNC, GRAD_TEN_CON,\r\n  GRAD_STAB_APA, GRAD_STAB_UNC, GRAD_STAB_CON } from \"./grads\";\r\n\r\nconst locE = new Loc();\r\nlocE.addParams(\r\n  locE.cParam(PARAM_DETERMINATION, 2),\r\n  locE.cParam(PARAM_EQUILIBRIUM, 4)\r\n);\r\n\r\nlocE.addRanges(\r\n    locE.cRange(RANGE_PANIC, 1, 5, PARAM_EQUILIBRIUM),\r\n    locE.cRange(RANGE_TENSION, 6, 10, PARAM_EQUILIBRIUM),\r\n    locE.cRange(RANGE_STABILITY, 11, 15, PARAM_EQUILIBRIUM),\r\n\r\n    locE.cRange(RANGE_APATHY, 1, 5, PARAM_DETERMINATION),\r\n    locE.cRange(RANGE_UNCERTAINTY, 6, 10, PARAM_DETERMINATION),\r\n    locE.cRange(RANGE_CONFIDENCE, 11, 15, PARAM_DETERMINATION)\r\n);\r\nlocE.addGrads(\r\n  locE.cGrad(GRAD_PAN_APA, RANGE_PANIC, RANGE_APATHY),\r\n  locE.cGrad(GRAD_PAN_UNC, RANGE_PANIC, RANGE_UNCERTAINTY),\r\n  locE.cGrad(GRAD_PAN_CON, RANGE_PANIC, RANGE_CONFIDENCE),\r\n\r\n  locE.cGrad(GRAD_TEN_APA, RANGE_TENSION, RANGE_APATHY),\r\n  locE.cGrad(GRAD_TEN_UNC, RANGE_TENSION, RANGE_UNCERTAINTY),\r\n  locE.cGrad(GRAD_TEN_CON, RANGE_TENSION, RANGE_CONFIDENCE),\r\n\r\n  locE.cGrad(GRAD_STAB_APA, RANGE_STABILITY, RANGE_APATHY),\r\n  locE.cGrad(GRAD_STAB_UNC, RANGE_STABILITY, RANGE_UNCERTAINTY),\r\n  locE.cGrad(GRAD_STAB_CON, RANGE_STABILITY, RANGE_CONFIDENCE),\r\n);\r\n\r\n/*locE.cTopic(\r\n  \"терки за семью\",\r\n  GRAD_CONSTRUCTIVE,\r\n  locE.cStage(\r\n    locE.cStuff(\r\n      { isA: true },\r\n      locE.cPhrase(\"Ты меня совсем не понимаешь!\", RANGE_HYSTERICS),\r\n      locE.cPhrase(\r\n        \"Да я в своем сознании настолько преисполнилась, иди суетись...\",\r\n        RANGE_TRANQUILITY\r\n      ),\r\n      locE.cPhrase(\"Ты кажется не понял.\")\r\n    ),\r\n    locE.cStuff(\r\n      { id: 4, changes: [locE.cChange(PARAM_DETERMINATION, -5)] },\r\n      locE.cPhrase(\"Успокойся истеричка ебать!\", RANGE_HYSTERICS),\r\n      locE.cPhrase(\"Да все норм ты шо.\")\r\n    ),\r\n    locE.cStuff(\r\n      { id: 2, changes: [locE.cChange(PARAM_EQUILIBRIUM, 5)] },\r\n      locE.cPhrase(\"Ебать ты филосОф! Деду нравится.\", RANGE_TRANQUILITY),\r\n      locE.cPhrase(\"Эй ну извини ты шо.\")\r\n    )\r\n  ),\r\n  locE.cStage(\r\n    locE.cStuff(\r\n      { isA: true },\r\n      locE.cPhrase(\"В смысле ты мой отец?!\", RANGE_HYSTERICS),\r\n      locE.cPhrase(\"Ты мой батя?..\")\r\n    ),\r\n    locE.cStuff(\r\n      { id: 2, changes: [locE.cChange(PARAM_DETERMINATION, -5)] },\r\n      locE.cPhrase(\"Дорогуша остынь.\", RANGE_HYSTERICS),\r\n      locE.cPhrase(\"Да, батя. Только не волнуйся.\")\r\n    ),\r\n    locE.cStuff(\r\n      { id: 2, changes: [locE.cChange(PARAM_DETERMINATION, -5)] },\r\n      locE.cPhrase(\"Хех, ну в некотором смысле я пошутил\", RANGE_HYSTERICS),\r\n      locE.cPhrase(\"Ну, тест ДНК я не делал...\")\r\n    )\r\n  )\r\n);\r\n\r\n\r\n\r\nlocE.cTopic(\r\n  \"убийства!\",\r\n  GRAD_CONSTRUCTIVE,\r\n  locE.cStage(\r\n    locE.cStuff(\r\n      { isA: true },\r\n      locE.cPhrase(\"Ты меня совсем не понимаешь!\", RANGE_HYSTERICS),\r\n      locE.cPhrase(\r\n        \"Да я в своем сознании настолько преисполнилась, иди суетись...\",\r\n        RANGE_TRANQUILITY\r\n      ),\r\n      locE.cPhrase(\"Ты кажется не понял.\")\r\n    ),\r\n    locE.cStuff(\r\n      { id: 2, changes: [locE.cChange(PARAM_DETERMINATION, -5)] },\r\n      locE.cPhrase(\"Успокойся истеричка ебать!\", RANGE_HYSTERICS),\r\n      locE.cPhrase(\"Да все норм ты шо.\")\r\n    ),\r\n    locE.cStuff(\r\n      { id: 2, changes: [locE.cChange(PARAM_EQUILIBRIUM, 5)] },\r\n      locE.cPhrase(\"Ебать ты филосОф! Деду нравится.\", RANGE_TRANQUILITY),\r\n      locE.cPhrase(\"Эй ну извини ты шо.\")\r\n    )\r\n  ),\r\n  locE.cStage(\r\n    locE.cStuff(\r\n      { isA: true },\r\n      locE.cPhrase(\"В смысле ты мой отец?!\", RANGE_HYSTERICS),\r\n      locE.cPhrase(\"Ты мой батя?..\")\r\n    ),\r\n    locE.cStuff(\r\n      { id: 2, changes: [locE.cChange(PARAM_DETERMINATION, -5)] },\r\n      locE.cPhrase(\"Дорогуша остынь.\", RANGE_HYSTERICS),\r\n      locE.cPhrase(\"Да, батя. Только не волнуйся.\")\r\n    ),\r\n    locE.cStuff(\r\n      { id: 2, changes: [locE.cChange(PARAM_DETERMINATION, -5)] },\r\n      locE.cPhrase(\"Хех, ну в некотором смысле я пошутил\", RANGE_HYSTERICS),\r\n      locE.cPhrase(\"Ну, тест ДНК я не делал...\")\r\n    )\r\n  )\r\n);*/\r\n\r\nexport default locE;\r\n","export const PARAM_DETERMINATION = \"РЕШИМОСТЬ\";\r\nexport const PARAM_EQUILIBRIUM = \"УРАВНОВЕШЕННОСТЬ\";\r\n","export const RANGE_PANIC = \"ПАНИКА\";\r\nexport const RANGE_TENSION = \"НАПРЯЖЕННОСТЬ\";\r\nexport const RANGE_STABILITY = \"СТАБИЛЬНОСТЬ\";\r\n\r\nexport const RANGE_APATHY = \"АПАТИЯ\";\r\nexport const RANGE_UNCERTAINTY = \"НЕУВЕРЕННОСТЬ\";\r\nexport const RANGE_CONFIDENCE = \"УВЕРЕННОСТЬ\";\r\n","export const GRAD_PAN_APA = 'ПАН АПАТ'\r\nexport const GRAD_PAN_UNC = 'ПАН НЕУВ'\r\nexport const GRAD_PAN_CON = 'ПАН УВ'\r\n\r\nexport const GRAD_TEN_APA = 'НАПР АПАТ'\r\nexport const GRAD_TEN_UNC = 'НАПР НЕУВ'\r\nexport const GRAD_TEN_CON = 'НАПР УВ'\r\n\r\nexport const GRAD_STAB_APA = 'СТАБ АПАТ'\r\nexport const GRAD_STAB_UNC = 'СТАБ НЕУВ'\r\nexport const GRAD_STAB_CON = 'СТАБ УВ'\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\nexport default class TopicItem extends React.Component {\r\n  render() {\r\n    const { topic, isSelect, click } = this.props;\r\n\r\n    const style = {\r\n      backgroundColor: isSelect ? \"green\" : \"gray\",\r\n      display: \"inline-block\",\r\n      margin: \"0.2rem\",\r\n      padding: \"0.5rem\",\r\n      cursor: \"pointer\",\r\n      color: \"white\"\r\n    };\r\n    return (\r\n      <div\r\n        style={style}\r\n        onClick={() => {\r\n          click(topic.id);\r\n        }}\r\n      >\r\n        {topic.name}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class StageItem extends React.Component {\r\n  render() {\r\n    const { stage, click, isSelect, stuffText } = this.props;\r\n\r\n    const style = {\r\n      backgroundColor: isSelect ? \"blue\" : \"gray\",\r\n      cursor: \"pointer\",\r\n      display: \"inline-block\",\r\n      margin: \"0.2rem\",\r\n      padding: \"0.5rem\",\r\n      color: \"white\"\r\n    };\r\n    return (\r\n      <div\r\n        onClick={() => {\r\n          click(stage.id);\r\n        }}\r\n        style={style}\r\n      >\r\n        {stuffText(stage.id)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class StuffItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const nextStage = props.allStages.find(\r\n      s => s.id === props.stuff.next_stage_id\r\n    );\r\n    const currentTopic = nextStage?.topic_id;\r\n\r\n    this.state = {\r\n      currentTopic\r\n    };\r\n  }\r\n  render() {\r\n    const {\r\n      stuff,\r\n      methods,\r\n      range,\r\n      stat,\r\n      goStage,\r\n      allStages,\r\n      stuffText,\r\n      allTopics\r\n    } = this.props;\r\n\r\n    const phrase = methods.getPhrases(stuff.id).find(p => {\r\n      return (\r\n        p.rangeName === range ||\r\n        (range === \"none\" && !p.rangeName) ||\r\n        (range === \"GENERAL\" && p.isGeneral)\r\n      );\r\n    });\r\n\r\n    const { changes } = stuff;\r\n    const { currentTopic } = this.state;\r\n\r\n    const changesItems = !stuff.isA\r\n      ? stat.params.map(p => {\r\n          const c = changes.find(change => change.paramName === p.name);\r\n          const term = c ? c.term : 0;\r\n          return (\r\n            <span\r\n              style={{\r\n                display: \"inline-block\",\r\n                padding: \"0.5rem\",\r\n                backgroundColor: \"#ffccff\",\r\n                marginRight: \"0.5rem\"\r\n              }}\r\n              key={p.name}\r\n            >\r\n              {p.name}:\r\n              <input\r\n                type=\"number\"\r\n                style={{ width: \"40px\" }}\r\n                value={term}\r\n                onChange={e => {\r\n                  methods.updateStuff(stuff.id, stuff.next_stage_id, {\r\n                    paramName: p.name,\r\n                    term: Number(e.target.value)\r\n                  });\r\n                }}\r\n              />\r\n            </span>\r\n          );\r\n        })\r\n      : null;\r\n\r\n    const style = {\r\n      backgroundColor: stuff.isA ? \"#ccffff\" : \"#D3D3D3\",\r\n      cursor: \"pointer\",\r\n      margin: \"0.2rem\",\r\n\r\n      paddingTop: stuff.isA ? \"1rem\" : \"0.5rem\",\r\n      paddingBottom: stuff.isA ? \"1rem\" : \"0.5rem\",\r\n\r\n      display: \"inline-block\",\r\n      width: \"40%\"\r\n    };\r\n\r\n    const text = phrase ? phrase.text : \"\";\r\n\r\n    const linkItems = methods.getStages(this.state.currentTopic).map(s => {\r\n      return (\r\n        <option value={s.id} key={s.id}>\r\n          {stuffText(s.id)}\r\n        </option>\r\n      );\r\n    });\r\n\r\n    if (!allStages.find(s => s.id === stuff.next_stage_id)) {\r\n      linkItems.unshift(\r\n        <option value={\"error\"} key=\"0\">\r\n          {stuff.next_stage_id} NOT FOUND\r\n        </option>\r\n      );\r\n    }\r\n\r\n    const linkThemesItems = allTopics.map(t => {\r\n      return (\r\n        <option value={t.id} key={t.id}>\r\n          {t.name}\r\n        </option>\r\n      );\r\n    });\r\n\r\n    const next = !stuff.isA ? (\r\n      <div style={{ display: \"inline-block\", marginRight: \"0.5rem\" }}>\r\n        <div\r\n          style={{\r\n            display: \"inline-block\",\r\n            backgroundColor: \"red\",\r\n            cursor: \"pointer\",\r\n            color: \"white\"\r\n          }}\r\n          onClick={() => {\r\n            goStage(stuff.next_stage_id);\r\n          }}\r\n        >\r\n          ===>\r\n        </div>\r\n        {currentTopic}\r\n\r\n        <select\r\n          value={this.state.currentTopic}\r\n          onChange={e => {\r\n            const newCurrTopic = Number(e.target.value);\r\n            this.setState({ currentTopic: newCurrTopic });\r\n            const topicStages = methods.getStages(newCurrTopic);\r\n\r\n            if (\r\n              topicStages.length &&\r\n              !topicStages.find(s => s.id === stuff.next_stage_id)\r\n            )\r\n              methods.updateStuff(stuff.id, topicStages[0].id);\r\n          }}\r\n        >\r\n          {linkThemesItems}\r\n        </select>\r\n\r\n        <select\r\n          value={stuff.next_stage_id}\r\n          onChange={e => {\r\n            methods.updateStuff(stuff.id, Number(e.target.value));\r\n          }}\r\n        >\r\n          {linkItems}\r\n        </select>\r\n      </div>\r\n    ) : null;\r\n\r\n    const removeButton = !stuff.isA ? (\r\n      <button onClick={() => methods.removeStuff(stuff.id)}>X</button>\r\n    ) : null;\r\n\r\n    return (\r\n      <div>\r\n        {removeButton}\r\n        <div style={style}>\r\n          ({stuff.id}){\" \"}\r\n          <input\r\n            value={text}\r\n            style={{ width: \"90%\" }}\r\n            onChange={e => {\r\n              methods.updatePhrase(\r\n                stuff.id,\r\n                range === \"none\" ? null : range,\r\n                phrase ? phrase.id : null,\r\n                e.target.value\r\n              );\r\n            }}\r\n          />\r\n        </div>\r\n        {next}\r\n        {changesItems}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class RangeItem extends React.Component {\r\n  render() {\r\n    const { range, isSelect, click } = this.props;\r\n\r\n    const style = {\r\n      backgroundColor: isSelect ? \"orange\" : \"gray\",\r\n      cursor: \"pointer\",\r\n      display: \"inline-block\",\r\n      margin: \"0.2rem\",\r\n      padding: \"0.5rem\",\r\n      color: \"white\"\r\n    };\r\n    return (\r\n      <div\r\n        style={style}\r\n        onClick={() => {\r\n          click(range.name);\r\n        }}\r\n      >\r\n        {range.name}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class AddStuff extends React.Component {\r\n  render() {\r\n    const { methods, stageId, topic } = this.props;\r\n\r\n    const nextStageId = methods.getStages(topic.id)[0].id;\r\n\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            methods.addStuff(stageId, false, nextStageId, []);\r\n          }}\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport StuffItem from \"../Stuffs/StuffItem\";\r\nimport RangeItem from \"../Ranges/RangeItem\";\r\nimport AddStuff from \"../Stuffs/AddStuff\";\r\n\r\nexport default class Stage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentRange: \"none\" };\r\n  }\r\n\r\n  click = name => {\r\n    this.setState({ currentRange: name });\r\n  };\r\n  splitStuffs(stuffs) {\r\n    const answer = stuffs.find(stuff => stuff.isA);\r\n    const pAnswers = stuffs.filter(stuff => !stuff.isA);\r\n    return { answer, pAnswers };\r\n  }\r\n  render() {\r\n    const {\r\n      stage,\r\n      methods,\r\n      stat,\r\n      changeStage,\r\n      allStages,\r\n      stuffText,\r\n      topic,\r\n      allTopics\r\n    } = this.props;\r\n\r\n    const stuffs = methods.getStuffs(stage.id);\r\n\r\n    const { answer, pAnswers } = this.splitStuffs(stuffs);\r\n\r\n    const stuffsItems = [answer, ...pAnswers].map(stuff => {\r\n      const res = stuff ? (\r\n        <StuffItem\r\n          stat={stat}\r\n          range={this.state.currentRange}\r\n          methods={methods}\r\n          key={stuff.id}\r\n          stuff={stuff}\r\n          goStage={changeStage}\r\n          allStages={allStages}\r\n          allTopics={allTopics}\r\n          stuffText={stuffText}\r\n        />\r\n      ) : null;\r\n\r\n      return res;\r\n    });\r\n\r\n    if (\"GENERAL\" === this.state.currentRange) {\r\n      stuffsItems.shift();\r\n    }\r\n\r\n    const { ranges } = stat;\r\n\r\n    const generStuff = (\r\n      <RangeItem\r\n        isSelect={\"GENERAL\" === this.state.currentRange}\r\n        range={{ name: \"GENERAL\" }}\r\n        click={this.click}\r\n      />\r\n    );\r\n\r\n    const noRanges = (\r\n      <RangeItem\r\n        isSelect={\"none\" === this.state.currentRange}\r\n        range={{ name: \"none\" }}\r\n        click={this.click}\r\n      />\r\n    );\r\n\r\n    const rangesItems = ranges.map(range => (\r\n      <RangeItem\r\n        isSelect={range.name === this.state.currentRange}\r\n        key={range.name}\r\n        range={range}\r\n        click={this.click}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <h2 align=\"center\">\r\n          {stuffText(stage.id)}{\" \"}\r\n          <button\r\n            onClick={() => {\r\n              methods.removeStage(stage.id);\r\n            }}\r\n          >\r\n            X\r\n          </button>{\" \"}\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={stage.isStart}\r\n            onChange={e => {\r\n              methods.updateStage(stage.id, e.target.checked);\r\n            }}\r\n          />\r\n        </h2>\r\n        {generStuff}\r\n        {noRanges}\r\n        {rangesItems}\r\n        {stuffsItems}\r\n        <AddStuff topic={topic} methods={methods} stageId={stage.id} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport StageItem from \"../Stages/StageItem\";\r\nimport Stage from \"../Stages/Stage\";\r\n\r\nexport default class Topic extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { newStageStart: false };\r\n  }\r\n  stuffText = id => {\r\n    if (id) {\r\n      const { methods } = this.props;\r\n\r\n      const nextStuff = methods.getStuffs(id).find(stuff => stuff.isA);\r\n\r\n      if (nextStuff) {\r\n        const nextPhrases = methods.getPhrases(nextStuff.id);\r\n        const nextPhrase = nextPhrases.find(p => !p.rangeName);\r\n\r\n        if (nextPhrase) {\r\n          return `(${id}) ${nextPhrase.text.slice(0, 7)}...`;\r\n        } else return `(${id}) NOT PHRASE...`;\r\n      } else return \"NOT FOUND\";\r\n    }\r\n    return null;\r\n  };\r\n  render() {\r\n    const {\r\n      topic,\r\n      stat,\r\n      methods,\r\n      currentStage,\r\n      click,\r\n      changeStage,\r\n      allStages,\r\n      allTopics\r\n    } = this.props;\r\n\r\n    const { grads } = stat;\r\n    const { graduation } = topic;\r\n\r\n    const stages = methods.getStages(topic.id);\r\n    const stagesItems = stages.map(stage => {\r\n      const isSelect = stage.id === currentStage;\r\n\r\n      return (\r\n        <StageItem\r\n          stuffText={this.stuffText}\r\n          key={stage.id}\r\n          stage={stage}\r\n          isSelect={isSelect}\r\n          click={click}\r\n        />\r\n      );\r\n    });\r\n\r\n    const optItems = grads.map(grad => {\r\n      return (\r\n        <option value={grad.name} key={grad.name}>\r\n          {grad.name}\r\n        </option>\r\n      );\r\n    });\r\n\r\n    const curStage = stages.find(stage => stage.id === currentStage);\r\n\r\n    const stageView = currentStage ? (\r\n      <Stage\r\n        stage={curStage}\r\n        methods={methods}\r\n        stat={stat}\r\n        allStages={allStages}\r\n        allTopics={allTopics}\r\n        changeStage={changeStage}\r\n        stuffText={this.stuffText}\r\n        topic={topic}\r\n      />\r\n    ) : null;\r\n\r\n    return (\r\n      <div>\r\n        <h1 align=\"center\">\r\n          Topic{\" \"}\r\n          <input\r\n            value={topic.name}\r\n            onChange={e => {\r\n              methods.updateTopic(\r\n                topic.id,\r\n                e.target.value,\r\n                topic.graduation,\r\n                topic.isFin,\r\n                topic.isStart\r\n              );\r\n            }}\r\n          />\r\n          , grad:\r\n          <select\r\n            value={graduation}\r\n            onChange={e => {\r\n              methods.updateTopic(\r\n                topic.id,\r\n                topic.name,\r\n                e.target.value,\r\n                topic.isFin,\r\n                topic.isStart\r\n              );\r\n            }}\r\n          >\r\n            {optItems}\r\n          </select>\r\n          Start:\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={topic.isStart}\r\n            onChange={e => {\r\n              methods.updateTopic(\r\n                topic.id,\r\n                topic.name,\r\n                topic.graduation,\r\n                topic.isFin,\r\n                e.target.checked\r\n              );\r\n            }}\r\n          />\r\n          Final:\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={topic.isFin}\r\n            onChange={e => {\r\n              methods.updateTopic(\r\n                topic.id,\r\n                topic.name,\r\n                topic.graduation,\r\n                e.target.checked,\r\n                topic.isStart\r\n              );\r\n            }}\r\n          />\r\n          <button\r\n            onClick={() => {\r\n              methods.removeTopic(topic.id);\r\n            }}\r\n            style={{ marginLeft: \"1rem\" }}\r\n          >\r\n            X\r\n          </button>\r\n        </h1>\r\n\r\n        <br />\r\n        <div>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.newStageStart}\r\n            onChange={e => {\r\n              this.setState({ newStageStart: e.target.checked });\r\n            }}\r\n          />\r\n          <button\r\n            onClick={() => {\r\n              methods.addStage(topic.id, this.state.newStageStart);\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n        {stagesItems}\r\n        <br />\r\n        {stageView}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class AddTopic extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      graduation: props.stat.grads[0].name,\r\n      name: \"\",\r\n      isFin: false,\r\n      isStart: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { graduation, name, isFin, isStart } = this.state;\r\n    const { stat, methods } = this.props;\r\n    const { grads } = stat;\r\n    const optItems = grads.map(grad => (\r\n      <option value={grad.name} key={grad.name}>\r\n        {grad.name}\r\n      </option>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <input\r\n          value={name}\r\n          onChange={e => {\r\n            this.setState({ name: e.target.value });\r\n          }}\r\n        />\r\n        <select\r\n          value={graduation}\r\n          onChange={e => {\r\n            this.setState({ graduation: e.target.value });\r\n          }}\r\n        >\r\n          {optItems}\r\n        </select>\r\n        Start:\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={isStart}\r\n          onChange={e => {\r\n            this.setState({ isStart: e.target.checked });\r\n          }}\r\n        />\r\n        Final:\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={isFin}\r\n          onChange={e => {\r\n            this.setState({ isFin: e.target.checked });\r\n          }}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            methods.addTopic(name, graduation, isFin, isStart);\r\n          }}\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Loc } from \"../../mlpa_engine\";\r\nimport locE from \"./../../game/loc_example\";\r\nimport TopicItem from \"./Topics/TopicItem\";\r\nimport Topic from \"./Topics/Topic\";\r\nimport AddTopic from \"./Topics/AddTopic\";\r\nimport exportFromJSON from \"export-from-json\";\r\nimport mlpaState from \"../../mlpa_state\";\r\n\r\nexport default class Editor extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.myStorage = window.localStorage;\r\n    this.loc = this.getLoc();\r\n    const { topicId, stageId } = this.getTopStag();\r\n    this.state = { currentTopic: topicId, currentStage: stageId };\r\n  }\r\n\r\n  import() {\r\n    this.loc = new Loc();\r\n    this.loc.ssign(mlpaState);\r\n    this.forceUpdate();\r\n  }\r\n\r\n  getTopStag() {\r\n    const topicId = this.loc.topics[0] ? this.loc.topics[0].id : null;\r\n    const stageId = this.loc._getStages(topicId)[0]\r\n      ? this.loc._getStages(topicId)[0].id\r\n      : null;\r\n    return { topicId, stageId };\r\n  }\r\n\r\n  exportFile() {\r\n    const data = this.loc;\r\n    const fileName = \"mlpa_state\";\r\n    const exportType = \"json\";\r\n\r\n    exportFromJSON({ data, fileName, exportType });\r\n  }\r\n\r\n  getLoc() {\r\n    const loc = new Loc();\r\n    const data = JSON.parse(this.myStorage.getItem(\"locData\"));\r\n    loc.ssign(data);\r\n    return locE; //data ? loc : locE;\r\n  }\r\n\r\n  saveLoc() {\r\n    const locData = JSON.stringify(this.loc);\r\n    this.myStorage.setItem(\"locData\", locData);\r\n  }\r\n\r\n  addTopic = (name, gradName, isFin, isStart) => {\r\n    this.loc.cTopic(name, gradName, isFin, isStart);\r\n    this.forceUpdate();\r\n  };\r\n\r\n  addStage = (topicId, isStart) => {\r\n    this.loc.addStages(\r\n      topicId,\r\n      this.loc.cStage(\r\n        isStart,\r\n        this.loc.cStuff({ isA: true }, this.loc.cPhrase(\"space\"))\r\n      )\r\n    );\r\n    this.forceUpdate();\r\n  };\r\n  updateStage = (id, isStart) => {\r\n    console.log(id + \" \" + isStart);\r\n    const stage = this.loc.stages.find(s => s.id === id);\r\n    stage.isStart = isStart;\r\n    this.forceUpdate();\r\n  };\r\n  updateTopic = (topicId, name, gradName, isFin, isStart) => {\r\n    const topic = this.loc._getTopic(topicId);\r\n    topic.name = name;\r\n    topic.graduation = gradName;\r\n    topic.isFin = isFin;\r\n    topic.isStart = isStart;\r\n    this.forceUpdate();\r\n  };\r\n  addPhrase = (stuffId, range, text, isGeneral) => {\r\n    this.loc.addPhrases(stuffId, [this.loc.cPhrase(text, isGeneral, range)]);\r\n    this.forceUpdate();\r\n  };\r\n\r\n  updatePhrase = (stuffId, range, id, newText) => {\r\n    const phrase = this.loc.phrases.find(p => p.id === id);\r\n    if (phrase) {\r\n      phrase.text = newText;\r\n      if (!newText && !phrase.isGeneral && phrase.rangeName)\r\n        this.removePhrase(phrase.id);\r\n    } else {\r\n      this.addPhrase(stuffId, range, newText);\r\n    }\r\n    this.forceUpdate();\r\n  };\r\n\r\n  addStuff = (stageId, isA, nextStageId, changes = []) => {\r\n    const newStaff = this.loc.cStuff(\r\n      {\r\n        isA,\r\n        id: nextStageId,\r\n        changes: changes.map(c => this.loc.cChange(c.paramName, c.term))\r\n      },\r\n      this.loc.cPhrase(\"space\"),\r\n      this.loc.cPhrase(\"generalSpace\", true)\r\n    );\r\n\r\n    this.loc.addStuffs(stageId, newStaff);\r\n\r\n    this.forceUpdate();\r\n  };\r\n  updateStuff = (id, nextStageId, ...changes) => {\r\n    const stuff = this.loc.stuffs.find(s => s.id === id);\r\n    stuff.next_stage_id = nextStageId;\r\n    changes.forEach(change => {\r\n      const changeIndex = stuff.changes.findIndex(\r\n        c => c.paramName === change.paramName\r\n      );\r\n      const thisStuff = stuff.changes[changeIndex];\r\n      if (!thisStuff) {\r\n        stuff.changes.push(this.loc.cChange(change.paramName, change.term));\r\n      } else {\r\n        if (change.term) thisStuff.term = change.term;\r\n        else stuff.changes.splice(changeIndex, 1);\r\n      }\r\n    });\r\n    this.forceUpdate();\r\n  };\r\n\r\n  removeTopic = id => {\r\n    const index = this.loc.topics.findIndex(t => t.id === id);\r\n    this.loc.topics.splice(index, 1);\r\n    const stages = this.loc._getStages(id);\r\n    stages.forEach(s => {\r\n      this.removeStage(s.id);\r\n    });\r\n\r\n    this.setState({ currentTopic: null, currentStage: null });\r\n    this.forceUpdate();\r\n  };\r\n  removeStage = id => {\r\n    const index = this.loc.stages.findIndex(s => s.id === id);\r\n    this.loc.stages.splice(index, 1);\r\n    const stuffs = this.loc._getStuffs(id);\r\n    stuffs.forEach(s => {\r\n      if (s.next_stage_id === id) {\r\n        s.next_stage_id = null;\r\n      }\r\n      this.removeStuff(s.id);\r\n    });\r\n    this.setState({ currentStage: null });\r\n    this.forceUpdate();\r\n  };\r\n  removeStuff = id => {\r\n    const index = this.loc.stuffs.findIndex(s => s.id === id);\r\n    this.loc.stuffs.splice(index, 1);\r\n    const phrases = this.loc._getPhrases(id);\r\n    phrases.forEach(p => {\r\n      this.removePhrase(p.id);\r\n    });\r\n    this.forceUpdate();\r\n  };\r\n  removePhrase = id => {\r\n    const index = this.loc.phrases.findIndex(p => p.id === id);\r\n    this.loc.phrases.splice(index, 1);\r\n    this.forceUpdate();\r\n  };\r\n\r\n  click = id => {\r\n    const firstStage = this.loc._getStages(id)[0];\r\n    if (firstStage) this.changeStage(firstStage.id);\r\n    else this.setState({ currentTopic: id, currentStage: null });\r\n    this.forceUpdate();\r\n  };\r\n  changeStage = id => {\r\n    const stage = this.loc.stages.find(s => s.id === id);\r\n    if (stage) {\r\n      this.setState({ currentTopic: stage.topic_id, currentStage: id });\r\n    }\r\n\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    const { topics, grads, params, ranges } = this.loc;\r\n    const stat = {\r\n      grads,\r\n      params,\r\n      ranges\r\n    };\r\n\r\n    const { currentStage, currentTopic } = this.state;\r\n\r\n    const methods = {\r\n      addTopic: this.addTopic,\r\n      addStage: this.addStage,\r\n      updateStage: this.updateStage,\r\n      updateTopic: this.updateTopic,\r\n      removeTopic: this.removeTopic,\r\n      removeStage: this.removeStage,\r\n      updateStuff: this.updateStuff,\r\n      removeStuff: this.removeStuff,\r\n      getStages: this.loc._getStages,\r\n      getStuffs: this.loc._getStuffs,\r\n      getPhrases: this.loc._getPhrases,\r\n      addStuff: this.addStuff,\r\n      updatePhrase: this.updatePhrase,\r\n      addPhrase: this.addPhrase,\r\n      removePhrase: this.removePhrase\r\n    };\r\n\r\n    const topicItems = topics.map(topic => {\r\n      const isSelect = topic.id === currentTopic;\r\n      return (\r\n        <TopicItem\r\n          key={topic.id}\r\n          topic={topic}\r\n          methods={methods}\r\n          isSelect={isSelect}\r\n          click={this.click}\r\n        />\r\n      );\r\n    });\r\n\r\n    const topicView = currentTopic ? (\r\n      <Topic\r\n        allTopics={this.loc.topics}\r\n        allStages={this.loc.stages}\r\n        currentStage={currentStage}\r\n        topic={topics.find(topic => topic.id === this.state.currentTopic)}\r\n        stat={stat}\r\n        methods={methods}\r\n        goTopic={this.click}\r\n        click={this.changeStage}\r\n        changeStage={this.changeStage}\r\n      />\r\n    ) : null;\r\n\r\n    console.log(this.loc);\r\n    return (\r\n      <div>\r\n        <button onClick={() => this.import()}>import</button>\r\n        <button onClick={() => this.exportFile()}>export</button>\r\n        <br />\r\n        <AddTopic methods={methods} stat={stat} />\r\n        {topicItems}\r\n        {topicView}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport UI from \"./components/Game/UI\";\r\nimport Editor from \"./components/Editor/Editor\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <UI />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}