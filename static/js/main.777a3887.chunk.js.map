{"version":3,"sources":["components/Game/AnswerI/AnswerI.js","components/Game/Params.js","components/Game/DialogBox/PhraseText.js","components/Game/DialogBox/DialogBox.js","components/Game/Visual/Visual.js","components/Game/UI.js","components/Game/Settings/FullScreen.js","components/Game/Settings/Settiings.js","components/Game/Screen.js","mlpa_engine/graduation.js","mlpa_engine/parameter.js","mlpa_engine/phrase.js","mlpa_engine/range.js","mlpa_engine/stage.js","mlpa_engine/stuff.js","mlpa_engine/topic.js","mlpa_engine/change.js","mlpa_engine/interf.js","game/loc_example.js","mlpa_engine/loc.js","game/parameters.js","game/ranges.js","game/grads.js","components/Game/Game.js","components/Editor/Topics/TopicItem.js","components/Editor/Stages/StageItem.js","components/Editor/Stuffs/StuffItem.js","components/Editor/Ranges/RangeItem.js","components/Editor/Stuffs/AddStuff.js","components/Editor/Stages/Stage.js","components/Editor/Topics/Topic.js","components/Editor/Topics/AddTopic.js","components/Editor/Editor.js","App.js","serviceWorker.js","index.js"],"names":["AnswerI","React","Component","this","props","text","click","disabled","isHiding","disClass","className","onClick","toUpperCase","PhraseText","state","isStart","curText","balText","pAnsswerd","writingFinish","isPlayer","curLen","length","newText","slice","setTimeout","setState","nextLetterLoop","title","titleClass","DialogBox","dDelay","isPAnsserd","pPhrase","cPhrase","hidingClass","hiding","cAnswer","Visual","c","refs","myCanvas","ctx","getContext","img","Image","src","window","location","href","onload","event","target","drawImage","width","height","id","ref","UI","loc","currStageId","getStartId","getStageData","answers","stageId","interf","getInterfaceStage","replic","phrase","stuffId","newStageId","calcStuff","getCorrectPhrase","answersItems","map","answer","key","generalPhrase","update","FullScreen","render","fullScreenOn","document","getElementById","requestFullscreen","Settings","Screen","style","display","backgroundColor","marginLeft","position","overflow","children","Graduation","name","rangesNames","Parameter","value","isAchiev","Phrase","rangeName","isGeneral","stuff_id","Range","paramName","min","max","Stage","isBeen","topic_id","Stuff","next_stage_id","changes","isA","stage_id","Topic","graduation","isFin","Change","term","Interf","locE","params","ranges","grads","topics","stuffs","stages","phrases","lim","addStages","topicId","_getTopic","newStages","stage","concat","console","error","_getStages","filter","_getStuffs","stuff","_getPhrases","_getParam","find","param","checkStageFinal","s","checkGrad","gradName","_getGrad","rName","_getRange","forEach","range","checkRange","idState","getId","type","startTopic","topic","startStage","_editParams","getGeneralPhrase","neutralPhrase","i","checkAnswToGrad","nextStage","replicStuff","ssign","data","k","addTopics","addStuffs","nextStageId","addPhrases","newStuffs","newPhrases","phraseId","grad","change","newValue","answersAll","correctNeutAchiev","correctFinal","incrrectNeutral","r","p","correct","push","addParams","cParam","addRanges","cRange","addGrads","cGrad","Game","mlpaState","defaultParams","screen","TopicItem","isSelect","margin","padding","cursor","color","border","StageItem","stuffText","isFinal","methods","StuffItem","allStages","currentTopic","viewAchievs","stat","goStage","allTopics","getPhrases","changesItems","inputElem","checked","onChange","e","updateStuff","Boolean","Number","marginRight","paddingTop","paddingBottom","linkItems","getStages","unshift","linkThemesItems","t","next","newCurrTopic","topicStages","removeButton","removeStuff","viewBox","updatePhrase","RangeItem","AddStuff","addStuff","currentRange","acheivs","pAnswers","changeStage","getStuffs","splitStuffs","stuffsItems","shift","generStuff","noRanges","rangesItems","getParam","align","removeStage","updateStage","nextStuff","nextPhrase","newStageStart","currentStage","stagesItems","optItems","curStage","stageView","updateTopic","removeTopic","addStage","AddTopic","addTopic","App","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.777a3887.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nexport default class AnswerI extends React.Component {\n  render() {\n    const { text, click, disabled, isHiding } = this.props;\n    const disClass = disabled ? (isHiding ? \"disabled\" : \"\") : \"undisabled\";\n    return (\n        <div>\n      <div\n        className={`answer ${disClass}`}\n        onClick={() => {\n          if (!disabled) click();\n        }}\n      >\n        {text.toUpperCase()}\n      </div>\n        </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class Params extends React.Component {\n  /* constructor() {\n    super();\n\n  }*/\n\n  correctGrads() {\n    const { grads, checkGrad } = this.props;\n    const corrGrads = grads.filter(g => checkGrad(g.name));\n\n    return corrGrads;\n  }\n  render() {\n    const { params, lim, edit } = this.props;\n\n    const correctGrads = this.correctGrads();\n    const correctGradsItems = correctGrads.map(g => (\n      <div key={g.name}>\n        \n        <span style={{ color: \"white\" }}>{g.name}</span>\n      </div>\n    ));\n\n    const paramItems = params.map(param => {\n      return param.isAchiev ? (\n        <div key={param.name}>\n          <input type=\"checkbox\" disabled checked={param.value} />{\" \"}\n          <span style={{ color: \"white\" }}>{param.name}</span>\n        </div>\n      ) : (\n        <div key={param.name}>\n          <div>\n            <button\n              onClick={() => {\n                edit(param.name, -1);\n              }}\n            >\n              -\n            </button>\n            <div\n              style={{\n                display: \"inline-block\",\n                height: \"15px\",\n                width: `${param.value * 10}px`,\n                backgroundColor: \"red\"\n              }}\n            ></div>\n            <div\n              style={{\n                display: \"inline-block\",\n                height: \"15px\",\n                width: `${(lim - param.value) * 10}px`,\n                backgroundColor: \"gray\"\n              }}\n            ></div>\n\n            <button\n              onClick={() => {\n                edit(param.name, 1);\n              }}\n            >\n              +\n            </button>\n            <span style={{ color: \"white\" }}>{param.name}</span>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div style={{position: 'absolute', top: '0'}}>\n        {paramItems}\n        {correctGradsItems}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default class PhraseText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isStart: true, curText: \"\", balText: \"\" };\n  }\n  nextLetterLoop() {\n    const { text, pAnsswerd, writingFinish, isPlayer } = this.props;\n\n    const { curText } = this.state;\n    if (text !== curText) {\n      const curLen = curText.length;\n      const newText = text.slice(0, curLen + 1);\n\n      const balText = text.slice(curLen + 1);\n\n      setTimeout(() => {\n        this.setState({ curText: newText, isStart: false, balText });\n        this.nextLetterLoop();\n      }, 20);\n    } else isPlayer ? pAnsswerd() : writingFinish();\n  }\n  render() {\n    const { isPlayer } = this.props;\n    const { isStart, curText, balText } = this.state;\n    if (isStart) this.nextLetterLoop();\n    const title = isPlayer ? \"Я\" : \"Она\";\n    const titleClass = isPlayer ? \"text-p\" : \"text-c\";\n    return (\n      <div className=\"phrase-text\">\n        <span className={titleClass}>{title}/</span> {curText}\n        <span className=\"bal-text\">{balText}</span>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport PhraseText from \"./PhraseText\";\n\nexport default class DialogBox extends React.Component {\n  constructor() {\n    super();\n    this.state = { isPAnsserd: false };\n  }\n\n  pAnsswerd = () => {\n    const { dDelay } = this.props;\n    setTimeout(() => {\n      this.setState({ isPAnsserd: true });\n    }, dDelay);\n  };\n  render() {\n    const { pPhrase, cPhrase, writingFinish, hiding } = this.props;\n    const { isPAnsserd } = this.state;\n\n    const hidingClass = hiding ? \"phrase-hiding\" : \"\";\n\n    const cAnswer = isPAnsserd ? (\n      <PhraseText text={cPhrase} writingFinish={writingFinish} />\n    ) : null;\n\n    return (\n      <div className=\"dialog-box\">\n        <div className={`phrase-interface ${hidingClass}`}>\n          <div className=\"phrase-content\">\n            <PhraseText text={pPhrase} isPlayer pAnsswerd={this.pAnsswerd} />\n            {cAnswer}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class Visual extends React.Component {\n\n  async componentDidMount() {\n    const c = this.refs.myCanvas;\n    const ctx = c.getContext(\"2d\");\n\n    let img = new Image();\n    img.src = `${window.location.href}/img/background.png`;\n\n    img.onload = event => {\n      const { target } = event;\n      ctx.drawImage(target, 0, 0, c.width, c.height);\n    };\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return (\n      <div>\n        <canvas\n          id=\"myCanvas\"\n          ref=\"myCanvas\"\n          width={width}\n          height={height}\n        ></canvas>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport Params from \"./Params\";\nimport AnswerI from \"./AnswerI/AnswerI\";\nimport DialogBox from \"./DialogBox/DialogBox\";\nimport \"./style.css\";\nimport Visual from \"./Visual/Visual\";\n\nexport default class UI extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loc = props.loc;\n    const currStageId = this.loc.getStartId();\n    const { cPhrase, answers } = this.getStageData(currStageId);\n    this.state = {\n      cPhrase,\n      pPhrase: \"О чем ты сейчас думаешь?\",\n      answers,\n      disabled: true,\n      currStageId,\n      isHiding: false,\n      dDelay: 2000\n    };\n  }\n  getStageData(stageId) {\n    const interf = this.loc.getInterfaceStage(stageId);\n    const { answers, replic } = interf;\n    const { phrase } = replic;\n\n    return {\n      cPhrase: phrase,\n      answers\n    };\n  }\n  update(stuffId) {\n    const newStageId = this.loc.calcStuff(stuffId);\n    const pPhrase = this.loc.getCorrectPhrase(stuffId);\n    const { cPhrase, answers } = this.getStageData(newStageId);\n\n    this.setState({\n      isHiding: true,\n      disabled: true\n    });\n\n    setTimeout(() => {\n      this.setState({\n        pPhrase,\n        cPhrase,\n        currStageId: newStageId,\n        answers,\n        isHiding: false,\n        dDelay: 500 //ДОБАВИТЬ ЗАВИСИМОСТЬ ОТ ПОТРЯСЕНИЯ\n      });\n    }, 500);\n  }\n\n  writingFinish() {\n    this.setState({ disabled: false });\n  }\n  render() {\n    const {\n      pPhrase,\n      cPhrase,\n      currStageId,\n      answers,\n      disabled,\n      isHiding,\n      dDelay\n    } = this.state;\n    const answersItems = answers.map(answer => {\n      return (\n        <AnswerI\n          key={answer.id}\n          text={answer.generalPhrase}\n          disabled={disabled}\n          isHiding={isHiding}\n          click={() => {\n            this.update(answer.id);\n          }}\n        />\n      );\n    });\n\n    const { width, height } = this.props;\n\n    return (\n      <div>\n        <Visual width={width} height={height} />\n\n        <div className=\"answers\">{answersItems}</div>\n        <DialogBox\n          hiding={isHiding}\n          key={currStageId}\n          pPhrase={pPhrase}\n          cPhrase={cPhrase}\n          dDelay={dDelay}\n          writingFinish={() => {\n            this.writingFinish();\n          }}\n        />\n      </div>\n    );\n  }\n}\n\n/*\n <Params\n          params={this.loc.params}\n          lim={this.loc.lim}\n          edit={(paramName, term) => {\n            this.loc._editParams([this.loc.cChange(paramName, term)]);\n            this.forceUpdate();\n          }}\n          grads={this.loc.grads}\n          checkGrad={this.loc.checkGrad}\n        />\n*/\n","import React from \"react\";\n\nexport default class FullScreen extends React.Component {\n  fullScreenOn() {\n    const screenDom = document.getElementById(\"screenDom\");\n    screenDom.requestFullscreen();\n  }\n  render = () => {\n    return (\n      <button\n        onClick={() => {\n          this.fullScreenOn();\n        }}\n      >\n        Full Screen\n      </button>\n    );\n  };\n}\n","import React from \"react\";\nimport FullScreen from \"./FullScreen\";\n\nexport default class Settings extends React.Component {\n  render() {\n    return (\n      <div className=\"settings\">\n        <FullScreen />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Settings from \"./Settings/Settiings\";\nimport \"./Settings/style.css\";\n\nexport default class Screen extends React.Component {\n  render() {\n    const { width, height } = this.props;\n    const style = {\n      width,\n      height,\n      display: \"inline-block\",\n      backgroundColor: \"gray\",\n      marginLeft: `calc(50% - ${width / 2}px)`,\n      position: \"absolute\",\n      overflow: \"hidden\"\n    };\n    return (\n      <div id=\"screenDom\" style={style}>\n        <Settings />\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","export default class Graduation {\n  constructor(name, rangesNames) {\n    this.name = name;\n    this.rangesNames = rangesNames;\n  }\n}\n","export default class Parameter {\n  constructor(name, value, isAchiev = false) {\n    this.name = name;\n    this.value = value;\n    this.isAchiev = isAchiev;\n  }\n}\n","export default class Phrase {\n  constructor(rangeName, text, isGeneral, id) {\n    this.rangeName = rangeName;\n    this.text = text;\n    this.isGeneral = isGeneral;\n    this.id = id;\n  }\n  stuff_id = null;\n}\n","export default class Range {\n  constructor(name, paramName, min, max) {\n    this.name = name;\n    this.paramName = paramName;\n    this.min = min;\n    this.max = max;\n  }\n}\n","export default class Stage {\n  constructor(isStart, id) {\n    this.id = id;\n    this.isStart = isStart\n  }\n  isBeen = false;\n  topic_id = null;\n}\n","export default class Stuff {\n  constructor(next_stage_id, changes = [], isA = false, id) {\n    this.next_stage_id = next_stage_id;\n    this.changes = changes;\n    this.isA = isA;\n    this.id = id;\n  }\n  stage_id = null;\n}\n","export default class Topic {\n  constructor(name, graduation, isFin, isStart, id) {\n    this.name = name;\n    this.graduation = graduation;\n    this.isFin = isFin;\n    this.isStart = isStart;\n    this.id = id;\n  }\n}\n","export default class Change {\n  constructor(paramName, term) {\n    this.paramName = paramName;\n    this.term = term;\n  }\n}\n","export default class Interf {\n  constructor(generalPhrase, phrase, id) {\n    this.generalPhrase = generalPhrase;\n    this.phrase = phrase;\n    this.id = id;\n  }\n}\n","import { Loc } from \"./../mlpa_engine\";\n\nimport {\n  PARAM_EQUILIBRIUM,\n  PARAM_DETERMINATION,\n  PARAM_DOG\n} from \"./parameters\";\n\nimport {\n  RANGE_PANIC,\n  RANGE_TENSION,\n  RANGE_STABILITY,\n  RANGE_APATHY,\n  RANGE_UNCERTAINTY,\n  RANGE_CONFIDENCE,\n  RANGE_DOG\n} from \"./ranges\";\n\nimport {\n  GRAD_PAN_APA,\n  GRAD_PAN_UNC,\n  GRAD_PAN_CON,\n  GRAD_TEN_APA,\n  GRAD_TEN_UNC,\n  GRAD_TEN_CON,\n  GRAD_STAB_APA,\n  GRAD_STAB_UNC,\n  GRAD_STAB_CON,\n  GRAD_DOG\n} from \"./grads\";\n\nconst locE = new Loc();\nlocE.addParams(\n  locE.cParam(PARAM_DETERMINATION, 2),\n  locE.cParam(PARAM_EQUILIBRIUM, 4),\n\n  locE.cParam(PARAM_DOG, false, true)\n);\n\nlocE.addRanges(\n  locE.cRange(RANGE_PANIC, 1, 5, PARAM_EQUILIBRIUM),\n  locE.cRange(RANGE_TENSION, 6, 10, PARAM_EQUILIBRIUM),\n  locE.cRange(RANGE_STABILITY, 11, 15, PARAM_EQUILIBRIUM),\n\n  locE.cRange(RANGE_APATHY, 1, 5, PARAM_DETERMINATION),\n  locE.cRange(RANGE_UNCERTAINTY, 6, 10, PARAM_DETERMINATION),\n  locE.cRange(RANGE_CONFIDENCE, 11, 15, PARAM_DETERMINATION),\n\n  locE.cRange(RANGE_DOG, true, true, PARAM_DOG)\n);\nlocE.addGrads(\n  locE.cGrad(GRAD_PAN_APA, RANGE_PANIC, RANGE_APATHY),\n  locE.cGrad(GRAD_PAN_UNC, RANGE_PANIC, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_PAN_CON, RANGE_PANIC, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_TEN_APA, RANGE_TENSION, RANGE_APATHY),\n  locE.cGrad(GRAD_TEN_UNC, RANGE_TENSION, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_TEN_CON, RANGE_TENSION, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_STAB_APA, RANGE_STABILITY, RANGE_APATHY),\n  locE.cGrad(GRAD_STAB_UNC, RANGE_STABILITY, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_STAB_CON, RANGE_STABILITY, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_DOG, RANGE_DOG)\n);\n\nexport default locE;\n","import Parameter from \"./parameter\";\nimport Range from \"./range\";\nimport Graduation from \"./graduation\";\nimport Phrase from \"./phrase\";\nimport Stuff from \"./stuff\";\nimport Change from \"./change\";\nimport Stage from \"./stage\";\nimport Topic from \"./topic\";\nimport Interf from \"./interf\";\n\nexport default class Loc {\n  params = [];\n  ranges = [];\n  grads = [];\n  topics = [];\n\n  stuffs = [];\n  stages = [];\n  phrases = [];\n\n  lim = 15;\n\n  cParam(name, value, isAchiev) {\n    return new Parameter(name, value, isAchiev);\n  }\n  addParams(...params) {\n    this.params = this.params.concat(params);\n  }\n\n  cRange(name, min, max, paramName) {\n    return new Range(name, paramName, min, max);\n  }\n  addRanges(...ranges) {\n    this.ranges = this.ranges.concat(ranges);\n  }\n\n  cGrad(name, ...rangesNames) {\n    return new Graduation(name, rangesNames);\n  }\n  addGrads(...grads) {\n    this.grads = this.grads.concat(grads);\n  }\n\n  cTopic(name, gradName, isFin, isStart, ...stages) {\n    const topicId = this.getId(\"topics\");\n    this.addTopics(new Topic(name, gradName, isFin, isStart, topicId));\n    this.addStages(topicId, ...stages);\n  }\n\n  addTopics(...topics) {\n    this.topics = this.topics.concat(topics);\n  }\n\n  cStage(isStart, ...answers) {\n    const stageId = this.getId(\"stages\");\n    this.addStuffs(stageId, ...answers);\n    return new Stage(isStart, stageId);\n  }\n\n  addStages = (topicId, ...stages) => {\n    if (this._getTopic(topicId)) {\n      const newStages = stages.map(stage => {\n        return { ...stage, topic_id: topicId };\n      });\n      this.stages = this.stages.concat(newStages);\n    } else console.error(`Topic ${topicId} not found!`);\n  };\n\n  cStuff(props, ...phrases) {\n    const { id: nextStageId, changes = [], isA } = props ? props : {};\n    const stuffId = this.getId(\"stuffs\");\n\n    this.addPhrases(stuffId, phrases);\n    return new Stuff(\n      nextStageId,\n      !isA ? changes.filter(c => c.term) : [],\n      isA,\n      stuffId\n    );\n  }\n\n  addStuffs(stageId, ...stuffs) {\n    const newStuffs = stuffs.map(stuff => ({ ...stuff, stage_id: stageId }));\n    this.stuffs = this.stuffs.concat(newStuffs);\n  }\n\n  addPhrases(stuffId, phrases) {\n    const newPhrases = phrases.map(phrase => ({\n      ...phrase,\n      stuff_id: stuffId\n    }));\n\n    this.phrases = this.phrases.concat(newPhrases);\n  }\n\n  cPhrase(text, isGeneral = false, rangeName) {\n    const phraseId = this.getId(\"phrases\");\n    return new Phrase(rangeName, text, isGeneral, phraseId);\n  }\n\n  cChange(paramName, term) {\n    return new Change(paramName, term);\n  }\n\n  _getTopic(id) {\n    return this.topics.find(topic => topic.id === id);\n  }\n  _getStages = topicId => {\n    return this.stages.filter(stage => stage.topic_id === topicId);\n  };\n\n  _getStuffs = stageId => {\n    return this.stuffs.filter(stuff => stuff.stage_id === stageId);\n  };\n\n  _getPhrases = stuffId => {\n    return this.phrases.filter(phrase => phrase.stuff_id === stuffId);\n  };\n\n  _getParam = name => {\n    return this.params.find(param => param.name === name);\n  };\n\n  _getRange(name) {\n    return this.ranges.find(range => range.name === name);\n  }\n\n  _getGrad(name) {\n    return this.grads.find(grad => grad.name === name);\n  }\n\n  _editParams(changes) {\n    changes.forEach(change => {\n      const param = this._getParam(change.paramName);\n\n      if (param.isAchiev) {\n        param.value = true;\n      } else {\n        const newValue = param.value + change.term;\n        if (newValue > this.lim) {\n          param.value = this.lim;\n        } else if (newValue < 1) {\n          param.value = 1;\n        } else param.value = newValue;\n      }\n    });\n  }\n\n  checkStageFinal = stageId => {\n    const stuffs = this._getStuffs(stageId);\n    return !stuffs.find(s => !s.isA);\n  };\n\n  checkRange(rangeName) {\n    const range = this._getRange(rangeName);\n    const param = this._getParam(range.paramName);\n    const res = param.isAchiev\n      ? param.value === range.max\n      : param.value >= range.min && param.value <= range.max;\n    return res;\n  }\n\n  checkGrad = gradName => {\n    const grad = this._getGrad(gradName);\n    const ranges = grad.rangesNames.map(rName => this._getRange(rName));\n    const params = [];\n    ranges.forEach(range => {\n      if (!params[range.paramName]) {\n        params[range.paramName] = this.checkRange(range.name);\n      }\n    });\n    for (let key in params) {\n      if (!params[key]) return false;\n    }\n    return true;\n  };\n\n  idState = {};\n  getId = type => {\n    if (!this.idState[type]) this.idState[type] = 0;\n    this.idState[type]++;\n    return this.idState[type];\n  };\n\n  getStartId = () => {\n    const startTopic = this.topics.find(topic => topic.isStart);\n    const stages = this._getStages(startTopic.id);\n    const startStage = stages.find(stage => stage.isStart);\n    return startStage ? startStage.id : null;\n  };\n\n  calcStuff = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n\n    this._editParams(stuff.changes);\n    return stuff.next_stage_id;\n  };\n\n  getGeneralPhrase = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n    const phrases = this._getPhrases(stuff.id);\n    const generalPhrase = phrases.find(phrase => phrase.isGeneral);\n    return generalPhrase?.text;\n  };\n\n  getCorrectPhrase = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n    const phrases = this._getPhrases(stuff.id);\n    const neutralPhrase = phrases.find(phrase => !phrase.rangeName);\n    for (let i in phrases) {\n      const phrase = phrases[i];\n      if (phrase.rangeName && this.checkRange(phrase.rangeName))\n        return phrase.text;\n    }\n\n    return neutralPhrase.text;\n  };\n\n  _getCorrectStuffs(id) {\n    //НЕОБХОДИМОЕ ЧИСЛО ОТВЕТОВ\n    const necessity = 3;\n    const stuffs = this._getStuffs(id);\n\n    //ОГРАНИЧЕНИЕ ПО *БЫЛ ЗДЕСЬ*\n    const answersAll = stuffs.filter(stuff => {\n      if (stuff.isA) return false;\n      else {\n        const stage = this.stages.find(s => s.id === stuff.next_stage_id);\n        return !stage.isBeen;\n      }\n    });\n\n    const correctNeutAchiev = [];\n    const correctFinal = [];\n    const incrrectNeutral = [];\n\n    answersAll.forEach(stuff => {\n      const nextStage = this.stages.find(\n        stage => stage.id === stuff.next_stage_id\n      );\n      const topic = this._getTopic(nextStage.topic_id);\n      const grad = this._getGrad(topic.graduation);\n      const ranges = grad.rangesNames(rName => this._getRange(rName));\n      const params = ranges.rangesNames(r => this._getParam(r.paramName));\n\n      const isAchiev = params.find(p => p.isAchiev);\n      const correct = this.checkGrad(grad.name);\n      const { isFin } = topic;\n\n      if (correct) {\n        //подходящее по градации\n        //если не финал\n        if (!isFin) correctNeutAchiev.push(stuff);\n        //если финал\n        else correctFinal.push(stuff);\n      } else if (!isAchiev && !isFin) {\n        //неподходящие если не ачивный и не финальный\n        incrrectNeutral.push(stuff);\n      }\n    });\n\n    let resultStuffs = correctNeutAchiev.concat(incrrectNeutral);\n    //если пришло время для финалочек\n    if (false) resultStuffs = resultStuffs.concat(correctFinal);\n    return resultStuffs.slice(0, necessity);\n  }\n\n  checkAnswToGrad = stuff => {\n    const nextStage = this.stages.find(\n      stage => stage.id === stuff.next_stage_id\n    );\n    const topic = this._getTopic(nextStage.topic_id);\n    return this.checkGrad(topic.graduation);\n  };\n\n  //ДОБАВИТЬ БЕЗУСЛОВНЫЕ ОГРАНИЧЕНИЯ ДЛЯ ТЕМ ЗАВИСИМЫХ ОТ АЧИВОК\n  getInterfaceStage = id => {\n    //ДОБАВИТЬ ПОДКЛЮЧЕНИЕ ФИНАЛОЧЕК КОГДА НАДО\n\n    const stage = this.stages.find(s => s.id === id);\n    stage.isBeen = true;\n\n    const stuffs = this._getStuffs(id);\n\n    const replicStuff = stuffs.find(stuff => stuff.isA);\n    const replic = new Interf(null, this.getCorrectPhrase(replicStuff.id));\n\n    //ОГРАНИЧЕНИЯ ПО *БЫЛ ТУТ*\n    const answersAll = stuffs.filter(stuff => {\n      return !stuff.isA;\n    });\n\n    //РЕЗУЛЬТАТ\n    const resAnswers = answersAll;\n\n    const interf = {\n      answers: resAnswers.map(stuff => {\n        return new Interf(\n          this.getGeneralPhrase(stuff.id),\n          this.getCorrectPhrase(stuff.id),\n          stuff.id\n        );\n      }),\n      replic\n    };\n\n    return interf;\n  };\n\n  ssign = data => {\n    for (let key in data) {\n      if (![\"params\", \"grads\", \"ranges\"].find(k => k === key)) {\n        this[key] = data[key];\n      }\n    }\n  };\n}\n","export const PARAM_DETERMINATION = \"РЕШИМОСТЬ\";\nexport const PARAM_EQUILIBRIUM = \"УРАВНОВЕШЕННОСТЬ\";\n\nexport const PARAM_DOG = \"УЗНАЛ СОБ МЕРТВА\";\n","export const RANGE_PANIC = \"ПАНИКА\";\nexport const RANGE_TENSION = \"НАПРЯЖЕННОСТЬ\";\nexport const RANGE_STABILITY = \"СТАБИЛЬНОСТЬ\";\n\nexport const RANGE_APATHY = \"АПАТИЯ\";\nexport const RANGE_UNCERTAINTY = \"НЕУВЕРЕННОСТЬ\";\nexport const RANGE_CONFIDENCE = \"УВЕРЕННОСТЬ\";\n\nexport const RANGE_DOG = \"ЗНАЕТ ПРО СОБАКУ\";\n","export const GRAD_PAN_APA = \"ПАН АПАТ\";\nexport const GRAD_PAN_UNC = \"ПАН НЕУВ\";\nexport const GRAD_PAN_CON = \"ПАН УВ\";\n\nexport const GRAD_TEN_APA = \"НАПР АПАТ\";\nexport const GRAD_TEN_UNC = \"НАПР НЕУВ\";\nexport const GRAD_TEN_CON = \"НАПР УВ\";\n\nexport const GRAD_STAB_APA = \"СТАБ АПАТ\";\nexport const GRAD_STAB_UNC = \"СТАБ НЕУВ\";\nexport const GRAD_STAB_CON = \"СТАБ УВ\";\n\nexport const GRAD_DOG = \"ЗНАЕТ ПРО СОБАКУ\";\n","import React from \"react\";\nimport UI from \"./UI\";\nimport Screen from \"./Screen\";\nimport locE from \"../../game/loc_example\";\nimport mlpaState from \"../../mlpa_state\";\n\nexport default class Game extends React.Component {\n  constructor(){\n    super()\n    this.loc = locE;\n    this.loc.ssign(mlpaState);\n    this.defaultParams();\n  }\n  defaultParams() {\n    this.loc.params.forEach(p => {\n      if (!p.isAchiev) p.value = 7;\n    });\n  }\n  render() {\n    const { width, height } = window.screen;\n\n    return (\n      <Screen width={width} height={height}>\n        <UI loc={ this.loc} width={width} height={height} />\n      </Screen>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class TopicItem extends React.Component {\n  render() {\n    const { topic, isSelect, click } = this.props;\n\n    const border = topic.isStart\n      ? \"solid 0.3rem red\"\n      : topic.isFin\n      ? \"solid 0.3rem aqua\"\n      : \"none\";\n\n    const style = {\n      backgroundColor: isSelect ? \"green\" : \"gray\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      cursor: \"pointer\",\n      color: \"white\",\n      border\n    };\n    return (\n      <div\n        style={style}\n        onClick={() => {\n          click(topic.id);\n        }}\n      >\n        {topic.name}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class StageItem extends React.Component {\n  render() {\n    const { stage, click, isSelect, stuffText, methods } = this.props;\n\n    const isFinal = methods.checkStageFinal(stage.id);\n    const border = stage.isStart\n      ? \"solid 0.3rem red\"\n      : isFinal\n      ? \"solid 0.3rem aqua\"\n      : \"none\";\n\n    const style = {\n      backgroundColor: isSelect ? \"blue\" : \"gray\",\n      cursor: \"pointer\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      color: \"white\",\n      border\n    };\n    return (\n      <div\n        onClick={() => {\n          click(stage.id);\n        }}\n        style={style}\n      >\n        {stuffText(stage.id)}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class StuffItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const nextStage = props.allStages.find(\n      s => s.id === props.stuff.next_stage_id\n    );\n    const currentTopic = nextStage?.topic_id;\n\n    this.state = {\n      currentTopic,\n      viewAchievs: false\n    };\n  }\n  render() {\n    const {\n      stuff,\n      methods,\n      range,\n      stat,\n      goStage,\n      allStages,\n      stuffText,\n      allTopics\n    } = this.props;\n\n    const phrase = methods.getPhrases(stuff.id).find(p => {\n      return (\n        p.rangeName === range ||\n        (range === \"none\" && !p.rangeName) ||\n        (range === \"GENERAL\" && p.isGeneral)\n      );\n    });\n\n    const { changes } = stuff;\n    const { currentTopic, viewAchievs } = this.state;\n\n    const changesItems = !stuff.isA\n      ? stat.params.map(p => {\n          const c = changes.find(change => change.paramName === p.name);\n\n          const term = c ? c.term : p.isAchiev ? false : 0;\n\n          const inputElem = p.isAchiev ? (\n            <input\n              type=\"checkbox\"\n              checked={term}\n              onChange={e => {\n                methods.updateStuff(stuff.id, stuff.next_stage_id, {\n                  paramName: p.name,\n                  term: Boolean(e.target.checked)\n                });\n              }}\n            />\n          ) : (\n            <input\n              type=\"number\"\n              style={{ width: \"40px\" }}\n              value={term}\n              onChange={e => {\n                methods.updateStuff(stuff.id, stuff.next_stage_id, {\n                  paramName: p.name,\n                  term: Number(e.target.value)\n                });\n              }}\n            />\n          );\n\n          if (!viewAchievs && p.isAchiev) return null;\n          return (\n            <span\n              style={{\n                display: \"inline-block\",\n                padding: \"0.5rem\",\n                backgroundColor: \"#ffccff\",\n                marginRight: \"0.5rem\"\n              }}\n              key={p.name}\n            >\n              {p.name}:{inputElem}\n            </span>\n          );\n        })\n      : null;\n\n    const style = {\n      backgroundColor: stuff.isA ? \"#ccffff\" : \"#D3D3D3\",\n      cursor: \"pointer\",\n      margin: \"0.2rem\",\n\n      paddingTop: stuff.isA ? \"1rem\" : \"0.5rem\",\n      paddingBottom: stuff.isA ? \"1rem\" : \"0.5rem\",\n\n      display: \"inline-block\",\n      width: \"40%\"\n    };\n\n    const text = phrase ? phrase.text : \"\";\n\n    const linkItems = methods.getStages(this.state.currentTopic).map(s => {\n      return (\n        <option value={s.id} key={s.id}>\n          {stuffText(s.id)}\n        </option>\n      );\n    });\n\n    if (!allStages.find(s => s.id === stuff.next_stage_id)) {\n      linkItems.unshift(\n        <option value={\"error\"} key=\"0\">\n          {stuff.next_stage_id} NOT FOUND\n        </option>\n      );\n    }\n\n    const linkThemesItems = allTopics.map(t => {\n      return (\n        <option value={t.id} key={t.id}>\n          {t.name}\n        </option>\n      );\n    });\n\n    const next = !stuff.isA ? (\n      <div style={{ display: \"inline-block\", marginRight: \"0.5rem\" }}>\n        <div\n          style={{\n            display: \"inline-block\",\n            backgroundColor: \"red\",\n            cursor: \"pointer\",\n            color: \"white\"\n          }}\n          onClick={() => {\n            goStage(stuff.next_stage_id);\n          }}\n        >\n          ===>\n        </div>\n        {currentTopic}\n\n        <select\n          value={this.state.currentTopic}\n          onChange={e => {\n            const newCurrTopic = Number(e.target.value);\n            this.setState({ currentTopic: newCurrTopic });\n            const topicStages = methods.getStages(newCurrTopic);\n\n            if (\n              topicStages.length &&\n              !topicStages.find(s => s.id === stuff.next_stage_id)\n            )\n              methods.updateStuff(stuff.id, topicStages[0].id);\n          }}\n        >\n          {linkThemesItems}\n        </select>\n\n        <select\n          value={stuff.next_stage_id}\n          onChange={e => {\n            methods.updateStuff(stuff.id, Number(e.target.value));\n          }}\n        >\n          {linkItems}\n        </select>\n      </div>\n    ) : null;\n\n    const removeButton = !stuff.isA ? (\n      <button onClick={() => methods.removeStuff(stuff.id)}>X</button>\n    ) : null;\n\n    const viewBox = stuff.isA ? null : (\n      <input\n        type=\"checkbox\"\n        checked={viewAchievs}\n        onChange={e => {\n          this.setState({ viewAchievs: e.target.checked });\n        }}\n      />\n    );\n\n    return (\n      <div>\n        {removeButton}\n        <div style={style}>\n          ({stuff.id}){\" \"}\n          <input\n            value={text}\n            style={{ width: \"90%\" }}\n            onChange={e => {\n              methods.updatePhrase(\n                stuff.id,\n                range === \"none\" ? null : range,\n                phrase ? phrase.id : null,\n                e.target.value\n              );\n            }}\n          />\n        </div>\n        {next}\n        {changesItems}\n        {viewBox}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class RangeItem extends React.Component {\n  render() {\n    const { range, isSelect, click } = this.props;\n\n    const style = {\n      backgroundColor: isSelect ? \"orange\" : \"gray\",\n      cursor: \"pointer\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      color: \"white\"\n    };\n    return (\n      <div\n        style={style}\n        onClick={() => {\n          click(range.name);\n        }}\n      >\n        {range.name}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class AddStuff extends React.Component {\n  render() {\n    const { methods, stageId, topic } = this.props;\n\n    const nextStageId = methods.getStages(topic.id)[0].id;\n\n    return (\n      <div>\n        <button\n          onClick={() => {\n            methods.addStuff(stageId, false, nextStageId, []);\n          }}\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport StuffItem from \"../Stuffs/StuffItem\";\nimport RangeItem from \"../Ranges/RangeItem\";\nimport AddStuff from \"../Stuffs/AddStuff\";\n\nexport default class Stage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { currentRange: \"none\", acheivs: false };\n  }\n\n  click = name => {\n    this.setState({ currentRange: name });\n  };\n  splitStuffs(stuffs) {\n    const answer = stuffs.find(stuff => stuff.isA);\n    const pAnswers = stuffs.filter(stuff => !stuff.isA);\n    return { answer, pAnswers };\n  }\n  render() {\n    const {\n      stage,\n      methods,\n      stat,\n      changeStage,\n      allStages,\n      stuffText,\n      topic,\n      allTopics\n    } = this.props;\n\n    const stuffs = methods.getStuffs(stage.id);\n\n    const { answer, pAnswers } = this.splitStuffs(stuffs);\n\n    const stuffsItems = [answer, ...pAnswers].map(stuff => {\n      const res = stuff ? (\n        <StuffItem\n          stat={stat}\n          range={this.state.currentRange}\n          methods={methods}\n          key={stuff.id}\n          stuff={stuff}\n          goStage={changeStage}\n          allStages={allStages}\n          allTopics={allTopics}\n          stuffText={stuffText}\n        />\n      ) : null;\n\n      return res;\n    });\n\n    if (\"GENERAL\" === this.state.currentRange) {\n      stuffsItems.shift();\n    }\n\n    const { ranges } = stat;\n\n    const generStuff = (\n      <RangeItem\n        isSelect={\"GENERAL\" === this.state.currentRange}\n        range={{ name: \"GENERAL\" }}\n        click={this.click}\n      />\n    );\n\n    const noRanges = (\n      <RangeItem\n        isSelect={\"none\" === this.state.currentRange}\n        range={{ name: \"none\" }}\n        click={this.click}\n      />\n    );\n\n    const rangesItems = ranges\n      .filter(r => {\n        const param = methods.getParam(r.paramName);\n        return this.state.acheivs || !param.isAchiev;\n      })\n      .map(range => (\n        <RangeItem\n          isSelect={range.name === this.state.currentRange}\n          key={range.name}\n          range={range}\n          click={this.click}\n        />\n      ));\n\n    return (\n      <div>\n        <h2 align=\"center\">\n          {stuffText(stage.id)}{\" \"}\n          <button\n            onClick={() => {\n              methods.removeStage(stage.id);\n            }}\n          >\n            X\n          </button>{\" \"}\n          <input\n            type=\"checkbox\"\n            checked={stage.isStart}\n            onChange={e => {\n              methods.updateStage(stage.id, e.target.checked);\n            }}\n          />\n        </h2>\n        {generStuff}\n        {noRanges}\n        {rangesItems}\n        <input\n          type=\"checkbox\"\n          checked={this.state.acheivs}\n          onChange={e => {\n            this.setState({ acheivs: e.target.checked });\n          }}\n        />\n        {stuffsItems}\n        <AddStuff topic={topic} methods={methods} stageId={stage.id} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport StageItem from \"../Stages/StageItem\";\nimport Stage from \"../Stages/Stage\";\n\nexport default class Topic extends React.Component {\n  constructor() {\n    super();\n    this.state = { newStageStart: false };\n  }\n  stuffText = id => {\n    if (id) {\n      const { methods } = this.props;\n\n      const nextStuff = methods.getStuffs(id).find(stuff => stuff.isA);\n\n      if (nextStuff) {\n        const nextPhrases = methods.getPhrases(nextStuff.id);\n        const nextPhrase = nextPhrases.find(p => !p.rangeName);\n\n        if (nextPhrase) {\n          return `(${id}) ${nextPhrase.text.slice(0, 7)}...`;\n        } else return `(${id}) NOT PHRASE...`;\n      } else return \"NOT FOUND\";\n    }\n    return null;\n  };\n  render() {\n    const {\n      topic,\n      stat,\n      methods,\n      currentStage,\n      click,\n      changeStage,\n      allStages,\n      allTopics\n    } = this.props;\n\n    const { grads } = stat;\n    const { graduation } = topic;\n\n    const stages = methods.getStages(topic.id);\n    const stagesItems = stages.map(stage => {\n      const isSelect = stage.id === currentStage;\n\n      return (\n        <StageItem\n          methods={methods}\n          stuffText={this.stuffText}\n          key={stage.id}\n          stage={stage}\n          isSelect={isSelect}\n          click={click}\n        />\n      );\n    });\n\n    const optItems = grads.map(grad => {\n      return (\n        <option value={grad.name} key={grad.name}>\n          {grad.name}\n        </option>\n      );\n    });\n\n    const curStage = stages.find(stage => stage.id === currentStage);\n\n    const stageView = currentStage ? (\n      <Stage\n        stage={curStage}\n        methods={methods}\n        stat={stat}\n        allStages={allStages}\n        allTopics={allTopics}\n        changeStage={changeStage}\n        stuffText={this.stuffText}\n        topic={topic}\n      />\n    ) : null;\n\n    return (\n      <div>\n        <h1 align=\"center\">\n          Topic{\" \"}\n          <input\n            value={topic.name}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                e.target.value,\n                topic.graduation,\n                topic.isFin,\n                topic.isStart\n              );\n            }}\n          />\n          , grad:\n          <select\n            value={graduation}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                e.target.value,\n                topic.isFin,\n                topic.isStart\n              );\n            }}\n          >\n            {optItems}\n          </select>\n          Start:\n          <input\n            type=\"checkbox\"\n            checked={topic.isStart}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                topic.graduation,\n                topic.isFin,\n                e.target.checked\n              );\n            }}\n          />\n          Final:\n          <input\n            type=\"checkbox\"\n            checked={topic.isFin}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                topic.graduation,\n                e.target.checked,\n                topic.isStart\n              );\n            }}\n          />\n          <button\n            onClick={() => {\n              methods.removeTopic(topic.id);\n            }}\n            style={{ marginLeft: \"1rem\" }}\n          >\n            X\n          </button>\n        </h1>\n\n        <br />\n        <div>\n          <input\n            type=\"checkbox\"\n            checked={this.state.newStageStart}\n            onChange={e => {\n              this.setState({ newStageStart: e.target.checked });\n            }}\n          />\n          <button\n            onClick={() => {\n              methods.addStage(topic.id, this.state.newStageStart);\n            }}\n          >\n            +\n          </button>\n        </div>\n        {stagesItems}\n        <br />\n        {stageView}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class AddTopic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graduation: props.stat.grads[0].name,\n      name: \"\",\n      isFin: false,\n      isStart: false\n    };\n  }\n\n  render() {\n    const { graduation, name, isFin, isStart } = this.state;\n    const { stat, methods } = this.props;\n    const { grads } = stat;\n    const optItems = grads.map(grad => (\n      <option value={grad.name} key={grad.name}>\n        {grad.name}\n      </option>\n    ));\n\n    return (\n      <div>\n        <input\n          value={name}\n          onChange={e => {\n            this.setState({ name: e.target.value });\n          }}\n        />\n        <select\n          value={graduation}\n          onChange={e => {\n            this.setState({ graduation: e.target.value });\n          }}\n        >\n          {optItems}\n        </select>\n        Start:\n        <input\n          type=\"checkbox\"\n          checked={isStart}\n          onChange={e => {\n            this.setState({ isStart: e.target.checked });\n          }}\n        />\n        Final:\n        <input\n          type=\"checkbox\"\n          checked={isFin}\n          onChange={e => {\n            this.setState({ isFin: e.target.checked });\n          }}\n        />\n        <button\n          onClick={() => {\n            methods.addTopic(name, graduation, isFin, isStart);\n          }}\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport locE from \"../../game/loc_example\";\n//import locE from \"./../../game/loc_example\";\nimport TopicItem from \"./Topics/TopicItem\";\nimport Topic from \"./Topics/Topic\";\nimport AddTopic from \"./Topics/AddTopic\";\nimport exportFromJSON from \"export-from-json\";\nimport mlpaState from \"../../mlpa_state\";\n\nexport default class Editor extends React.Component {\n  constructor() {\n    super();\n    this.myStorage = window.localStorage;\n    this.loc = {};\n    this.import(true);\n    const { topicId, stageId } = this.getTopStag();\n    this.state = { currentTopic: topicId, currentStage: stageId };\n  }\n\n  import(firstTime) {\n    this.loc = locE;\n\n    this.loc.ssign({ ...mlpaState });\n    if (!firstTime) this.forceUpdate();\n  }\n\n  getTopStag() {\n    const topicId = this.loc.topics[0] ? this.loc.topics[0].id : null;\n    const stageId = this.loc._getStages(topicId)[0]\n      ? this.loc._getStages(topicId)[0].id\n      : null;\n    return { topicId, stageId };\n  }\n\n  exportFile() {\n    const data = this.loc;\n    const fileName = \"mlpa_state\";\n    const exportType = \"json\";\n\n    exportFromJSON({ data, fileName, exportType });\n  }\n\n  saveLoc() {\n    const locData = JSON.stringify(this.loc);\n    this.myStorage.setItem(\"locData\", locData);\n  }\n\n  addTopic = (name, gradName, isFin, isStart) => {\n    this.loc.cTopic(name, gradName, isFin, isStart);\n    this.forceUpdate();\n  };\n\n  addStage = (topicId, isStart) => {\n    this.loc.addStages(\n      topicId,\n      this.loc.cStage(\n        isStart,\n        this.loc.cStuff({ isA: true }, this.loc.cPhrase(\"space\"))\n      )\n    );\n    this.forceUpdate();\n  };\n  updateStage = (id, isStart) => {\n    const stage = this.loc.stages.find(s => s.id === id);\n    stage.isStart = isStart;\n    this.forceUpdate();\n  };\n  updateTopic = (topicId, name, gradName, isFin, isStart) => {\n    const topic = this.loc._getTopic(topicId);\n    topic.name = name;\n    topic.graduation = gradName;\n    topic.isFin = isFin;\n    topic.isStart = isStart;\n    this.forceUpdate();\n  };\n  addPhrase = (stuffId, range, text, isGeneral) => {\n    this.loc.addPhrases(stuffId, [this.loc.cPhrase(text, isGeneral, range)]);\n    this.forceUpdate();\n  };\n\n  updatePhrase = (stuffId, range, id, newText) => {\n    const phrase = this.loc.phrases.find(p => p.id === id);\n    if (phrase) {\n      phrase.text = newText;\n      if (!newText && !phrase.isGeneral && phrase.rangeName)\n        this.removePhrase(phrase.id);\n    } else {\n      this.addPhrase(stuffId, range, newText);\n    }\n    this.forceUpdate();\n  };\n\n  addStuff = (stageId, isA, nextStageId, changes = []) => {\n    const newStaff = this.loc.cStuff(\n      {\n        isA,\n        id: nextStageId\n      },\n      this.loc.cPhrase(\"space\"),\n      this.loc.cPhrase(\"generalSpace\", true)\n    );\n\n    this.loc.addStuffs(stageId, newStaff);\n\n    this.forceUpdate();\n  };\n  updateStuff = (id, nextStageId, ...changes) => {\n    const stuff = this.loc.stuffs.find(s => s.id === id);\n    stuff.next_stage_id = nextStageId;\n    changes.forEach(change => {\n      const changeIndex = stuff.changes.findIndex(\n        c => c.paramName === change.paramName\n      );\n      const thisStuffCh = stuff.changes[changeIndex];\n\n      const changeTerm = change.term;\n\n      if (!thisStuffCh) {\n        stuff.changes.push(this.loc.cChange(change.paramName, changeTerm));\n      } else {\n        if (changeTerm) thisStuffCh.term = changeTerm;\n        else stuff.changes.splice(changeIndex, 1);\n        console.log(thisStuffCh);\n      }\n    });\n    this.forceUpdate();\n  };\n\n  removeTopic = id => {\n    const index = this.loc.topics.findIndex(t => t.id === id);\n    this.loc.topics.splice(index, 1);\n    const stages = this.loc._getStages(id);\n    stages.forEach(s => {\n      this.removeStage(s.id);\n    });\n\n    this.setState({ currentTopic: null, currentStage: null });\n    this.forceUpdate();\n  };\n  removeStage = id => {\n    const index = this.loc.stages.findIndex(s => s.id === id);\n    this.loc.stages.splice(index, 1);\n    const stuffs = this.loc._getStuffs(id);\n    stuffs.forEach(s => {\n      if (s.next_stage_id === id) {\n        s.next_stage_id = null;\n      }\n      this.removeStuff(s.id);\n    });\n    this.setState({ currentStage: null });\n    this.forceUpdate();\n  };\n  removeStuff = id => {\n    const index = this.loc.stuffs.findIndex(s => s.id === id);\n    this.loc.stuffs.splice(index, 1);\n    const phrases = this.loc._getPhrases(id);\n    phrases.forEach(p => {\n      this.removePhrase(p.id);\n    });\n    this.forceUpdate();\n  };\n  removePhrase = id => {\n    const index = this.loc.phrases.findIndex(p => p.id === id);\n    this.loc.phrases.splice(index, 1);\n    this.forceUpdate();\n  };\n\n  click = id => {\n    const firstStage = this.loc._getStages(id)[0];\n    if (firstStage) this.changeStage(firstStage.id);\n    else this.setState({ currentTopic: id, currentStage: null });\n    this.forceUpdate();\n  };\n  changeStage = id => {\n    const stage = this.loc.stages.find(s => s.id === id);\n    if (stage) {\n      this.setState({ currentTopic: stage.topic_id, currentStage: id });\n    }\n\n    this.forceUpdate();\n  };\n\n  render() {\n    const { topics, grads, params, ranges } = this.loc;\n    const stat = {\n      grads,\n      params,\n      ranges\n    };\n\n    const { currentStage, currentTopic } = this.state;\n\n    const methods = {\n      addTopic: this.addTopic,\n      addStage: this.addStage,\n      updateStage: this.updateStage,\n      updateTopic: this.updateTopic,\n      removeTopic: this.removeTopic,\n      removeStage: this.removeStage,\n      updateStuff: this.updateStuff,\n      removeStuff: this.removeStuff,\n      getStages: this.loc._getStages,\n      getStuffs: this.loc._getStuffs,\n      getPhrases: this.loc._getPhrases,\n      addStuff: this.addStuff,\n      updatePhrase: this.updatePhrase,\n      addPhrase: this.addPhrase,\n      removePhrase: this.removePhrase,\n      getParam: this.loc._getParam,\n      checkStageFinal: this.loc.checkStageFinal\n    };\n\n    const topicItems = topics.map(topic => {\n      const isSelect = topic.id === currentTopic;\n      return (\n        <TopicItem\n          key={topic.id}\n          topic={topic}\n          methods={methods}\n          isSelect={isSelect}\n          click={this.click}\n        />\n      );\n    });\n\n    const topicView = currentTopic ? (\n      <Topic\n        allTopics={this.loc.topics}\n        allStages={this.loc.stages}\n        currentStage={currentStage}\n        topic={topics.find(topic => topic.id === this.state.currentTopic)}\n        stat={stat}\n        methods={methods}\n        goTopic={this.click}\n        click={this.changeStage}\n        changeStage={this.changeStage}\n      />\n    ) : null;\n\n    console.log(this.loc);\n    return (\n      <div>\n        <button onClick={() => this.import()}>import</button>\n        <button onClick={() => this.exportFile()}>export</button>\n        <br />\n        <AddTopic methods={methods} stat={stat} />\n        {topicItems}\n        {topicView}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Game from \"./components/Game/Game\";\nimport Editor from \"./components/Editor/Editor\";\n\nfunction App() {\n  return (\n    <div>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}