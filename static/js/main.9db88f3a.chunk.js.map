{"version":3,"sources":["components/Game/AnswerI/AnswerI.js","components/Game/Params.js","components/Game/DialogBox/PhraseText.js","components/Game/DialogBox/DialogBox.js","components/Game/Visual/img-object.js","components/Game/Visual/scene-object.js","components/Game/Visual/Visual.js","components/Game/Loading/Loading.js","components/Game/UI.js","components/Game/Settings/FullScreen.js","components/Game/Settings/Settiings.js","components/Game/Screen.js","mlpa_engine/graduation.js","mlpa_engine/parameter.js","mlpa_engine/phrase.js","mlpa_engine/range.js","mlpa_engine/stage.js","mlpa_engine/stuff.js","mlpa_engine/topic.js","mlpa_engine/change.js","mlpa_engine/interf.js","game/loc_example.js","mlpa_engine/loc.js","game/parameters.js","game/ranges.js","game/grads.js","components/Game/Game.js","components/Editor/Topics/TopicItem.js","components/Editor/Stages/StageItem.js","components/Editor/Stuffs/StuffItem.js","components/Editor/Ranges/RangeItem.js","components/Editor/Stuffs/AddStuff.js","components/Editor/Stages/Stage.js","components/Editor/Topics/Topic.js","components/Editor/Topics/AddTopic.js","components/Editor/Editor.js","App.js","serviceWorker.js","index.js"],"names":["AnswerI","React","Component","this","props","text","click","disabled","isHiding","disClass","className","onClick","toUpperCase","PhraseText","state","isStart","curText","balText","pAnsswerd","writingFinish","isPlayer","curLen","length","newText","slice","setTimeout","setState","nextLetterLoop","title","titleClass","DialogBox","dDelay","isPAnsserd","pPhrase","cPhrase","hidingClass","hiding","cAnswer","ImgObject","image","slot","SceneObject","x","y","imgName","width","Visual","c","ctx","objects","scene","background","legs","body","head","images","landSizes","landWidth","landHeight","progress","refs","myCanvas","getContext","loaderLoop","forEach","object","loadImage","sceneObject","img","Image","url","src","window","location","href","onload","event","target","push","name","loadFinished","newCanvas","document","createElement","height","newCtx","key","obj","find","locFactor","drawImage","isLoaded","drawScene","ref","style","Loading","UI","loc","currStageId","getStartId","getStageData","answers","stageId","interf","getInterfaceStage","replic","phrase","stuffId","newStageId","calcStuff","getCorrectPhrase","answersItems","map","answer","id","generalPhrase","update","gameUI","loadingAnim","FullScreen","render","fullScreenOn","getElementById","requestFullscreen","Settings","Screen","display","backgroundColor","marginLeft","position","children","Graduation","rangesNames","Parameter","value","isAchiev","Phrase","rangeName","isGeneral","stuff_id","Range","paramName","min","max","Stage","isBeen","topic_id","Stuff","next_stage_id","changes","isA","stage_id","Topic","graduation","isFin","Change","term","Interf","locE","params","ranges","grads","topics","stuffs","stages","phrases","lim","addStages","topicId","_getTopic","newStages","stage","concat","console","error","_getStages","filter","_getStuffs","stuff","_getPhrases","_getParam","param","checkStageFinal","s","checkGrad","gradName","_getGrad","rName","_getRange","range","checkRange","idState","getId","type","startTopic","topic","startStage","_editParams","getGeneralPhrase","neutralPhrase","i","checkAnswToGrad","nextStage","replicStuff","ssign","data","k","addTopics","addStuffs","nextStageId","addPhrases","newStuffs","newPhrases","phraseId","grad","change","newValue","answersAll","correctNeutAchiev","correctFinal","incrrectNeutral","r","p","correct","addParams","cParam","addRanges","cRange","addGrads","cGrad","Game","mlpaState","defaultParams","screen","newWidth","Math","factor","newHeight","TopicItem","isSelect","margin","padding","cursor","color","border","StageItem","stuffText","isFinal","methods","StuffItem","allStages","currentTopic","viewAchievs","stat","goStage","allTopics","getPhrases","changesItems","inputElem","checked","onChange","e","updateStuff","Boolean","Number","marginRight","paddingTop","paddingBottom","linkItems","getStages","unshift","linkThemesItems","t","next","newCurrTopic","topicStages","removeButton","removeStuff","viewBox","updatePhrase","RangeItem","AddStuff","addStuff","currentRange","acheivs","pAnswers","changeStage","getStuffs","splitStuffs","stuffsItems","shift","generStuff","noRanges","rangesItems","getParam","align","removeStage","updateStage","nextStuff","nextPhrase","newStageStart","currentStage","stagesItems","optItems","curStage","stageView","updateTopic","removeTopic","addStage","AddTopic","addTopic","App","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9db88f3a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nexport default class AnswerI extends React.Component {\n  render() {\n    const { text, click, disabled, isHiding } = this.props;\n    const disClass = disabled ? (isHiding ? \"disabled\" : \"\") : \"undisabled\";\n    return (\n        <div>\n      <div\n        className={`answer ${disClass}`}\n        onClick={() => {\n          if (!disabled) click();\n        }}\n      >\n        {text.toUpperCase()}\n      </div>\n        </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class Params extends React.Component {\n  /* constructor() {\n    super();\n\n  }*/\n\n  correctGrads() {\n    const { grads, checkGrad } = this.props;\n    const corrGrads = grads.filter(g => checkGrad(g.name));\n\n    return corrGrads;\n  }\n  render() {\n    const { params, lim, edit } = this.props;\n\n    const correctGrads = this.correctGrads();\n    const correctGradsItems = correctGrads.map(g => (\n      <div key={g.name}>\n        \n        <span style={{ color: \"white\" }}>{g.name}</span>\n      </div>\n    ));\n\n    const paramItems = params.map(param => {\n      return param.isAchiev ? (\n        <div key={param.name}>\n          <input type=\"checkbox\" disabled checked={param.value} />{\" \"}\n          <span style={{ color: \"white\" }}>{param.name}</span>\n        </div>\n      ) : (\n        <div key={param.name}>\n          <div>\n            <button\n              onClick={() => {\n                edit(param.name, -1);\n              }}\n            >\n              -\n            </button>\n            <div\n              style={{\n                display: \"inline-block\",\n                height: \"15px\",\n                width: `${param.value * 10}px`,\n                backgroundColor: \"red\"\n              }}\n            ></div>\n            <div\n              style={{\n                display: \"inline-block\",\n                height: \"15px\",\n                width: `${(lim - param.value) * 10}px`,\n                backgroundColor: \"gray\"\n              }}\n            ></div>\n\n            <button\n              onClick={() => {\n                edit(param.name, 1);\n              }}\n            >\n              +\n            </button>\n            <span style={{ color: \"white\" }}>{param.name}</span>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div style={{position: 'absolute', top: '0'}}>\n        {paramItems}\n        {correctGradsItems}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default class PhraseText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isStart: true, curText: \"\", balText: \"\" };\n  }\n  nextLetterLoop() {\n    const { text, pAnsswerd, writingFinish, isPlayer } = this.props;\n\n    const { curText } = this.state;\n    if (text !== curText) {\n      const curLen = curText.length;\n      const newText = text.slice(0, curLen + 1);\n\n      const balText = text.slice(curLen + 1);\n\n      setTimeout(() => {\n        this.setState({ curText: newText, isStart: false, balText });\n        this.nextLetterLoop();\n      }, 20);\n    } else isPlayer ? pAnsswerd() : writingFinish();\n  }\n  render() {\n    const { isPlayer } = this.props;\n    const { isStart, curText, balText } = this.state;\n    if (isStart) this.nextLetterLoop();\n    const title = isPlayer ? \"Я\" : \"Она\";\n    const titleClass = isPlayer ? \"text-p\" : \"text-c\";\n    return (\n      <div className=\"phrase-text\">\n        <span className={titleClass}>{title}/</span> {curText}\n        <span className=\"bal-text\">{balText}</span>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport PhraseText from \"./PhraseText\";\n\nexport default class DialogBox extends React.Component {\n  constructor() {\n    super();\n    this.state = { isPAnsserd: false };\n  }\n\n  pAnsswerd = () => {\n    const { dDelay } = this.props;\n    setTimeout(() => {\n      this.setState({ isPAnsserd: true });\n    }, dDelay);\n  };\n  render() {\n    const { pPhrase, cPhrase, writingFinish, hiding } = this.props;\n    const { isPAnsserd } = this.state;\n\n    const hidingClass = hiding ? \"phrase-hiding\" : \"\";\n\n    const cAnswer = isPAnsserd ? (\n      <PhraseText text={cPhrase} writingFinish={writingFinish} />\n    ) : null;\n\n    return (\n      <div className=\"dialog-box\">\n        <div className={`phrase-interface ${hidingClass}`}>\n          <div className=\"phrase-content\">\n            <PhraseText text={pPhrase} isPlayer pAnsswerd={this.pAnsswerd} />\n            {cAnswer}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export default class ImgObject {\n  constructor(image, slot = \"\") {\n    this.image = image;\n    this.slot = slot;\n  }\n}\n","export default class SceneObject {\n  constructor(x = 0, y = 0, imgName, width) {\n    this.x = x;\n    this.y = y;\n    this.imgName = imgName;\n    this.width = width\n  }\n}\n","import React from \"react\";\nimport ImgObject from \"./img-object\";\nimport SceneObject from \"./scene-object\";\nimport './style.css'\n\nexport default class Visual extends React.Component {\n  constructor(props) {\n    super(props);\n    this.c = null;\n    this.ctx = null;\n    this.objects = [\n      new ImgObject(\"background\", \"\"),\n      new ImgObject(\"legs\", \"\"),\n      new ImgObject(\"doubt\", \"body\"),\n      new ImgObject(\"readiness\", \"body\"),\n      new ImgObject(\"tension\", \"body\"),\n      new ImgObject(\"uncertainty\", \"body\"),\n      new ImgObject(\"apathy\", \"head\"),\n      new ImgObject(\"fear\", \"head\"),\n      new ImgObject(\"horror\", \"head\"),\n      new ImgObject(\"squinted\", \"head\"),\n      new ImgObject(\"trembling\", \"head\")\n    ];\n\n    const girlX = 800;\n    const girlY = 385;\n    this.scene = {\n      background: new SceneObject(0, -200, \"background\", 1920),\n      legs: new SceneObject(girlX, girlY, \"legs\", 200),\n      body: new SceneObject(girlX, girlY, \"doubt\", 200),\n      head: new SceneObject(girlX, girlY, \"horror\", 200)\n    };\n    this.images = [];\n\n    const { landWidth, landHeight } = this.props.landSizes;\n\n    this.landWidth = landWidth;\n    this.landHeight = landHeight;\n    /*\n    this.startCam = {\n      zoom: 23,\n      x: -872,\n      y: -400\n    };\n\n    this.endCam = {\n      zoom: 1,\n      x: 0,\n      y: 0\n    };*/\n\n    this.progress = 1;\n  }\n  async componentDidMount() {\n    if (!this.c && this.refs.myCanvas) {\n      this.c = this.refs.myCanvas;\n      this.ctx = this.c.getContext(\"2d\");\n\n      this.loaderLoop();\n    }\n  }\n\n  loaderLoop() {\n    this.objects.forEach(object => {\n      this.loadImage(object);\n    });\n  }\n\n  loadImage(sceneObject) {\n    const { slot, image } = sceneObject;\n\n    let img = new Image();\n    let url = slot ? `${slot}/` : \"\";\n    url += image;\n\n    img.src = `${window.location.href}/img/${url}.png`;\n\n    img.onload = event => {\n      const { target } = event;\n\n      this.images.push({ name: image, img: target });\n\n      if (this.images.length === this.objects.length) {\n        const { loadFinished } = this.props;\n        loadFinished();\n      }\n    };\n  }\n\n  drawScene() {\n    const newCanvas = document.createElement(\"CANVAS\");\n    newCanvas.width = this.landWidth;\n    newCanvas.height = this.landHeight;\n    const newCtx = newCanvas.getContext(\"2d\");\n\n    for (let key in this.scene) {\n      const obj = this.scene[key];\n      const { img } = this.images.find(image => image.name === obj.imgName);\n      const { width, x, y } = obj;\n\n      const locFactor = width / img.width;\n      const height = img.height * locFactor;\n\n      newCtx.drawImage(img, x, y, width, height);\n    }\n\n    this.ctx.drawImage(newCanvas, 0, 0);\n  }\n\n  render() {\n    const { width, height, isLoaded } = this.props;\n\n    if (isLoaded) this.drawScene();\n\n    const className = isLoaded ? \"loaded\" : \"\";\n\n    return (\n      <div>\n        <canvas\n          className={className}\n          ref=\"myCanvas\"\n          width={this.landWidth}\n          height={this.landHeight}\n          style={{ width, height }}\n        ></canvas>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default class Loading extends React.Component {\n  render() {\n    return <div className=\"lds-dual-ring\"></div>;\n  }\n}\n","import React from \"react\";\n\nimport Params from \"./Params\";\nimport AnswerI from \"./AnswerI/AnswerI\";\nimport DialogBox from \"./DialogBox/DialogBox\";\nimport \"./style.css\";\nimport Visual from \"./Visual/Visual\";\nimport Loading from \"./Loading/Loading\";\n\nexport default class UI extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loc = props.loc;\n    const currStageId = this.loc.getStartId();\n    const { cPhrase, answers } = this.getStageData(currStageId);\n    this.state = {\n      cPhrase,\n      pPhrase: \"О чем ты сейчас думаешь?\",\n      answers,\n      disabled: true,\n      currStageId,\n      isHiding: false,\n      dDelay: 2000,\n      isLoaded: false\n    };\n  }\n  getStageData(stageId) {\n    const interf = this.loc.getInterfaceStage(stageId);\n    const { answers, replic } = interf;\n    const { phrase } = replic;\n\n    return {\n      cPhrase: phrase,\n      answers\n    };\n  }\n  update(stuffId) {\n    const newStageId = this.loc.calcStuff(stuffId);\n    const pPhrase = this.loc.getCorrectPhrase(stuffId);\n    const { cPhrase, answers } = this.getStageData(newStageId);\n\n    this.setState({\n      isHiding: true,\n      disabled: true\n    });\n\n    setTimeout(() => {\n      this.setState({\n        pPhrase,\n        cPhrase,\n        currStageId: newStageId,\n        answers,\n        isHiding: false,\n        dDelay: 500 //ДОБАВИТЬ ЗАВИСИМОСТЬ ОТ ПОТРЯСЕНИЯ\n      });\n    }, 500);\n  }\n\n  writingFinish() {\n    this.setState({ disabled: false });\n  }\n  render() {\n    const {\n      pPhrase,\n      cPhrase,\n      currStageId,\n      answers,\n      disabled,\n      isHiding,\n      dDelay,\n      isLoaded\n    } = this.state;\n    const answersItems = answers.map(answer => {\n      return (\n        <AnswerI\n          key={answer.id}\n          text={answer.generalPhrase}\n          disabled={disabled}\n          isHiding={isHiding}\n          click={() => {\n            this.update(answer.id);\n          }}\n        />\n      );\n    });\n\n    const { width, height, landSizes } = this.props;\n\n    const gameUI = isLoaded ? (\n      <div>\n        <div className=\"answers\">{answersItems}</div>\n        <DialogBox\n          hiding={isHiding}\n          key={currStageId}\n          pPhrase={pPhrase}\n          cPhrase={cPhrase}\n          dDelay={dDelay}\n          writingFinish={() => {\n            this.writingFinish();\n          }}\n        />\n      </div>\n    ) : null;\n\n    const loadingAnim = !isLoaded ? <Loading /> : null;\n\n    return (\n      <div>\n        <Visual\n          width={width}\n          height={height}\n          isLoaded={isLoaded}\n          loadFinished={() => this.setState({ isLoaded: true })}\n          landSizes={landSizes}\n        />\n        {gameUI}\n\n        {loadingAnim}\n      </div>\n    );\n  }\n}\n\n/*\n <Params\n          params={this.loc.params}\n          lim={this.loc.lim}\n          edit={(paramName, term) => {\n            this.loc._editParams([this.loc.cChange(paramName, term)]);\n            this.forceUpdate();\n          }}\n          grads={this.loc.grads}\n          checkGrad={this.loc.checkGrad}\n        />\n*/\n","import React from \"react\";\n\nexport default class FullScreen extends React.Component {\n  fullScreenOn() {\n    const screenDom = document.getElementById(\"screenDom\");\n    screenDom.requestFullscreen();\n  }\n  render = () => {\n    return (\n      <button\n        onClick={() => {\n          this.fullScreenOn();\n        }}\n      >\n        Full Screen\n      </button>\n    );\n  };\n}\n","import React from \"react\";\nimport FullScreen from \"./FullScreen\";\n\nexport default class Settings extends React.Component {\n  render() {\n    return (\n      <div className=\"settings\">\n        <FullScreen />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Settings from \"./Settings/Settiings\";\nimport \"./Settings/style.css\";\n\nexport default class Screen extends React.Component {\n  render() {\n    const { width, height } = this.props;\n    const style = {\n      width,\n      height,\n      display: \"inline-block\",\n      backgroundColor: \"black\",\n\n      marginLeft: `calc(50% - ${width / 2}px)`,\n      position: \"absolute\"\n      //overflow: \"hidden\"\n    };\n    return (\n      <div id=\"screenDom\">\n        <div style={style}>\n          {this.props.children}\n          <Settings />\n        </div>\n      </div>\n    );\n  }\n}\n","export default class Graduation {\n  constructor(name, rangesNames) {\n    this.name = name;\n    this.rangesNames = rangesNames;\n  }\n}\n","export default class Parameter {\n  constructor(name, value, isAchiev = false) {\n    this.name = name;\n    this.value = value;\n    this.isAchiev = isAchiev;\n  }\n}\n","export default class Phrase {\n  constructor(rangeName, text, isGeneral, id) {\n    this.rangeName = rangeName;\n    this.text = text;\n    this.isGeneral = isGeneral;\n    this.id = id;\n  }\n  stuff_id = null;\n}\n","export default class Range {\n  constructor(name, paramName, min, max) {\n    this.name = name;\n    this.paramName = paramName;\n    this.min = min;\n    this.max = max;\n  }\n}\n","export default class Stage {\n  constructor(isStart, id) {\n    this.id = id;\n    this.isStart = isStart\n  }\n  isBeen = false;\n  topic_id = null;\n}\n","export default class Stuff {\n  constructor(next_stage_id, changes = [], isA = false, id) {\n    this.next_stage_id = next_stage_id;\n    this.changes = changes;\n    this.isA = isA;\n    this.id = id;\n  }\n  stage_id = null;\n}\n","export default class Topic {\n  constructor(name, graduation, isFin, isStart, id) {\n    this.name = name;\n    this.graduation = graduation;\n    this.isFin = isFin;\n    this.isStart = isStart;\n    this.id = id;\n  }\n}\n","export default class Change {\n  constructor(paramName, term) {\n    this.paramName = paramName;\n    this.term = term;\n  }\n}\n","export default class Interf {\n  constructor(generalPhrase, phrase, id) {\n    this.generalPhrase = generalPhrase;\n    this.phrase = phrase;\n    this.id = id;\n  }\n}\n","import { Loc } from \"./../mlpa_engine\";\n\nimport {\n  PARAM_EQUILIBRIUM,\n  PARAM_DETERMINATION,\n  PARAM_DOG\n} from \"./parameters\";\n\nimport {\n  RANGE_PANIC,\n  RANGE_TENSION,\n  RANGE_STABILITY,\n  RANGE_APATHY,\n  RANGE_UNCERTAINTY,\n  RANGE_CONFIDENCE,\n  RANGE_DOG\n} from \"./ranges\";\n\nimport {\n  GRAD_PAN_APA,\n  GRAD_PAN_UNC,\n  GRAD_PAN_CON,\n  GRAD_TEN_APA,\n  GRAD_TEN_UNC,\n  GRAD_TEN_CON,\n  GRAD_STAB_APA,\n  GRAD_STAB_UNC,\n  GRAD_STAB_CON,\n  GRAD_DOG\n} from \"./grads\";\n\nconst locE = new Loc();\nlocE.addParams(\n  locE.cParam(PARAM_DETERMINATION, 2),\n  locE.cParam(PARAM_EQUILIBRIUM, 4),\n\n  locE.cParam(PARAM_DOG, false, true)\n);\n\nlocE.addRanges(\n  locE.cRange(RANGE_PANIC, 1, 5, PARAM_EQUILIBRIUM),\n  locE.cRange(RANGE_TENSION, 6, 10, PARAM_EQUILIBRIUM),\n  locE.cRange(RANGE_STABILITY, 11, 15, PARAM_EQUILIBRIUM),\n\n  locE.cRange(RANGE_APATHY, 1, 5, PARAM_DETERMINATION),\n  locE.cRange(RANGE_UNCERTAINTY, 6, 10, PARAM_DETERMINATION),\n  locE.cRange(RANGE_CONFIDENCE, 11, 15, PARAM_DETERMINATION),\n\n  locE.cRange(RANGE_DOG, true, true, PARAM_DOG)\n);\nlocE.addGrads(\n  locE.cGrad(GRAD_PAN_APA, RANGE_PANIC, RANGE_APATHY),\n  locE.cGrad(GRAD_PAN_UNC, RANGE_PANIC, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_PAN_CON, RANGE_PANIC, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_TEN_APA, RANGE_TENSION, RANGE_APATHY),\n  locE.cGrad(GRAD_TEN_UNC, RANGE_TENSION, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_TEN_CON, RANGE_TENSION, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_STAB_APA, RANGE_STABILITY, RANGE_APATHY),\n  locE.cGrad(GRAD_STAB_UNC, RANGE_STABILITY, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_STAB_CON, RANGE_STABILITY, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_DOG, RANGE_DOG)\n);\n\nexport default locE;\n","import Parameter from \"./parameter\";\nimport Range from \"./range\";\nimport Graduation from \"./graduation\";\nimport Phrase from \"./phrase\";\nimport Stuff from \"./stuff\";\nimport Change from \"./change\";\nimport Stage from \"./stage\";\nimport Topic from \"./topic\";\nimport Interf from \"./interf\";\n\nexport default class Loc {\n  params = [];\n  ranges = [];\n  grads = [];\n  topics = [];\n\n  stuffs = [];\n  stages = [];\n  phrases = [];\n\n  lim = 15;\n\n  cParam(name, value, isAchiev) {\n    return new Parameter(name, value, isAchiev);\n  }\n  addParams(...params) {\n    this.params = this.params.concat(params);\n  }\n\n  cRange(name, min, max, paramName) {\n    return new Range(name, paramName, min, max);\n  }\n  addRanges(...ranges) {\n    this.ranges = this.ranges.concat(ranges);\n  }\n\n  cGrad(name, ...rangesNames) {\n    return new Graduation(name, rangesNames);\n  }\n  addGrads(...grads) {\n    this.grads = this.grads.concat(grads);\n  }\n\n  cTopic(name, gradName, isFin, isStart, ...stages) {\n    const topicId = this.getId(\"topics\");\n    this.addTopics(new Topic(name, gradName, isFin, isStart, topicId));\n    this.addStages(topicId, ...stages);\n  }\n\n  addTopics(...topics) {\n    this.topics = this.topics.concat(topics);\n  }\n\n  cStage(isStart, ...answers) {\n    const stageId = this.getId(\"stages\");\n    this.addStuffs(stageId, ...answers);\n    return new Stage(isStart, stageId);\n  }\n\n  addStages = (topicId, ...stages) => {\n    if (this._getTopic(topicId)) {\n      const newStages = stages.map(stage => {\n        return { ...stage, topic_id: topicId };\n      });\n      this.stages = this.stages.concat(newStages);\n    } else console.error(`Topic ${topicId} not found!`);\n  };\n\n  cStuff(props, ...phrases) {\n    const { id: nextStageId, changes = [], isA } = props ? props : {};\n    const stuffId = this.getId(\"stuffs\");\n\n    this.addPhrases(stuffId, phrases);\n    return new Stuff(\n      nextStageId,\n      !isA ? changes.filter(c => c.term) : [],\n      isA,\n      stuffId\n    );\n  }\n\n  addStuffs(stageId, ...stuffs) {\n    const newStuffs = stuffs.map(stuff => ({ ...stuff, stage_id: stageId }));\n    this.stuffs = this.stuffs.concat(newStuffs);\n  }\n\n  addPhrases(stuffId, phrases) {\n    const newPhrases = phrases.map(phrase => ({\n      ...phrase,\n      stuff_id: stuffId\n    }));\n\n    this.phrases = this.phrases.concat(newPhrases);\n  }\n\n  cPhrase(text, isGeneral = false, rangeName) {\n    const phraseId = this.getId(\"phrases\");\n    return new Phrase(rangeName, text, isGeneral, phraseId);\n  }\n\n  cChange(paramName, term) {\n    return new Change(paramName, term);\n  }\n\n  _getTopic(id) {\n    return this.topics.find(topic => topic.id === id);\n  }\n  _getStages = topicId => {\n    return this.stages.filter(stage => stage.topic_id === topicId);\n  };\n\n  _getStuffs = stageId => {\n    return this.stuffs.filter(stuff => stuff.stage_id === stageId);\n  };\n\n  _getPhrases = stuffId => {\n    return this.phrases.filter(phrase => phrase.stuff_id === stuffId);\n  };\n\n  _getParam = name => {\n    return this.params.find(param => param.name === name);\n  };\n\n  _getRange(name) {\n    return this.ranges.find(range => range.name === name);\n  }\n\n  _getGrad(name) {\n    return this.grads.find(grad => grad.name === name);\n  }\n\n  _editParams(changes) {\n    changes.forEach(change => {\n      const param = this._getParam(change.paramName);\n\n      if (param.isAchiev) {\n        param.value = true;\n      } else {\n        const newValue = param.value + change.term;\n        if (newValue > this.lim) {\n          param.value = this.lim;\n        } else if (newValue < 1) {\n          param.value = 1;\n        } else param.value = newValue;\n      }\n    });\n  }\n\n  checkStageFinal = stageId => {\n    const stuffs = this._getStuffs(stageId);\n    return !stuffs.find(s => !s.isA);\n  };\n\n  checkRange(rangeName) {\n    const range = this._getRange(rangeName);\n    const param = this._getParam(range.paramName);\n    const res = param.isAchiev\n      ? param.value === range.max\n      : param.value >= range.min && param.value <= range.max;\n    return res;\n  }\n\n  checkGrad = gradName => {\n    const grad = this._getGrad(gradName);\n    const ranges = grad.rangesNames.map(rName => this._getRange(rName));\n    const params = [];\n    ranges.forEach(range => {\n      if (!params[range.paramName]) {\n        params[range.paramName] = this.checkRange(range.name);\n      }\n    });\n    for (let key in params) {\n      if (!params[key]) return false;\n    }\n    return true;\n  };\n\n  idState = {};\n  getId = type => {\n    if (!this.idState[type]) this.idState[type] = 0;\n    this.idState[type]++;\n    return this.idState[type];\n  };\n\n  getStartId = () => {\n    const startTopic = this.topics.find(topic => topic.isStart);\n    const stages = this._getStages(startTopic.id);\n    const startStage = stages.find(stage => stage.isStart);\n    return startStage ? startStage.id : null;\n  };\n\n  calcStuff = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n\n    this._editParams(stuff.changes);\n    return stuff.next_stage_id;\n  };\n\n  getGeneralPhrase = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n    const phrases = this._getPhrases(stuff.id);\n    const generalPhrase = phrases.find(phrase => phrase.isGeneral);\n    return generalPhrase?.text;\n  };\n\n  getCorrectPhrase = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n    const phrases = this._getPhrases(stuff.id);\n    const neutralPhrase = phrases.find(phrase => !phrase.rangeName);\n    for (let i in phrases) {\n      const phrase = phrases[i];\n      if (phrase.rangeName && this.checkRange(phrase.rangeName))\n        return phrase.text;\n    }\n\n    return neutralPhrase.text;\n  };\n\n  _getCorrectStuffs(id) {\n    //НЕОБХОДИМОЕ ЧИСЛО ОТВЕТОВ\n    const necessity = 3;\n    const stuffs = this._getStuffs(id);\n\n    //ОГРАНИЧЕНИЕ ПО *БЫЛ ЗДЕСЬ*\n    const answersAll = stuffs.filter(stuff => {\n      if (stuff.isA) return false;\n      else {\n        const stage = this.stages.find(s => s.id === stuff.next_stage_id);\n        return !stage.isBeen;\n      }\n    });\n\n    const correctNeutAchiev = [];\n    const correctFinal = [];\n    const incrrectNeutral = [];\n\n    answersAll.forEach(stuff => {\n      const nextStage = this.stages.find(\n        stage => stage.id === stuff.next_stage_id\n      );\n      const topic = this._getTopic(nextStage.topic_id);\n      const grad = this._getGrad(topic.graduation);\n      const ranges = grad.rangesNames(rName => this._getRange(rName));\n      const params = ranges.rangesNames(r => this._getParam(r.paramName));\n\n      const isAchiev = params.find(p => p.isAchiev);\n      const correct = this.checkGrad(grad.name);\n      const { isFin } = topic;\n\n      if (correct) {\n        //подходящее по градации\n        //если не финал\n        if (!isFin) correctNeutAchiev.push(stuff);\n        //если финал\n        else correctFinal.push(stuff);\n      } else if (!isAchiev && !isFin) {\n        //неподходящие если не ачивный и не финальный\n        incrrectNeutral.push(stuff);\n      }\n    });\n\n    let resultStuffs = correctNeutAchiev.concat(incrrectNeutral);\n    //если пришло время для финалочек\n    if (false) resultStuffs = resultStuffs.concat(correctFinal);\n    return resultStuffs.slice(0, necessity);\n  }\n\n  checkAnswToGrad = stuff => {\n    const nextStage = this.stages.find(\n      stage => stage.id === stuff.next_stage_id\n    );\n    const topic = this._getTopic(nextStage.topic_id);\n    return this.checkGrad(topic.graduation);\n  };\n\n  //ДОБАВИТЬ БЕЗУСЛОВНЫЕ ОГРАНИЧЕНИЯ ДЛЯ ТЕМ ЗАВИСИМЫХ ОТ АЧИВОК\n  getInterfaceStage = id => {\n    //ДОБАВИТЬ ПОДКЛЮЧЕНИЕ ФИНАЛОЧЕК КОГДА НАДО\n\n    const stage = this.stages.find(s => s.id === id);\n    stage.isBeen = true;\n\n    const stuffs = this._getStuffs(id);\n\n    const replicStuff = stuffs.find(stuff => stuff.isA);\n    const replic = new Interf(null, this.getCorrectPhrase(replicStuff.id));\n\n    //ОГРАНИЧЕНИЯ ПО *БЫЛ ТУТ*\n    const answersAll = stuffs.filter(stuff => {\n      return !stuff.isA;\n    });\n\n    //РЕЗУЛЬТАТ\n    const resAnswers = answersAll;\n\n    const interf = {\n      answers: resAnswers.map(stuff => {\n        return new Interf(\n          this.getGeneralPhrase(stuff.id),\n          this.getCorrectPhrase(stuff.id),\n          stuff.id\n        );\n      }),\n      replic\n    };\n\n    return interf;\n  };\n\n  ssign = data => {\n    for (let key in data) {\n      if (![\"params\", \"grads\", \"ranges\"].find(k => k === key)) {\n        this[key] = data[key];\n      }\n    }\n  };\n}\n","export const PARAM_DETERMINATION = \"РЕШИМОСТЬ\";\nexport const PARAM_EQUILIBRIUM = \"УРАВНОВЕШЕННОСТЬ\";\n\nexport const PARAM_DOG = \"УЗНАЛ СОБ МЕРТВА\";\n","export const RANGE_PANIC = \"ПАНИКА\";\nexport const RANGE_TENSION = \"НАПРЯЖЕННОСТЬ\";\nexport const RANGE_STABILITY = \"СТАБИЛЬНОСТЬ\";\n\nexport const RANGE_APATHY = \"АПАТИЯ\";\nexport const RANGE_UNCERTAINTY = \"НЕУВЕРЕННОСТЬ\";\nexport const RANGE_CONFIDENCE = \"УВЕРЕННОСТЬ\";\n\nexport const RANGE_DOG = \"ЗНАЕТ ПРО СОБАКУ\";\n","export const GRAD_PAN_APA = \"ПАН АПАТ\";\nexport const GRAD_PAN_UNC = \"ПАН НЕУВ\";\nexport const GRAD_PAN_CON = \"ПАН УВ\";\n\nexport const GRAD_TEN_APA = \"НАПР АПАТ\";\nexport const GRAD_TEN_UNC = \"НАПР НЕУВ\";\nexport const GRAD_TEN_CON = \"НАПР УВ\";\n\nexport const GRAD_STAB_APA = \"СТАБ АПАТ\";\nexport const GRAD_STAB_UNC = \"СТАБ НЕУВ\";\nexport const GRAD_STAB_CON = \"СТАБ УВ\";\n\nexport const GRAD_DOG = \"ЗНАЕТ ПРО СОБАКУ\";\n","import React from \"react\";\nimport UI from \"./UI\";\nimport Screen from \"./Screen\";\nimport locE from \"../../game/loc_example\";\nimport mlpaState from \"../../mlpa_state\";\n\nexport default class Game extends React.Component {\n  constructor() {\n    super();\n\n    this.landWidth = 1920;\n    this.landHeight = 1080;\n\n    this.loc = locE;\n    this.loc.ssign(mlpaState);\n    this.defaultParams();\n  }\n  defaultParams() {\n    this.loc.params.forEach(p => {\n      if (!p.isAchiev) p.value = 7;\n    });\n  }\n  render() {\n    const { width, height } = window.screen;\n\n    const newWidth = Math.max(width, height);\n\n    const factor = newWidth / this.landWidth;\n    const newHeight = this.landHeight * factor;\n\n    return (\n      <Screen width={newWidth} height={newHeight}>\n        <UI\n          loc={this.loc}\n          width={newWidth}\n          height={newHeight}\n          landSizes={{ landWidth: this.landWidth, landHeight: this.landHeight }}\n        />\n      </Screen>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class TopicItem extends React.Component {\n  render() {\n    const { topic, isSelect, click } = this.props;\n\n    const border = topic.isStart\n      ? \"solid 0.3rem red\"\n      : topic.isFin\n      ? \"solid 0.3rem aqua\"\n      : \"none\";\n\n    const style = {\n      backgroundColor: isSelect ? \"green\" : \"gray\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      cursor: \"pointer\",\n      color: \"white\",\n      border\n    };\n    return (\n      <div\n        style={style}\n        onClick={() => {\n          click(topic.id);\n        }}\n      >\n        {topic.name}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class StageItem extends React.Component {\n  render() {\n    const { stage, click, isSelect, stuffText, methods } = this.props;\n\n    const isFinal = methods.checkStageFinal(stage.id);\n    const border = stage.isStart\n      ? \"solid 0.3rem red\"\n      : isFinal\n      ? \"solid 0.3rem aqua\"\n      : \"none\";\n\n    const style = {\n      backgroundColor: isSelect ? \"blue\" : \"gray\",\n      cursor: \"pointer\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      color: \"white\",\n      border\n    };\n    return (\n      <div\n        onClick={() => {\n          click(stage.id);\n        }}\n        style={style}\n      >\n        {stuffText(stage.id)}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class StuffItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const nextStage = props.allStages.find(\n      s => s.id === props.stuff.next_stage_id\n    );\n    const currentTopic = nextStage?.topic_id;\n\n    this.state = {\n      currentTopic,\n      viewAchievs: false\n    };\n  }\n  render() {\n    const {\n      stuff,\n      methods,\n      range,\n      stat,\n      goStage,\n      allStages,\n      stuffText,\n      allTopics\n    } = this.props;\n\n    const phrase = methods.getPhrases(stuff.id).find(p => {\n      return (\n        p.rangeName === range ||\n        (range === \"none\" && !p.rangeName) ||\n        (range === \"GENERAL\" && p.isGeneral)\n      );\n    });\n\n    const { changes } = stuff;\n    const { currentTopic, viewAchievs } = this.state;\n\n    const changesItems = !stuff.isA\n      ? stat.params.map(p => {\n          const c = changes.find(change => change.paramName === p.name);\n\n          const term = c ? c.term : p.isAchiev ? false : 0;\n\n          const inputElem = p.isAchiev ? (\n            <input\n              type=\"checkbox\"\n              checked={term}\n              onChange={e => {\n                methods.updateStuff(stuff.id, stuff.next_stage_id, {\n                  paramName: p.name,\n                  term: Boolean(e.target.checked)\n                });\n              }}\n            />\n          ) : (\n            <input\n              type=\"number\"\n              style={{ width: \"40px\" }}\n              value={term}\n              onChange={e => {\n                methods.updateStuff(stuff.id, stuff.next_stage_id, {\n                  paramName: p.name,\n                  term: Number(e.target.value)\n                });\n              }}\n            />\n          );\n\n          if (!viewAchievs && p.isAchiev) return null;\n          return (\n            <span\n              style={{\n                display: \"inline-block\",\n                padding: \"0.5rem\",\n                backgroundColor: \"#ffccff\",\n                marginRight: \"0.5rem\"\n              }}\n              key={p.name}\n            >\n              {p.name}:{inputElem}\n            </span>\n          );\n        })\n      : null;\n\n    const style = {\n      backgroundColor: stuff.isA ? \"#ccffff\" : \"#D3D3D3\",\n      cursor: \"pointer\",\n      margin: \"0.2rem\",\n\n      paddingTop: stuff.isA ? \"1rem\" : \"0.5rem\",\n      paddingBottom: stuff.isA ? \"1rem\" : \"0.5rem\",\n\n      display: \"inline-block\",\n      width: \"40%\"\n    };\n\n    const text = phrase ? phrase.text : \"\";\n\n    const linkItems = methods.getStages(this.state.currentTopic).map(s => {\n      return (\n        <option value={s.id} key={s.id}>\n          {stuffText(s.id)}\n        </option>\n      );\n    });\n\n    if (!allStages.find(s => s.id === stuff.next_stage_id)) {\n      linkItems.unshift(\n        <option value={\"error\"} key=\"0\">\n          {stuff.next_stage_id} NOT FOUND\n        </option>\n      );\n    }\n\n    const linkThemesItems = allTopics.map(t => {\n      return (\n        <option value={t.id} key={t.id}>\n          {t.name}\n        </option>\n      );\n    });\n\n    const next = !stuff.isA ? (\n      <div style={{ display: \"inline-block\", marginRight: \"0.5rem\" }}>\n        <div\n          style={{\n            display: \"inline-block\",\n            backgroundColor: \"red\",\n            cursor: \"pointer\",\n            color: \"white\"\n          }}\n          onClick={() => {\n            goStage(stuff.next_stage_id);\n          }}\n        >\n          ===>\n        </div>\n        {currentTopic}\n\n        <select\n          value={this.state.currentTopic}\n          onChange={e => {\n            const newCurrTopic = Number(e.target.value);\n            this.setState({ currentTopic: newCurrTopic });\n            const topicStages = methods.getStages(newCurrTopic);\n\n            if (\n              topicStages.length &&\n              !topicStages.find(s => s.id === stuff.next_stage_id)\n            )\n              methods.updateStuff(stuff.id, topicStages[0].id);\n          }}\n        >\n          {linkThemesItems}\n        </select>\n\n        <select\n          value={stuff.next_stage_id}\n          onChange={e => {\n            methods.updateStuff(stuff.id, Number(e.target.value));\n          }}\n        >\n          {linkItems}\n        </select>\n      </div>\n    ) : null;\n\n    const removeButton = !stuff.isA ? (\n      <button onClick={() => methods.removeStuff(stuff.id)}>X</button>\n    ) : null;\n\n    const viewBox = stuff.isA ? null : (\n      <input\n        type=\"checkbox\"\n        checked={viewAchievs}\n        onChange={e => {\n          this.setState({ viewAchievs: e.target.checked });\n        }}\n      />\n    );\n\n    return (\n      <div>\n        {removeButton}\n        <div style={style}>\n          ({stuff.id}){\" \"}\n          <input\n            value={text}\n            style={{ width: \"90%\" }}\n            onChange={e => {\n              methods.updatePhrase(\n                stuff.id,\n                range === \"none\" ? null : range,\n                phrase ? phrase.id : null,\n                e.target.value\n              );\n            }}\n          />\n        </div>\n        {next}\n        {changesItems}\n        {viewBox}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class RangeItem extends React.Component {\n  render() {\n    const { range, isSelect, click } = this.props;\n\n    const style = {\n      backgroundColor: isSelect ? \"orange\" : \"gray\",\n      cursor: \"pointer\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      color: \"white\"\n    };\n    return (\n      <div\n        style={style}\n        onClick={() => {\n          click(range.name);\n        }}\n      >\n        {range.name}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class AddStuff extends React.Component {\n  render() {\n    const { methods, stageId, topic } = this.props;\n\n    const nextStageId = methods.getStages(topic.id)[0].id;\n\n    return (\n      <div>\n        <button\n          onClick={() => {\n            methods.addStuff(stageId, false, nextStageId, []);\n          }}\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport StuffItem from \"../Stuffs/StuffItem\";\nimport RangeItem from \"../Ranges/RangeItem\";\nimport AddStuff from \"../Stuffs/AddStuff\";\n\nexport default class Stage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { currentRange: \"none\", acheivs: false };\n  }\n\n  click = name => {\n    this.setState({ currentRange: name });\n  };\n  splitStuffs(stuffs) {\n    const answer = stuffs.find(stuff => stuff.isA);\n    const pAnswers = stuffs.filter(stuff => !stuff.isA);\n    return { answer, pAnswers };\n  }\n  render() {\n    const {\n      stage,\n      methods,\n      stat,\n      changeStage,\n      allStages,\n      stuffText,\n      topic,\n      allTopics\n    } = this.props;\n\n    const stuffs = methods.getStuffs(stage.id);\n\n    const { answer, pAnswers } = this.splitStuffs(stuffs);\n\n    const stuffsItems = [answer, ...pAnswers].map(stuff => {\n      const res = stuff ? (\n        <StuffItem\n          stat={stat}\n          range={this.state.currentRange}\n          methods={methods}\n          key={stuff.id}\n          stuff={stuff}\n          goStage={changeStage}\n          allStages={allStages}\n          allTopics={allTopics}\n          stuffText={stuffText}\n        />\n      ) : null;\n\n      return res;\n    });\n\n    if (\"GENERAL\" === this.state.currentRange) {\n      stuffsItems.shift();\n    }\n\n    const { ranges } = stat;\n\n    const generStuff = (\n      <RangeItem\n        isSelect={\"GENERAL\" === this.state.currentRange}\n        range={{ name: \"GENERAL\" }}\n        click={this.click}\n      />\n    );\n\n    const noRanges = (\n      <RangeItem\n        isSelect={\"none\" === this.state.currentRange}\n        range={{ name: \"none\" }}\n        click={this.click}\n      />\n    );\n\n    const rangesItems = ranges\n      .filter(r => {\n        const param = methods.getParam(r.paramName);\n        return this.state.acheivs || !param.isAchiev;\n      })\n      .map(range => (\n        <RangeItem\n          isSelect={range.name === this.state.currentRange}\n          key={range.name}\n          range={range}\n          click={this.click}\n        />\n      ));\n\n    return (\n      <div>\n        <h2 align=\"center\">\n          {stuffText(stage.id)}{\" \"}\n          <button\n            onClick={() => {\n              methods.removeStage(stage.id);\n            }}\n          >\n            X\n          </button>{\" \"}\n          <input\n            type=\"checkbox\"\n            checked={stage.isStart}\n            onChange={e => {\n              methods.updateStage(stage.id, e.target.checked);\n            }}\n          />\n        </h2>\n        {generStuff}\n        {noRanges}\n        {rangesItems}\n        <input\n          type=\"checkbox\"\n          checked={this.state.acheivs}\n          onChange={e => {\n            this.setState({ acheivs: e.target.checked });\n          }}\n        />\n        {stuffsItems}\n        <AddStuff topic={topic} methods={methods} stageId={stage.id} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport StageItem from \"../Stages/StageItem\";\nimport Stage from \"../Stages/Stage\";\n\nexport default class Topic extends React.Component {\n  constructor() {\n    super();\n    this.state = { newStageStart: false };\n  }\n  stuffText = id => {\n    if (id) {\n      const { methods } = this.props;\n\n      const nextStuff = methods.getStuffs(id).find(stuff => stuff.isA);\n\n      if (nextStuff) {\n        const nextPhrases = methods.getPhrases(nextStuff.id);\n        const nextPhrase = nextPhrases.find(p => !p.rangeName);\n\n        if (nextPhrase) {\n          return `(${id}) ${nextPhrase.text.slice(0, 7)}...`;\n        } else return `(${id}) NOT PHRASE...`;\n      } else return \"NOT FOUND\";\n    }\n    return null;\n  };\n  render() {\n    const {\n      topic,\n      stat,\n      methods,\n      currentStage,\n      click,\n      changeStage,\n      allStages,\n      allTopics\n    } = this.props;\n\n    const { grads } = stat;\n    const { graduation } = topic;\n\n    const stages = methods.getStages(topic.id);\n    const stagesItems = stages.map(stage => {\n      const isSelect = stage.id === currentStage;\n\n      return (\n        <StageItem\n          methods={methods}\n          stuffText={this.stuffText}\n          key={stage.id}\n          stage={stage}\n          isSelect={isSelect}\n          click={click}\n        />\n      );\n    });\n\n    const optItems = grads.map(grad => {\n      return (\n        <option value={grad.name} key={grad.name}>\n          {grad.name}\n        </option>\n      );\n    });\n\n    const curStage = stages.find(stage => stage.id === currentStage);\n\n    const stageView = currentStage ? (\n      <Stage\n        stage={curStage}\n        methods={methods}\n        stat={stat}\n        allStages={allStages}\n        allTopics={allTopics}\n        changeStage={changeStage}\n        stuffText={this.stuffText}\n        topic={topic}\n      />\n    ) : null;\n\n    return (\n      <div>\n        <h1 align=\"center\">\n          Topic{\" \"}\n          <input\n            value={topic.name}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                e.target.value,\n                topic.graduation,\n                topic.isFin,\n                topic.isStart\n              );\n            }}\n          />\n          , grad:\n          <select\n            value={graduation}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                e.target.value,\n                topic.isFin,\n                topic.isStart\n              );\n            }}\n          >\n            {optItems}\n          </select>\n          Start:\n          <input\n            type=\"checkbox\"\n            checked={topic.isStart}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                topic.graduation,\n                topic.isFin,\n                e.target.checked\n              );\n            }}\n          />\n          Final:\n          <input\n            type=\"checkbox\"\n            checked={topic.isFin}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                topic.graduation,\n                e.target.checked,\n                topic.isStart\n              );\n            }}\n          />\n          <button\n            onClick={() => {\n              methods.removeTopic(topic.id);\n            }}\n            style={{ marginLeft: \"1rem\" }}\n          >\n            X\n          </button>\n        </h1>\n\n        <br />\n        <div>\n          <input\n            type=\"checkbox\"\n            checked={this.state.newStageStart}\n            onChange={e => {\n              this.setState({ newStageStart: e.target.checked });\n            }}\n          />\n          <button\n            onClick={() => {\n              methods.addStage(topic.id, this.state.newStageStart);\n            }}\n          >\n            +\n          </button>\n        </div>\n        {stagesItems}\n        <br />\n        {stageView}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class AddTopic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graduation: props.stat.grads[0].name,\n      name: \"\",\n      isFin: false,\n      isStart: false\n    };\n  }\n\n  render() {\n    const { graduation, name, isFin, isStart } = this.state;\n    const { stat, methods } = this.props;\n    const { grads } = stat;\n    const optItems = grads.map(grad => (\n      <option value={grad.name} key={grad.name}>\n        {grad.name}\n      </option>\n    ));\n\n    return (\n      <div>\n        <input\n          value={name}\n          onChange={e => {\n            this.setState({ name: e.target.value });\n          }}\n        />\n        <select\n          value={graduation}\n          onChange={e => {\n            this.setState({ graduation: e.target.value });\n          }}\n        >\n          {optItems}\n        </select>\n        Start:\n        <input\n          type=\"checkbox\"\n          checked={isStart}\n          onChange={e => {\n            this.setState({ isStart: e.target.checked });\n          }}\n        />\n        Final:\n        <input\n          type=\"checkbox\"\n          checked={isFin}\n          onChange={e => {\n            this.setState({ isFin: e.target.checked });\n          }}\n        />\n        <button\n          onClick={() => {\n            methods.addTopic(name, graduation, isFin, isStart);\n          }}\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport locE from \"../../game/loc_example\";\n//import locE from \"./../../game/loc_example\";\nimport TopicItem from \"./Topics/TopicItem\";\nimport Topic from \"./Topics/Topic\";\nimport AddTopic from \"./Topics/AddTopic\";\nimport exportFromJSON from \"export-from-json\";\nimport mlpaState from \"../../mlpa_state\";\n\nexport default class Editor extends React.Component {\n  constructor() {\n    super();\n    this.myStorage = window.localStorage;\n    this.loc = {};\n    this.import(true);\n    const { topicId, stageId } = this.getTopStag();\n    this.state = { currentTopic: topicId, currentStage: stageId };\n  }\n\n  import(firstTime) {\n    this.loc = locE;\n\n    this.loc.ssign({ ...mlpaState });\n    if (!firstTime) this.forceUpdate();\n  }\n\n  getTopStag() {\n    const topicId = this.loc.topics[0] ? this.loc.topics[0].id : null;\n    const stageId = this.loc._getStages(topicId)[0]\n      ? this.loc._getStages(topicId)[0].id\n      : null;\n    return { topicId, stageId };\n  }\n\n  exportFile() {\n    const data = this.loc;\n    const fileName = \"mlpa_state\";\n    const exportType = \"json\";\n\n    exportFromJSON({ data, fileName, exportType });\n  }\n\n  saveLoc() {\n    const locData = JSON.stringify(this.loc);\n    this.myStorage.setItem(\"locData\", locData);\n  }\n\n  addTopic = (name, gradName, isFin, isStart) => {\n    this.loc.cTopic(name, gradName, isFin, isStart);\n    this.forceUpdate();\n  };\n\n  addStage = (topicId, isStart) => {\n    this.loc.addStages(\n      topicId,\n      this.loc.cStage(\n        isStart,\n        this.loc.cStuff({ isA: true }, this.loc.cPhrase(\"space\"))\n      )\n    );\n    this.forceUpdate();\n  };\n  updateStage = (id, isStart) => {\n    const stage = this.loc.stages.find(s => s.id === id);\n    stage.isStart = isStart;\n    this.forceUpdate();\n  };\n  updateTopic = (topicId, name, gradName, isFin, isStart) => {\n    const topic = this.loc._getTopic(topicId);\n    topic.name = name;\n    topic.graduation = gradName;\n    topic.isFin = isFin;\n    topic.isStart = isStart;\n    this.forceUpdate();\n  };\n  addPhrase = (stuffId, range, text, isGeneral) => {\n    this.loc.addPhrases(stuffId, [this.loc.cPhrase(text, isGeneral, range)]);\n    this.forceUpdate();\n  };\n\n  updatePhrase = (stuffId, range, id, newText) => {\n    const phrase = this.loc.phrases.find(p => p.id === id);\n    if (phrase) {\n      phrase.text = newText;\n      if (!newText && !phrase.isGeneral && phrase.rangeName)\n        this.removePhrase(phrase.id);\n    } else {\n      this.addPhrase(stuffId, range, newText);\n    }\n    this.forceUpdate();\n  };\n\n  addStuff = (stageId, isA, nextStageId, changes = []) => {\n    const newStaff = this.loc.cStuff(\n      {\n        isA,\n        id: nextStageId\n      },\n      this.loc.cPhrase(\"space\"),\n      this.loc.cPhrase(\"generalSpace\", true)\n    );\n\n    this.loc.addStuffs(stageId, newStaff);\n\n    this.forceUpdate();\n  };\n  updateStuff = (id, nextStageId, ...changes) => {\n    const stuff = this.loc.stuffs.find(s => s.id === id);\n    stuff.next_stage_id = nextStageId;\n    changes.forEach(change => {\n      const changeIndex = stuff.changes.findIndex(\n        c => c.paramName === change.paramName\n      );\n      const thisStuffCh = stuff.changes[changeIndex];\n\n      const changeTerm = change.term;\n\n      if (!thisStuffCh) {\n        stuff.changes.push(this.loc.cChange(change.paramName, changeTerm));\n      } else {\n        if (changeTerm) thisStuffCh.term = changeTerm;\n        else stuff.changes.splice(changeIndex, 1);\n        console.log(thisStuffCh);\n      }\n    });\n    this.forceUpdate();\n  };\n\n  removeTopic = id => {\n    const index = this.loc.topics.findIndex(t => t.id === id);\n    this.loc.topics.splice(index, 1);\n    const stages = this.loc._getStages(id);\n    stages.forEach(s => {\n      this.removeStage(s.id);\n    });\n\n    this.setState({ currentTopic: null, currentStage: null });\n    this.forceUpdate();\n  };\n  removeStage = id => {\n    const index = this.loc.stages.findIndex(s => s.id === id);\n    this.loc.stages.splice(index, 1);\n    const stuffs = this.loc._getStuffs(id);\n    stuffs.forEach(s => {\n      if (s.next_stage_id === id) {\n        s.next_stage_id = null;\n      }\n      this.removeStuff(s.id);\n    });\n    this.setState({ currentStage: null });\n    this.forceUpdate();\n  };\n  removeStuff = id => {\n    const index = this.loc.stuffs.findIndex(s => s.id === id);\n    this.loc.stuffs.splice(index, 1);\n    const phrases = this.loc._getPhrases(id);\n    phrases.forEach(p => {\n      this.removePhrase(p.id);\n    });\n    this.forceUpdate();\n  };\n  removePhrase = id => {\n    const index = this.loc.phrases.findIndex(p => p.id === id);\n    this.loc.phrases.splice(index, 1);\n    this.forceUpdate();\n  };\n\n  click = id => {\n    const firstStage = this.loc._getStages(id)[0];\n    if (firstStage) this.changeStage(firstStage.id);\n    else this.setState({ currentTopic: id, currentStage: null });\n    this.forceUpdate();\n  };\n  changeStage = id => {\n    const stage = this.loc.stages.find(s => s.id === id);\n    if (stage) {\n      this.setState({ currentTopic: stage.topic_id, currentStage: id });\n    }\n\n    this.forceUpdate();\n  };\n\n  render() {\n    const { topics, grads, params, ranges } = this.loc;\n    const stat = {\n      grads,\n      params,\n      ranges\n    };\n\n    const { currentStage, currentTopic } = this.state;\n\n    const methods = {\n      addTopic: this.addTopic,\n      addStage: this.addStage,\n      updateStage: this.updateStage,\n      updateTopic: this.updateTopic,\n      removeTopic: this.removeTopic,\n      removeStage: this.removeStage,\n      updateStuff: this.updateStuff,\n      removeStuff: this.removeStuff,\n      getStages: this.loc._getStages,\n      getStuffs: this.loc._getStuffs,\n      getPhrases: this.loc._getPhrases,\n      addStuff: this.addStuff,\n      updatePhrase: this.updatePhrase,\n      addPhrase: this.addPhrase,\n      removePhrase: this.removePhrase,\n      getParam: this.loc._getParam,\n      checkStageFinal: this.loc.checkStageFinal\n    };\n\n    const topicItems = topics.map(topic => {\n      const isSelect = topic.id === currentTopic;\n      return (\n        <TopicItem\n          key={topic.id}\n          topic={topic}\n          methods={methods}\n          isSelect={isSelect}\n          click={this.click}\n        />\n      );\n    });\n\n    const topicView = currentTopic ? (\n      <Topic\n        allTopics={this.loc.topics}\n        allStages={this.loc.stages}\n        currentStage={currentStage}\n        topic={topics.find(topic => topic.id === this.state.currentTopic)}\n        stat={stat}\n        methods={methods}\n        goTopic={this.click}\n        click={this.changeStage}\n        changeStage={this.changeStage}\n      />\n    ) : null;\n\n    console.log(this.loc);\n    return (\n      <div>\n        <button onClick={() => this.import()}>import</button>\n        <button onClick={() => this.exportFile()}>export</button>\n        <br />\n        <AddTopic methods={methods} stat={stat} />\n        {topicItems}\n        {topicView}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Game from \"./components/Game/Game\";\nimport Editor from \"./components/Editor/Editor\";\n\nfunction App() {\n  return (\n    <div>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}