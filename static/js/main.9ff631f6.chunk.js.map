{"version":3,"sources":["mlpa_engine/graduation.js","mlpa_engine/parameter.js","mlpa_engine/phrase.js","mlpa_engine/range.js","mlpa_engine/stage.js","mlpa_engine/stuff.js","mlpa_engine/topic.js","mlpa_engine/change.js","mlpa_engine/interf.js","game/loc_example.js","mlpa_engine/loc.js","game/parameters.js","game/ranges.js","game/grads.js","components/Game/AnswerI/AnswerI.js","components/Game/Params.js","components/Game/DialogBox/PhraseText.js","components/Game/DialogBox/DialogBox.js","components/Game/Visual/Visual.js","components/Game/Screen.js","components/Game/UI.js","components/Game/Game.js","components/Editor/Topics/TopicItem.js","components/Editor/Stages/StageItem.js","components/Editor/Stuffs/StuffItem.js","components/Editor/Ranges/RangeItem.js","components/Editor/Stuffs/AddStuff.js","components/Editor/Stages/Stage.js","components/Editor/Topics/Topic.js","components/Editor/Topics/AddTopic.js","components/Editor/Editor.js","App.js","serviceWorker.js","index.js"],"names":["Graduation","name","rangesNames","this","Parameter","value","isAchiev","Phrase","rangeName","text","isGeneral","id","stuff_id","Range","paramName","min","max","Stage","isStart","isBeen","topic_id","Stuff","next_stage_id","changes","isA","stage_id","Topic","graduation","isFin","Change","term","Interf","generalPhrase","phrase","locE","params","ranges","grads","topics","stuffs","stages","phrases","lim","addStages","topicId","_getTopic","newStages","map","stage","concat","console","error","_getStages","filter","_getStuffs","stageId","stuff","_getPhrases","stuffId","_getParam","find","param","checkStageFinal","s","checkGrad","gradName","_getGrad","rName","_getRange","key","forEach","range","checkRange","idState","getId","type","getStartId","startTopic","topic","startStage","calcStuff","_editParams","getGeneralPhrase","getCorrectPhrase","neutralPhrase","i","checkAnswToGrad","nextStage","getInterfaceStage","replicStuff","replic","answers","ssign","data","k","addTopics","addStuffs","props","nextStageId","addPhrases","c","newStuffs","newPhrases","phraseId","grad","change","newValue","answersAll","correctNeutAchiev","correctFinal","incrrectNeutral","r","p","correct","push","slice","addParams","cParam","addRanges","cRange","addGrads","cGrad","AnswerI","React","Component","click","disabled","isHiding","disClass","className","onClick","toUpperCase","PhraseText","state","curText","balText","pAnsswerd","writingFinish","isPlayer","curLen","length","newText","setTimeout","setState","nextLetterLoop","title","titleClass","DialogBox","dDelay","isPAnsserd","pPhrase","cPhrase","hidingClass","hiding","cAnswer","Visual","refs","myCanvas","ctx","getContext","img","Image","src","window","location","href","onload","event","target","drawImage","width","height","ref","Screen","style","display","backgroundColor","marginLeft","position","overflow","children","UI","loc","mlpaState","defaultParams","currStageId","getStageData","interf","newStageId","answersItems","answer","update","Game","screen","TopicItem","isSelect","margin","padding","cursor","color","border","StageItem","stuffText","isFinal","methods","StuffItem","allStages","currentTopic","viewAchievs","stat","goStage","allTopics","getPhrases","changesItems","inputElem","checked","onChange","e","updateStuff","Boolean","Number","marginRight","paddingTop","paddingBottom","linkItems","getStages","unshift","linkThemesItems","t","next","newCurrTopic","topicStages","removeButton","removeStuff","viewBox","updatePhrase","RangeItem","AddStuff","addStuff","currentRange","acheivs","pAnswers","changeStage","getStuffs","splitStuffs","stuffsItems","shift","generStuff","noRanges","rangesItems","getParam","align","removeStage","updateStage","nextStuff","nextPhrase","newStageStart","currentStage","stagesItems","optItems","curStage","stageView","updateTopic","removeTopic","addStage","AddTopic","addTopic","App","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9ff631f6.chunk.js","sourcesContent":["export default class Graduation {\n  constructor(name, rangesNames) {\n    this.name = name;\n    this.rangesNames = rangesNames;\n  }\n}\n","export default class Parameter {\n  constructor(name, value, isAchiev = false) {\n    this.name = name;\n    this.value = value;\n    this.isAchiev = isAchiev;\n  }\n}\n","export default class Phrase {\n  constructor(rangeName, text, isGeneral, id) {\n    this.rangeName = rangeName;\n    this.text = text;\n    this.isGeneral = isGeneral;\n    this.id = id;\n  }\n  stuff_id = null;\n}\n","export default class Range {\n  constructor(name, paramName, min, max) {\n    this.name = name;\n    this.paramName = paramName;\n    this.min = min;\n    this.max = max;\n  }\n}\n","export default class Stage {\n  constructor(isStart, id) {\n    this.id = id;\n    this.isStart = isStart\n  }\n  isBeen = false;\n  topic_id = null;\n}\n","export default class Stuff {\n  constructor(next_stage_id, changes = [], isA = false, id) {\n    this.next_stage_id = next_stage_id;\n    this.changes = changes;\n    this.isA = isA;\n    this.id = id;\n  }\n  stage_id = null;\n}\n","export default class Topic {\n  constructor(name, graduation, isFin, isStart, id) {\n    this.name = name;\n    this.graduation = graduation;\n    this.isFin = isFin;\n    this.isStart = isStart;\n    this.id = id;\n  }\n}\n","export default class Change {\n  constructor(paramName, term) {\n    this.paramName = paramName;\n    this.term = term;\n  }\n}\n","export default class Interf {\n  constructor(generalPhrase, phrase, id) {\n    this.generalPhrase = generalPhrase;\n    this.phrase = phrase;\n    this.id = id;\n  }\n}\n","import { Loc } from \"./../mlpa_engine\";\n\nimport {\n  PARAM_EQUILIBRIUM,\n  PARAM_DETERMINATION,\n  PARAM_DOG\n} from \"./parameters\";\n\nimport {\n  RANGE_PANIC,\n  RANGE_TENSION,\n  RANGE_STABILITY,\n  RANGE_APATHY,\n  RANGE_UNCERTAINTY,\n  RANGE_CONFIDENCE,\n  RANGE_DOG\n} from \"./ranges\";\n\nimport {\n  GRAD_PAN_APA,\n  GRAD_PAN_UNC,\n  GRAD_PAN_CON,\n  GRAD_TEN_APA,\n  GRAD_TEN_UNC,\n  GRAD_TEN_CON,\n  GRAD_STAB_APA,\n  GRAD_STAB_UNC,\n  GRAD_STAB_CON,\n  GRAD_DOG\n} from \"./grads\";\n\nconst locE = new Loc();\nlocE.addParams(\n  locE.cParam(PARAM_DETERMINATION, 2),\n  locE.cParam(PARAM_EQUILIBRIUM, 4),\n\n  locE.cParam(PARAM_DOG, false, true)\n);\n\nlocE.addRanges(\n  locE.cRange(RANGE_PANIC, 1, 5, PARAM_EQUILIBRIUM),\n  locE.cRange(RANGE_TENSION, 6, 10, PARAM_EQUILIBRIUM),\n  locE.cRange(RANGE_STABILITY, 11, 15, PARAM_EQUILIBRIUM),\n\n  locE.cRange(RANGE_APATHY, 1, 5, PARAM_DETERMINATION),\n  locE.cRange(RANGE_UNCERTAINTY, 6, 10, PARAM_DETERMINATION),\n  locE.cRange(RANGE_CONFIDENCE, 11, 15, PARAM_DETERMINATION),\n\n  locE.cRange(RANGE_DOG, true, true, PARAM_DOG)\n);\nlocE.addGrads(\n  locE.cGrad(GRAD_PAN_APA, RANGE_PANIC, RANGE_APATHY),\n  locE.cGrad(GRAD_PAN_UNC, RANGE_PANIC, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_PAN_CON, RANGE_PANIC, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_TEN_APA, RANGE_TENSION, RANGE_APATHY),\n  locE.cGrad(GRAD_TEN_UNC, RANGE_TENSION, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_TEN_CON, RANGE_TENSION, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_STAB_APA, RANGE_STABILITY, RANGE_APATHY),\n  locE.cGrad(GRAD_STAB_UNC, RANGE_STABILITY, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_STAB_CON, RANGE_STABILITY, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_DOG, RANGE_DOG)\n);\n\nexport default locE;\n","import Parameter from \"./parameter\";\nimport Range from \"./range\";\nimport Graduation from \"./graduation\";\nimport Phrase from \"./phrase\";\nimport Stuff from \"./stuff\";\nimport Change from \"./change\";\nimport Stage from \"./stage\";\nimport Topic from \"./topic\";\nimport Interf from \"./interf\";\n\nexport default class Loc {\n  params = [];\n  ranges = [];\n  grads = [];\n  topics = [];\n\n  stuffs = [];\n  stages = [];\n  phrases = [];\n\n  lim = 15;\n\n  cParam(name, value, isAchiev) {\n    return new Parameter(name, value, isAchiev);\n  }\n  addParams(...params) {\n    this.params = this.params.concat(params);\n  }\n\n  cRange(name, min, max, paramName) {\n    return new Range(name, paramName, min, max);\n  }\n  addRanges(...ranges) {\n    this.ranges = this.ranges.concat(ranges);\n  }\n\n  cGrad(name, ...rangesNames) {\n    return new Graduation(name, rangesNames);\n  }\n  addGrads(...grads) {\n    this.grads = this.grads.concat(grads);\n  }\n\n  cTopic(name, gradName, isFin, isStart, ...stages) {\n    const topicId = this.getId(\"topics\");\n    this.addTopics(new Topic(name, gradName, isFin, isStart, topicId));\n    this.addStages(topicId, ...stages);\n  }\n\n  addTopics(...topics) {\n    this.topics = this.topics.concat(topics);\n  }\n\n  cStage(isStart, ...answers) {\n    const stageId = this.getId(\"stages\");\n    this.addStuffs(stageId, ...answers);\n    return new Stage(isStart, stageId);\n  }\n\n  addStages = (topicId, ...stages) => {\n    if (this._getTopic(topicId)) {\n      const newStages = stages.map(stage => {\n        return { ...stage, topic_id: topicId };\n      });\n      this.stages = this.stages.concat(newStages);\n    } else console.error(`Topic ${topicId} not found!`);\n  };\n\n  cStuff(props, ...phrases) {\n    const { id: nextStageId, changes = [], isA } = props ? props : {};\n    const stuffId = this.getId(\"stuffs\");\n\n    this.addPhrases(stuffId, phrases);\n    return new Stuff(\n      nextStageId,\n      !isA ? changes.filter(c => c.term) : [],\n      isA,\n      stuffId\n    );\n  }\n\n  addStuffs(stageId, ...stuffs) {\n    const newStuffs = stuffs.map(stuff => ({ ...stuff, stage_id: stageId }));\n    this.stuffs = this.stuffs.concat(newStuffs);\n  }\n\n  addPhrases(stuffId, phrases) {\n    const newPhrases = phrases.map(phrase => ({\n      ...phrase,\n      stuff_id: stuffId\n    }));\n\n    this.phrases = this.phrases.concat(newPhrases);\n  }\n\n  cPhrase(text, isGeneral = false, rangeName) {\n    const phraseId = this.getId(\"phrases\");\n    return new Phrase(rangeName, text, isGeneral, phraseId);\n  }\n\n  cChange(paramName, term) {\n    return new Change(paramName, term);\n  }\n\n  _getTopic(id) {\n    return this.topics.find(topic => topic.id === id);\n  }\n  _getStages = topicId => {\n    return this.stages.filter(stage => stage.topic_id === topicId);\n  };\n\n  _getStuffs = stageId => {\n    return this.stuffs.filter(stuff => stuff.stage_id === stageId);\n  };\n\n  _getPhrases = stuffId => {\n    return this.phrases.filter(phrase => phrase.stuff_id === stuffId);\n  };\n\n  _getParam = name => {\n    return this.params.find(param => param.name === name);\n  };\n\n  _getRange(name) {\n    return this.ranges.find(range => range.name === name);\n  }\n\n  _getGrad(name) {\n    return this.grads.find(grad => grad.name === name);\n  }\n\n  _editParams(changes) {\n    changes.forEach(change => {\n      const param = this._getParam(change.paramName);\n\n      if (param.isAchiev) {\n        param.value = true;\n      } else {\n        const newValue = param.value + change.term;\n        if (newValue > this.lim) {\n          param.value = this.lim;\n        } else if (newValue < 1) {\n          param.value = 1;\n        } else param.value = newValue;\n      }\n    });\n  }\n\n  checkStageFinal = stageId => {\n    const stuffs = this._getStuffs(stageId);\n    return !stuffs.find(s => !s.isA);\n  };\n\n  checkRange(rangeName) {\n    const range = this._getRange(rangeName);\n    const param = this._getParam(range.paramName);\n    const res = param.isAchiev\n      ? param.value === range.max\n      : param.value >= range.min && param.value <= range.max;\n    return res;\n  }\n\n  checkGrad = gradName => {\n    const grad = this._getGrad(gradName);\n    const ranges = grad.rangesNames.map(rName => this._getRange(rName));\n    const params = [];\n    ranges.forEach(range => {\n      if (!params[range.paramName]) {\n        params[range.paramName] = this.checkRange(range.name);\n      }\n    });\n    for (let key in params) {\n      if (!params[key]) return false;\n    }\n    return true;\n  };\n\n  idState = {};\n  getId = type => {\n    if (!this.idState[type]) this.idState[type] = 0;\n    this.idState[type]++;\n    return this.idState[type];\n  };\n\n  getStartId = () => {\n    const startTopic = this.topics.find(topic => topic.isStart);\n    const stages = this._getStages(startTopic.id);\n    const startStage = stages.find(stage => stage.isStart);\n    return startStage ? startStage.id : null;\n  };\n\n  calcStuff = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n\n    this._editParams(stuff.changes);\n    return stuff.next_stage_id;\n  };\n\n  getGeneralPhrase = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n    const phrases = this._getPhrases(stuff.id);\n    const generalPhrase = phrases.find(phrase => phrase.isGeneral);\n    return generalPhrase?.text;\n  };\n\n  getCorrectPhrase = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n    const phrases = this._getPhrases(stuff.id);\n    const neutralPhrase = phrases.find(phrase => !phrase.rangeName);\n    for (let i in phrases) {\n      const phrase = phrases[i];\n      if (phrase.rangeName && this.checkRange(phrase.rangeName))\n        return phrase.text;\n    }\n\n    return neutralPhrase.text;\n  };\n\n  _getCorrectStuffs(id) {\n    //НЕОБХОДИМОЕ ЧИСЛО ОТВЕТОВ\n    const necessity = 3;\n    const stuffs = this._getStuffs(id);\n\n    //ОГРАНИЧЕНИЕ ПО *БЫЛ ЗДЕСЬ*\n    const answersAll = stuffs.filter(stuff => {\n      if (stuff.isA) return false;\n      else {\n        const stage = this.stages.find(s => s.id === stuff.next_stage_id);\n        return !stage.isBeen;\n      }\n    });\n\n    const correctNeutAchiev = [];\n    const correctFinal = [];\n    const incrrectNeutral = [];\n\n    answersAll.forEach(stuff => {\n      const nextStage = this.stages.find(\n        stage => stage.id === stuff.next_stage_id\n      );\n      const topic = this._getTopic(nextStage.topic_id);\n      const grad = this._getGrad(topic.graduation);\n      const ranges = grad.rangesNames(rName => this._getRange(rName));\n      const params = ranges.rangesNames(r => this._getParam(r.paramName));\n\n      const isAchiev = params.find(p => p.isAchiev);\n      const correct = this.checkGrad(grad.name);\n      const { isFin } = topic;\n\n      if (correct) {\n        //подходящее по градации\n        //если не финал\n        if (!isFin) correctNeutAchiev.push(stuff);\n        //если финал\n        else correctFinal.push(stuff);\n      } else if (!isAchiev && !isFin) {\n        //неподходящие если не ачивный и не финальный\n        incrrectNeutral.push(stuff);\n      }\n    });\n\n    let resultStuffs = correctNeutAchiev.concat(incrrectNeutral);\n    //если пришло время для финалочек\n    if (false) resultStuffs = resultStuffs.concat(correctFinal);\n    return resultStuffs.slice(0, necessity);\n  }\n\n  checkAnswToGrad = stuff => {\n    const nextStage = this.stages.find(\n      stage => stage.id === stuff.next_stage_id\n    );\n    const topic = this._getTopic(nextStage.topic_id);\n    return this.checkGrad(topic.graduation);\n  };\n\n  //ДОБАВИТЬ БЕЗУСЛОВНЫЕ ОГРАНИЧЕНИЯ ДЛЯ ТЕМ ЗАВИСИМЫХ ОТ АЧИВОК\n  getInterfaceStage = id => {\n    //ДОБАВИТЬ ПОДКЛЮЧЕНИЕ ФИНАЛОЧЕК КОГДА НАДО\n\n    const stage = this.stages.find(s => s.id === id);\n    stage.isBeen = true;\n\n    const stuffs = this._getStuffs(id);\n\n    const replicStuff = stuffs.find(stuff => stuff.isA);\n    const replic = new Interf(null, this.getCorrectPhrase(replicStuff.id));\n\n    //ОГРАНИЧЕНИЯ ПО *БЫЛ ТУТ*\n    const answersAll = stuffs.filter(stuff => {\n      return !stuff.isA;\n    });\n\n    //РЕЗУЛЬТАТ\n    const resAnswers = answersAll;\n\n    const interf = {\n      answers: resAnswers.map(stuff => {\n        return new Interf(\n          this.getGeneralPhrase(stuff.id),\n          this.getCorrectPhrase(stuff.id),\n          stuff.id\n        );\n      }),\n      replic\n    };\n\n    return interf;\n  };\n\n  ssign = data => {\n    for (let key in data) {\n      if (![\"params\", \"grads\", \"ranges\"].find(k => k === key)) {\n        this[key] = data[key];\n      }\n    }\n  };\n}\n","export const PARAM_DETERMINATION = \"РЕШИМОСТЬ\";\nexport const PARAM_EQUILIBRIUM = \"УРАВНОВЕШЕННОСТЬ\";\n\nexport const PARAM_DOG = \"УЗНАЛ СОБ МЕРТВА\";\n","export const RANGE_PANIC = \"ПАНИКА\";\nexport const RANGE_TENSION = \"НАПРЯЖЕННОСТЬ\";\nexport const RANGE_STABILITY = \"СТАБИЛЬНОСТЬ\";\n\nexport const RANGE_APATHY = \"АПАТИЯ\";\nexport const RANGE_UNCERTAINTY = \"НЕУВЕРЕННОСТЬ\";\nexport const RANGE_CONFIDENCE = \"УВЕРЕННОСТЬ\";\n\nexport const RANGE_DOG = \"ЗНАЕТ ПРО СОБАКУ\";\n","export const GRAD_PAN_APA = \"ПАН АПАТ\";\nexport const GRAD_PAN_UNC = \"ПАН НЕУВ\";\nexport const GRAD_PAN_CON = \"ПАН УВ\";\n\nexport const GRAD_TEN_APA = \"НАПР АПАТ\";\nexport const GRAD_TEN_UNC = \"НАПР НЕУВ\";\nexport const GRAD_TEN_CON = \"НАПР УВ\";\n\nexport const GRAD_STAB_APA = \"СТАБ АПАТ\";\nexport const GRAD_STAB_UNC = \"СТАБ НЕУВ\";\nexport const GRAD_STAB_CON = \"СТАБ УВ\";\n\nexport const GRAD_DOG = \"ЗНАЕТ ПРО СОБАКУ\";\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default class AnswerI extends React.Component {\n  render() {\n    const { text, click, disabled, isHiding } = this.props;\n    const disClass = disabled ? (isHiding ? \"disabled\" : \"\") : \"undisabled\";\n    return (\n        <div>\n      <div\n        className={`answer ${disClass}`}\n        onClick={() => {\n          if (!disabled) click();\n        }}\n      >\n        {text.toUpperCase()}\n      </div>\n        </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class Params extends React.Component {\n  /* constructor() {\n    super();\n\n  }*/\n\n  correctGrads() {\n    const { grads, checkGrad } = this.props;\n    const corrGrads = grads.filter(g => checkGrad(g.name));\n\n    return corrGrads;\n  }\n  render() {\n    const { params, lim, edit } = this.props;\n\n    const correctGrads = this.correctGrads();\n    const correctGradsItems = correctGrads.map(g => (\n      <div key={g.name}>\n        \n        <span style={{ color: \"white\" }}>{g.name}</span>\n      </div>\n    ));\n\n    const paramItems = params.map(param => {\n      return param.isAchiev ? (\n        <div key={param.name}>\n          <input type=\"checkbox\" disabled checked={param.value} />{\" \"}\n          <span style={{ color: \"white\" }}>{param.name}</span>\n        </div>\n      ) : (\n        <div key={param.name}>\n          <div>\n            <button\n              onClick={() => {\n                edit(param.name, -1);\n              }}\n            >\n              -\n            </button>\n            <div\n              style={{\n                display: \"inline-block\",\n                height: \"15px\",\n                width: `${param.value * 10}px`,\n                backgroundColor: \"red\"\n              }}\n            ></div>\n            <div\n              style={{\n                display: \"inline-block\",\n                height: \"15px\",\n                width: `${(lim - param.value) * 10}px`,\n                backgroundColor: \"gray\"\n              }}\n            ></div>\n\n            <button\n              onClick={() => {\n                edit(param.name, 1);\n              }}\n            >\n              +\n            </button>\n            <span style={{ color: \"white\" }}>{param.name}</span>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div>\n        {paramItems}\n        {correctGradsItems}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default class PhraseText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isStart: true, curText: \"\", balText: \"\" };\n  }\n  nextLetterLoop() {\n    const { text, pAnsswerd, writingFinish, isPlayer } = this.props;\n\n    const { curText } = this.state;\n    if (text !== curText) {\n      const curLen = curText.length;\n      const newText = text.slice(0, curLen + 1);\n\n      const balText = text.slice(curLen + 1);\n\n      setTimeout(() => {\n        this.setState({ curText: newText, isStart: false, balText });\n        this.nextLetterLoop();\n      }, 20);\n    } else isPlayer ? pAnsswerd() : writingFinish();\n  }\n  render() {\n    const { isPlayer } = this.props;\n    const { isStart, curText, balText } = this.state;\n    if (isStart) this.nextLetterLoop();\n    const title = isPlayer ? \"Я\" : \"Она\";\n    const titleClass = isPlayer ? \"text-p\" : \"text-c\";\n    return (\n      <div className=\"phrase-text\">\n        <span className={titleClass}>{title}/</span> {curText}\n        <span className=\"bal-text\">{balText}</span>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport PhraseText from \"./PhraseText\";\n\nexport default class DialogBox extends React.Component {\n  constructor() {\n    super();\n    this.state = { isPAnsserd: false };\n  }\n\n  pAnsswerd = () => {\n    const { dDelay } = this.props;\n    setTimeout(() => {\n      this.setState({ isPAnsserd: true });\n    }, dDelay);\n  };\n  render() {\n    const { pPhrase, cPhrase, writingFinish, hiding } = this.props;\n    const { isPAnsserd } = this.state;\n\n    const hidingClass = hiding ? \"phrase-hiding\" : \"\";\n\n    const cAnswer = isPAnsserd ? (\n      <PhraseText text={cPhrase} writingFinish={writingFinish} />\n    ) : null;\n\n    return (\n      <div className=\"dialog-box\">\n        <div className={`phrase-interface ${hidingClass}`}>\n          <div className=\"phrase-content\">\n            <PhraseText text={pPhrase} isPlayer pAnsswerd={this.pAnsswerd} />\n            {cAnswer}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class Visual extends React.Component {\n\n  async componentDidMount() {\n    const c = this.refs.myCanvas;\n    const ctx = c.getContext(\"2d\");\n\n    let img = new Image();\n    img.src = `${window.location.href}/img/background.png`;\n\n    img.onload = event => {\n      const { target } = event;\n      ctx.drawImage(target, 0, 0, c.width, c.height);\n    };\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return (\n      <div>\n        <canvas\n          id=\"myCanvas\"\n          ref=\"myCanvas\"\n          width={width}\n          height={height}\n        ></canvas>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class Screen extends React.Component {\n  constructor() {\n    super();\n\n  }\n\n  render() {\n    const { width, height } = this.props;\n    const style = {\n      width,\n      height,\n      display: \"inline-block\",\n      backgroundColor: \"gray\",\n      marginLeft: `calc(50% - ${width / 2}px)`,\n        position: 'absolute',\n        overflow: 'hidden'\n    };\n    return <div style={style}>{this.props.children}</div>;\n  }\n}\n","import React from \"react\";\nimport locE from \"../../game/loc_example\";\nimport mlpaState from \"../../mlpa_state\";\n\nimport Params from \"./Params\";\nimport AnswerI from \"./AnswerI/AnswerI\";\nimport DialogBox from \"./DialogBox/DialogBox\";\nimport \"./style.css\";\nimport Visual from \"./Visual/Visual\";\nimport Screen from \"./Screen\";\n\nexport default class UI extends React.Component {\n  constructor() {\n    super();\n    this.loc = locE;\n    this.loc.ssign(mlpaState);\n    this.defaultParams();\n\n    const currStageId = this.loc.getStartId();\n    const { cPhrase, answers } = this.getStageData(currStageId);\n    this.state = {\n      cPhrase,\n      pPhrase: \"О чем ты сейчас думаешь?\",\n      answers,\n      disabled: true,\n      currStageId,\n      isHiding: false,\n      dDelay: 2000\n    };\n  }\n  getStageData(stageId) {\n    const interf = this.loc.getInterfaceStage(stageId);\n    const { answers, replic } = interf;\n    const { phrase } = replic;\n\n    return {\n      cPhrase: phrase,\n      answers\n    };\n  }\n  update(stuffId) {\n    const newStageId = this.loc.calcStuff(stuffId);\n    const pPhrase = this.loc.getCorrectPhrase(stuffId);\n    const { cPhrase, answers } = this.getStageData(newStageId);\n\n    this.setState({\n      isHiding: true,\n      disabled: true\n    });\n\n    setTimeout(() => {\n      this.setState({\n        pPhrase,\n        cPhrase,\n        currStageId: newStageId,\n        answers,\n        isHiding: false,\n        dDelay: 500 //ДОБАВИТЬ ЗАВИСИМОСТЬ ОТ ПОТРЯСЕНИЯ\n      });\n    }, 500);\n  }\n  defaultParams() {\n    this.loc.params.forEach(p => {\n      if (!p.isAchiev) p.value = 7;\n    });\n  }\n  writingFinish() {\n    this.setState({ disabled: false });\n  }\n  render() {\n    const {\n      pPhrase,\n      cPhrase,\n      currStageId,\n      answers,\n      disabled,\n      isHiding,\n      dDelay\n    } = this.state;\n    const answersItems = answers.map(answer => {\n      return (\n        <AnswerI\n          key={answer.id}\n          text={answer.generalPhrase}\n          disabled={disabled}\n          isHiding={isHiding}\n          click={() => {\n            this.update(answer.id);\n          }}\n        />\n      );\n    });\n\n    const { width, height } = this.props;\n\n    return (\n      <div>\n        <Visual width={width} height={height} />\n\n        <div className=\"answers\">{answersItems}</div>\n        <DialogBox\n          hiding={isHiding}\n          key={currStageId}\n          pPhrase={pPhrase}\n          cPhrase={cPhrase}\n          dDelay={dDelay}\n          writingFinish={() => {\n            this.writingFinish();\n          }}\n        />\n      </div>\n    );\n  }\n}\n\n/*\n <Params\n          params={this.loc.params}\n          lim={this.loc.lim}\n          edit={(paramName, term) => {\n            this.loc._editParams([this.loc.cChange(paramName, term)]);\n            this.forceUpdate();\n          }}\n          grads={this.loc.grads}\n          checkGrad={this.loc.checkGrad}\n        />\n*/\n","import React from \"react\";\nimport UI from \"./UI\";\nimport Screen from \"./Screen\";\n\nexport default class Game extends React.Component {\n  render() {\n    const { width, height } = window.screen;\n\n    return (\n      <Screen width={width} height={height}>\n        <UI width={width} height={height} />\n      </Screen>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class TopicItem extends React.Component {\n  render() {\n    const { topic, isSelect, click } = this.props;\n\n    const border = topic.isStart\n      ? \"solid 0.3rem red\"\n      : topic.isFin\n      ? \"solid 0.3rem aqua\"\n      : \"none\";\n\n    const style = {\n      backgroundColor: isSelect ? \"green\" : \"gray\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      cursor: \"pointer\",\n      color: \"white\",\n      border\n    };\n    return (\n      <div\n        style={style}\n        onClick={() => {\n          click(topic.id);\n        }}\n      >\n        {topic.name}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class StageItem extends React.Component {\n  render() {\n    const { stage, click, isSelect, stuffText, methods } = this.props;\n\n    const isFinal = methods.checkStageFinal(stage.id);\n    const border = stage.isStart\n      ? \"solid 0.3rem red\"\n      : isFinal\n      ? \"solid 0.3rem aqua\"\n      : \"none\";\n\n    const style = {\n      backgroundColor: isSelect ? \"blue\" : \"gray\",\n      cursor: \"pointer\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      color: \"white\",\n      border\n    };\n    return (\n      <div\n        onClick={() => {\n          click(stage.id);\n        }}\n        style={style}\n      >\n        {stuffText(stage.id)}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class StuffItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const nextStage = props.allStages.find(\n      s => s.id === props.stuff.next_stage_id\n    );\n    const currentTopic = nextStage?.topic_id;\n\n    this.state = {\n      currentTopic,\n      viewAchievs: false\n    };\n  }\n  render() {\n    const {\n      stuff,\n      methods,\n      range,\n      stat,\n      goStage,\n      allStages,\n      stuffText,\n      allTopics\n    } = this.props;\n\n    const phrase = methods.getPhrases(stuff.id).find(p => {\n      return (\n        p.rangeName === range ||\n        (range === \"none\" && !p.rangeName) ||\n        (range === \"GENERAL\" && p.isGeneral)\n      );\n    });\n\n    const { changes } = stuff;\n    const { currentTopic, viewAchievs } = this.state;\n\n    const changesItems = !stuff.isA\n      ? stat.params.map(p => {\n          const c = changes.find(change => change.paramName === p.name);\n\n          const term = c ? c.term : p.isAchiev ? false : 0;\n\n          const inputElem = p.isAchiev ? (\n            <input\n              type=\"checkbox\"\n              checked={term}\n              onChange={e => {\n                methods.updateStuff(stuff.id, stuff.next_stage_id, {\n                  paramName: p.name,\n                  term: Boolean(e.target.checked)\n                });\n              }}\n            />\n          ) : (\n            <input\n              type=\"number\"\n              style={{ width: \"40px\" }}\n              value={term}\n              onChange={e => {\n                methods.updateStuff(stuff.id, stuff.next_stage_id, {\n                  paramName: p.name,\n                  term: Number(e.target.value)\n                });\n              }}\n            />\n          );\n\n          if (!viewAchievs && p.isAchiev) return null;\n          return (\n            <span\n              style={{\n                display: \"inline-block\",\n                padding: \"0.5rem\",\n                backgroundColor: \"#ffccff\",\n                marginRight: \"0.5rem\"\n              }}\n              key={p.name}\n            >\n              {p.name}:{inputElem}\n            </span>\n          );\n        })\n      : null;\n\n    const style = {\n      backgroundColor: stuff.isA ? \"#ccffff\" : \"#D3D3D3\",\n      cursor: \"pointer\",\n      margin: \"0.2rem\",\n\n      paddingTop: stuff.isA ? \"1rem\" : \"0.5rem\",\n      paddingBottom: stuff.isA ? \"1rem\" : \"0.5rem\",\n\n      display: \"inline-block\",\n      width: \"40%\"\n    };\n\n    const text = phrase ? phrase.text : \"\";\n\n    const linkItems = methods.getStages(this.state.currentTopic).map(s => {\n      return (\n        <option value={s.id} key={s.id}>\n          {stuffText(s.id)}\n        </option>\n      );\n    });\n\n    if (!allStages.find(s => s.id === stuff.next_stage_id)) {\n      linkItems.unshift(\n        <option value={\"error\"} key=\"0\">\n          {stuff.next_stage_id} NOT FOUND\n        </option>\n      );\n    }\n\n    const linkThemesItems = allTopics.map(t => {\n      return (\n        <option value={t.id} key={t.id}>\n          {t.name}\n        </option>\n      );\n    });\n\n    const next = !stuff.isA ? (\n      <div style={{ display: \"inline-block\", marginRight: \"0.5rem\" }}>\n        <div\n          style={{\n            display: \"inline-block\",\n            backgroundColor: \"red\",\n            cursor: \"pointer\",\n            color: \"white\"\n          }}\n          onClick={() => {\n            goStage(stuff.next_stage_id);\n          }}\n        >\n          ===>\n        </div>\n        {currentTopic}\n\n        <select\n          value={this.state.currentTopic}\n          onChange={e => {\n            const newCurrTopic = Number(e.target.value);\n            this.setState({ currentTopic: newCurrTopic });\n            const topicStages = methods.getStages(newCurrTopic);\n\n            if (\n              topicStages.length &&\n              !topicStages.find(s => s.id === stuff.next_stage_id)\n            )\n              methods.updateStuff(stuff.id, topicStages[0].id);\n          }}\n        >\n          {linkThemesItems}\n        </select>\n\n        <select\n          value={stuff.next_stage_id}\n          onChange={e => {\n            methods.updateStuff(stuff.id, Number(e.target.value));\n          }}\n        >\n          {linkItems}\n        </select>\n      </div>\n    ) : null;\n\n    const removeButton = !stuff.isA ? (\n      <button onClick={() => methods.removeStuff(stuff.id)}>X</button>\n    ) : null;\n\n    const viewBox = stuff.isA ? null : (\n      <input\n        type=\"checkbox\"\n        checked={viewAchievs}\n        onChange={e => {\n          this.setState({ viewAchievs: e.target.checked });\n        }}\n      />\n    );\n\n    return (\n      <div>\n        {removeButton}\n        <div style={style}>\n          ({stuff.id}){\" \"}\n          <input\n            value={text}\n            style={{ width: \"90%\" }}\n            onChange={e => {\n              methods.updatePhrase(\n                stuff.id,\n                range === \"none\" ? null : range,\n                phrase ? phrase.id : null,\n                e.target.value\n              );\n            }}\n          />\n        </div>\n        {next}\n        {changesItems}\n        {viewBox}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class RangeItem extends React.Component {\n  render() {\n    const { range, isSelect, click } = this.props;\n\n    const style = {\n      backgroundColor: isSelect ? \"orange\" : \"gray\",\n      cursor: \"pointer\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      color: \"white\"\n    };\n    return (\n      <div\n        style={style}\n        onClick={() => {\n          click(range.name);\n        }}\n      >\n        {range.name}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class AddStuff extends React.Component {\n  render() {\n    const { methods, stageId, topic } = this.props;\n\n    const nextStageId = methods.getStages(topic.id)[0].id;\n\n    return (\n      <div>\n        <button\n          onClick={() => {\n            methods.addStuff(stageId, false, nextStageId, []);\n          }}\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport StuffItem from \"../Stuffs/StuffItem\";\nimport RangeItem from \"../Ranges/RangeItem\";\nimport AddStuff from \"../Stuffs/AddStuff\";\n\nexport default class Stage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { currentRange: \"none\", acheivs: false };\n  }\n\n  click = name => {\n    this.setState({ currentRange: name });\n  };\n  splitStuffs(stuffs) {\n    const answer = stuffs.find(stuff => stuff.isA);\n    const pAnswers = stuffs.filter(stuff => !stuff.isA);\n    return { answer, pAnswers };\n  }\n  render() {\n    const {\n      stage,\n      methods,\n      stat,\n      changeStage,\n      allStages,\n      stuffText,\n      topic,\n      allTopics\n    } = this.props;\n\n    const stuffs = methods.getStuffs(stage.id);\n\n    const { answer, pAnswers } = this.splitStuffs(stuffs);\n\n    const stuffsItems = [answer, ...pAnswers].map(stuff => {\n      const res = stuff ? (\n        <StuffItem\n          stat={stat}\n          range={this.state.currentRange}\n          methods={methods}\n          key={stuff.id}\n          stuff={stuff}\n          goStage={changeStage}\n          allStages={allStages}\n          allTopics={allTopics}\n          stuffText={stuffText}\n        />\n      ) : null;\n\n      return res;\n    });\n\n    if (\"GENERAL\" === this.state.currentRange) {\n      stuffsItems.shift();\n    }\n\n    const { ranges } = stat;\n\n    const generStuff = (\n      <RangeItem\n        isSelect={\"GENERAL\" === this.state.currentRange}\n        range={{ name: \"GENERAL\" }}\n        click={this.click}\n      />\n    );\n\n    const noRanges = (\n      <RangeItem\n        isSelect={\"none\" === this.state.currentRange}\n        range={{ name: \"none\" }}\n        click={this.click}\n      />\n    );\n\n    const rangesItems = ranges\n      .filter(r => {\n        const param = methods.getParam(r.paramName);\n        return this.state.acheivs || !param.isAchiev;\n      })\n      .map(range => (\n        <RangeItem\n          isSelect={range.name === this.state.currentRange}\n          key={range.name}\n          range={range}\n          click={this.click}\n        />\n      ));\n\n    return (\n      <div>\n        <h2 align=\"center\">\n          {stuffText(stage.id)}{\" \"}\n          <button\n            onClick={() => {\n              methods.removeStage(stage.id);\n            }}\n          >\n            X\n          </button>{\" \"}\n          <input\n            type=\"checkbox\"\n            checked={stage.isStart}\n            onChange={e => {\n              methods.updateStage(stage.id, e.target.checked);\n            }}\n          />\n        </h2>\n        {generStuff}\n        {noRanges}\n        {rangesItems}\n        <input\n          type=\"checkbox\"\n          checked={this.state.acheivs}\n          onChange={e => {\n            this.setState({ acheivs: e.target.checked });\n          }}\n        />\n        {stuffsItems}\n        <AddStuff topic={topic} methods={methods} stageId={stage.id} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport StageItem from \"../Stages/StageItem\";\nimport Stage from \"../Stages/Stage\";\n\nexport default class Topic extends React.Component {\n  constructor() {\n    super();\n    this.state = { newStageStart: false };\n  }\n  stuffText = id => {\n    if (id) {\n      const { methods } = this.props;\n\n      const nextStuff = methods.getStuffs(id).find(stuff => stuff.isA);\n\n      if (nextStuff) {\n        const nextPhrases = methods.getPhrases(nextStuff.id);\n        const nextPhrase = nextPhrases.find(p => !p.rangeName);\n\n        if (nextPhrase) {\n          return `(${id}) ${nextPhrase.text.slice(0, 7)}...`;\n        } else return `(${id}) NOT PHRASE...`;\n      } else return \"NOT FOUND\";\n    }\n    return null;\n  };\n  render() {\n    const {\n      topic,\n      stat,\n      methods,\n      currentStage,\n      click,\n      changeStage,\n      allStages,\n      allTopics\n    } = this.props;\n\n    const { grads } = stat;\n    const { graduation } = topic;\n\n    const stages = methods.getStages(topic.id);\n    const stagesItems = stages.map(stage => {\n      const isSelect = stage.id === currentStage;\n\n      return (\n        <StageItem\n          methods={methods}\n          stuffText={this.stuffText}\n          key={stage.id}\n          stage={stage}\n          isSelect={isSelect}\n          click={click}\n        />\n      );\n    });\n\n    const optItems = grads.map(grad => {\n      return (\n        <option value={grad.name} key={grad.name}>\n          {grad.name}\n        </option>\n      );\n    });\n\n    const curStage = stages.find(stage => stage.id === currentStage);\n\n    const stageView = currentStage ? (\n      <Stage\n        stage={curStage}\n        methods={methods}\n        stat={stat}\n        allStages={allStages}\n        allTopics={allTopics}\n        changeStage={changeStage}\n        stuffText={this.stuffText}\n        topic={topic}\n      />\n    ) : null;\n\n    return (\n      <div>\n        <h1 align=\"center\">\n          Topic{\" \"}\n          <input\n            value={topic.name}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                e.target.value,\n                topic.graduation,\n                topic.isFin,\n                topic.isStart\n              );\n            }}\n          />\n          , grad:\n          <select\n            value={graduation}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                e.target.value,\n                topic.isFin,\n                topic.isStart\n              );\n            }}\n          >\n            {optItems}\n          </select>\n          Start:\n          <input\n            type=\"checkbox\"\n            checked={topic.isStart}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                topic.graduation,\n                topic.isFin,\n                e.target.checked\n              );\n            }}\n          />\n          Final:\n          <input\n            type=\"checkbox\"\n            checked={topic.isFin}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                topic.graduation,\n                e.target.checked,\n                topic.isStart\n              );\n            }}\n          />\n          <button\n            onClick={() => {\n              methods.removeTopic(topic.id);\n            }}\n            style={{ marginLeft: \"1rem\" }}\n          >\n            X\n          </button>\n        </h1>\n\n        <br />\n        <div>\n          <input\n            type=\"checkbox\"\n            checked={this.state.newStageStart}\n            onChange={e => {\n              this.setState({ newStageStart: e.target.checked });\n            }}\n          />\n          <button\n            onClick={() => {\n              methods.addStage(topic.id, this.state.newStageStart);\n            }}\n          >\n            +\n          </button>\n        </div>\n        {stagesItems}\n        <br />\n        {stageView}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class AddTopic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graduation: props.stat.grads[0].name,\n      name: \"\",\n      isFin: false,\n      isStart: false\n    };\n  }\n\n  render() {\n    const { graduation, name, isFin, isStart } = this.state;\n    const { stat, methods } = this.props;\n    const { grads } = stat;\n    const optItems = grads.map(grad => (\n      <option value={grad.name} key={grad.name}>\n        {grad.name}\n      </option>\n    ));\n\n    return (\n      <div>\n        <input\n          value={name}\n          onChange={e => {\n            this.setState({ name: e.target.value });\n          }}\n        />\n        <select\n          value={graduation}\n          onChange={e => {\n            this.setState({ graduation: e.target.value });\n          }}\n        >\n          {optItems}\n        </select>\n        Start:\n        <input\n          type=\"checkbox\"\n          checked={isStart}\n          onChange={e => {\n            this.setState({ isStart: e.target.checked });\n          }}\n        />\n        Final:\n        <input\n          type=\"checkbox\"\n          checked={isFin}\n          onChange={e => {\n            this.setState({ isFin: e.target.checked });\n          }}\n        />\n        <button\n          onClick={() => {\n            methods.addTopic(name, graduation, isFin, isStart);\n          }}\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport locE from \"../../game/loc_example\";\n//import locE from \"./../../game/loc_example\";\nimport TopicItem from \"./Topics/TopicItem\";\nimport Topic from \"./Topics/Topic\";\nimport AddTopic from \"./Topics/AddTopic\";\nimport exportFromJSON from \"export-from-json\";\nimport mlpaState from \"../../mlpa_state\";\n\nexport default class Editor extends React.Component {\n  constructor() {\n    super();\n    this.myStorage = window.localStorage;\n    this.loc = {};\n    this.import(true);\n    const { topicId, stageId } = this.getTopStag();\n    this.state = { currentTopic: topicId, currentStage: stageId };\n  }\n\n  import(firstTime) {\n    this.loc = locE;\n\n    this.loc.ssign({ ...mlpaState });\n    if (!firstTime) this.forceUpdate();\n  }\n\n  getTopStag() {\n    const topicId = this.loc.topics[0] ? this.loc.topics[0].id : null;\n    const stageId = this.loc._getStages(topicId)[0]\n      ? this.loc._getStages(topicId)[0].id\n      : null;\n    return { topicId, stageId };\n  }\n\n  exportFile() {\n    const data = this.loc;\n    const fileName = \"mlpa_state\";\n    const exportType = \"json\";\n\n    exportFromJSON({ data, fileName, exportType });\n  }\n\n  saveLoc() {\n    const locData = JSON.stringify(this.loc);\n    this.myStorage.setItem(\"locData\", locData);\n  }\n\n  addTopic = (name, gradName, isFin, isStart) => {\n    this.loc.cTopic(name, gradName, isFin, isStart);\n    this.forceUpdate();\n  };\n\n  addStage = (topicId, isStart) => {\n    this.loc.addStages(\n      topicId,\n      this.loc.cStage(\n        isStart,\n        this.loc.cStuff({ isA: true }, this.loc.cPhrase(\"space\"))\n      )\n    );\n    this.forceUpdate();\n  };\n  updateStage = (id, isStart) => {\n    const stage = this.loc.stages.find(s => s.id === id);\n    stage.isStart = isStart;\n    this.forceUpdate();\n  };\n  updateTopic = (topicId, name, gradName, isFin, isStart) => {\n    const topic = this.loc._getTopic(topicId);\n    topic.name = name;\n    topic.graduation = gradName;\n    topic.isFin = isFin;\n    topic.isStart = isStart;\n    this.forceUpdate();\n  };\n  addPhrase = (stuffId, range, text, isGeneral) => {\n    this.loc.addPhrases(stuffId, [this.loc.cPhrase(text, isGeneral, range)]);\n    this.forceUpdate();\n  };\n\n  updatePhrase = (stuffId, range, id, newText) => {\n    const phrase = this.loc.phrases.find(p => p.id === id);\n    if (phrase) {\n      phrase.text = newText;\n      if (!newText && !phrase.isGeneral && phrase.rangeName)\n        this.removePhrase(phrase.id);\n    } else {\n      this.addPhrase(stuffId, range, newText);\n    }\n    this.forceUpdate();\n  };\n\n  addStuff = (stageId, isA, nextStageId, changes = []) => {\n    const newStaff = this.loc.cStuff(\n      {\n        isA,\n        id: nextStageId\n      },\n      this.loc.cPhrase(\"space\"),\n      this.loc.cPhrase(\"generalSpace\", true)\n    );\n\n    this.loc.addStuffs(stageId, newStaff);\n\n    this.forceUpdate();\n  };\n  updateStuff = (id, nextStageId, ...changes) => {\n    const stuff = this.loc.stuffs.find(s => s.id === id);\n    stuff.next_stage_id = nextStageId;\n    changes.forEach(change => {\n      const changeIndex = stuff.changes.findIndex(\n        c => c.paramName === change.paramName\n      );\n      const thisStuffCh = stuff.changes[changeIndex];\n\n      const changeTerm = change.term;\n\n      if (!thisStuffCh) {\n        stuff.changes.push(this.loc.cChange(change.paramName, changeTerm));\n      } else {\n        if (changeTerm) thisStuffCh.term = changeTerm;\n        else stuff.changes.splice(changeIndex, 1);\n        console.log(thisStuffCh);\n      }\n    });\n    this.forceUpdate();\n  };\n\n  removeTopic = id => {\n    const index = this.loc.topics.findIndex(t => t.id === id);\n    this.loc.topics.splice(index, 1);\n    const stages = this.loc._getStages(id);\n    stages.forEach(s => {\n      this.removeStage(s.id);\n    });\n\n    this.setState({ currentTopic: null, currentStage: null });\n    this.forceUpdate();\n  };\n  removeStage = id => {\n    const index = this.loc.stages.findIndex(s => s.id === id);\n    this.loc.stages.splice(index, 1);\n    const stuffs = this.loc._getStuffs(id);\n    stuffs.forEach(s => {\n      if (s.next_stage_id === id) {\n        s.next_stage_id = null;\n      }\n      this.removeStuff(s.id);\n    });\n    this.setState({ currentStage: null });\n    this.forceUpdate();\n  };\n  removeStuff = id => {\n    const index = this.loc.stuffs.findIndex(s => s.id === id);\n    this.loc.stuffs.splice(index, 1);\n    const phrases = this.loc._getPhrases(id);\n    phrases.forEach(p => {\n      this.removePhrase(p.id);\n    });\n    this.forceUpdate();\n  };\n  removePhrase = id => {\n    const index = this.loc.phrases.findIndex(p => p.id === id);\n    this.loc.phrases.splice(index, 1);\n    this.forceUpdate();\n  };\n\n  click = id => {\n    const firstStage = this.loc._getStages(id)[0];\n    if (firstStage) this.changeStage(firstStage.id);\n    else this.setState({ currentTopic: id, currentStage: null });\n    this.forceUpdate();\n  };\n  changeStage = id => {\n    const stage = this.loc.stages.find(s => s.id === id);\n    if (stage) {\n      this.setState({ currentTopic: stage.topic_id, currentStage: id });\n    }\n\n    this.forceUpdate();\n  };\n\n  render() {\n    const { topics, grads, params, ranges } = this.loc;\n    const stat = {\n      grads,\n      params,\n      ranges\n    };\n\n    const { currentStage, currentTopic } = this.state;\n\n    const methods = {\n      addTopic: this.addTopic,\n      addStage: this.addStage,\n      updateStage: this.updateStage,\n      updateTopic: this.updateTopic,\n      removeTopic: this.removeTopic,\n      removeStage: this.removeStage,\n      updateStuff: this.updateStuff,\n      removeStuff: this.removeStuff,\n      getStages: this.loc._getStages,\n      getStuffs: this.loc._getStuffs,\n      getPhrases: this.loc._getPhrases,\n      addStuff: this.addStuff,\n      updatePhrase: this.updatePhrase,\n      addPhrase: this.addPhrase,\n      removePhrase: this.removePhrase,\n      getParam: this.loc._getParam,\n      checkStageFinal: this.loc.checkStageFinal\n    };\n\n    const topicItems = topics.map(topic => {\n      const isSelect = topic.id === currentTopic;\n      return (\n        <TopicItem\n          key={topic.id}\n          topic={topic}\n          methods={methods}\n          isSelect={isSelect}\n          click={this.click}\n        />\n      );\n    });\n\n    const topicView = currentTopic ? (\n      <Topic\n        allTopics={this.loc.topics}\n        allStages={this.loc.stages}\n        currentStage={currentStage}\n        topic={topics.find(topic => topic.id === this.state.currentTopic)}\n        stat={stat}\n        methods={methods}\n        goTopic={this.click}\n        click={this.changeStage}\n        changeStage={this.changeStage}\n      />\n    ) : null;\n\n    console.log(this.loc);\n    return (\n      <div>\n        <button onClick={() => this.import()}>import</button>\n        <button onClick={() => this.exportFile()}>export</button>\n        <br />\n        <AddTopic methods={methods} stat={stat} />\n        {topicItems}\n        {topicView}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Game from \"./components/Game/Game\";\nimport Editor from \"./components/Editor/Editor\";\n\nfunction App() {\n  return (\n    <div>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}