{"version":3,"sources":["components/Game/AnswerI/AnswerI.js","components/Game/Params.js","components/Game/DialogBox/PhraseText.js","components/Game/DialogBox/DialogBox.js","components/Game/Visual/img-object.js","components/Game/Visual/scene-object.js","components/Game/Visual/shaking.js","components/Game/Visual/Visual.js","game/parameters.js","components/Game/Loading/Loading.js","components/Game/Audio/audio-element.js","components/Game/Audio/AudioPlayer.js","game/ranges.js","components/Game/Settings/FullScreen.js","components/Game/Settings/AudioSwitcher.js","components/Game/Settings/Settiings.js","components/Game/Ending/ImageItem.js","components/Game/Ending/Ending.js","components/Game/Alert/Alert.js","components/Game/UI.js","components/Game/Screen.js","mlpa_engine/graduation.js","mlpa_engine/parameter.js","mlpa_engine/phrase.js","mlpa_engine/range.js","mlpa_engine/stage.js","mlpa_engine/stuff.js","mlpa_engine/topic.js","mlpa_engine/change.js","mlpa_engine/interf.js","game/loc_example.js","mlpa_engine/loc.js","game/grads.js","components/Game/Game.js","components/Editor/Topics/TopicItem.js","components/Editor/Stages/StageItem.js","components/Editor/Stuffs/StuffItem.js","components/Editor/Ranges/RangeItem.js","components/Editor/Stuffs/AddStuff.js","components/Editor/Stages/Stage.js","components/Editor/Topics/Topic.js","components/Editor/Topics/AddTopic.js","components/Editor/Editor.js","App.js","serviceWorker.js","index.js"],"names":["AnswerI","React","Component","this","props","text","click","disabled","isHiding","isAchiev","disClass","achievClass","className","onClick","toUpperCase","PhraseText","state","isStart","curText","balText","string","Boolean","find","p","pAnsswerd","writingFinish","isPlayer","curLen","length","newText","slice","timeout","checkPoint","substr","Math","random","setTimeout","setState","nextLetterLoop","isEnding","title","titleClass","DialogBox","dDelay","isPAnsserd","pPhrase","cPhrase","hiding","isLoaded","hidingClass","pAnswer","cAnswer","ImgObject","image","slot","min","max","param","SceneObject","x","y","imgName","width","Shaking","speed","ampl","value","stage","calcSpeed","maxSpeed","calcAmpl","maxAmpl","update","PI","newMaxSpeed","newMaxAmpl","sin","Visual","drawImg","obj","ctx","progress","img","images","name","currProgress","locFactor","height","getPosition","camZoom","camX","camY","screenWidth","landWidth","screenHeight","landHeight","drawImage","shaking","drawSceneLopp","params","isStarted","newCanvas","document","createElement","newCtx","getContext","key","scene","getCorrImgName","window","requestAnimationFrame","c","objects","positions","prog","back","legs","body","head","landSizes","index","pos","first","last","factor","refs","myCanvas","loaderLoop","forEach","object","loadImage","sceneObject","Image","url","src","location","href","onload","event","target","push","loadFinished","slotName","corrImages","filter","corrImg","ref","style","Loading","AudioElement","rangeName","audio","fileName","updateLoop","isPlayed","volume","vMax","vStep","pause","isOn","play","AudioPlayer","musics","getAudio","fileN","Audio","loop","preload","ranges","checkRange","r","corrRanges","correctRanges","range","result","m","audioPlayed","getAudioName","FullScreen","render","icoClass","isFullScren","fullScreenOn","fullscreenElement","screenDom","getElementById","getFullScreen","exitFullscreen","requestFullscreen","AudioSwitcher","audioSwitch","Settings","methods","data","ImageItem","isCurrent","goNext","disClassName","alt","Ending","endData","quantity","currentImg","imagesLoaded","loader","endDataSum","map","reduce","a","b","i","console","log","endingNext","topicName","imagesItems","e","alert","display","Alert","UI","answers","id","loc","currStageId","getStartId","currentStuff","_getStuffs","s","isIntro","_getPhrases","isGeneral","getStageData","alertText","stageId","interf","getInterfaceStage","phrase","replic","newStage","stages","isFin","_getTopic","topic_id","stuffId","stuffs","changes","change","_getParam","paramName","term","newStageId","calcStuff","getCorrectPhrase","delayParam","lim","answersItems","answer","checkStuffByAchiev","generalPhrase","currentStage","currentTopic","gameUI","loadingAnim","topicQ","topicLim","Screen","backgroundColor","marginLeft","position","overflow","children","Graduation","rangesNames","Parameter","Phrase","stuff_id","Range","Stage","isBeen","Stuff","next_stage_id","isA","stage_id","Topic","graduation","stuffIntro","gradNames","Change","Interf","locE","grads","topics","phrases","addStages","topicId","newStages","concat","error","_getStages","stuff","checkStageFinal","_getRange","checkGrads","gName","checkGrad","gradName","_getGrad","rName","idState","getId","type","startTopic","topic","startStage","_editParams","getGeneralPhrase","nextStage","grad","neutralPhrase","_getCorrectStuffs","answersAll","replicStuff","answersNotA","nextTopic","nextStuff","sort","finalTopic","finalStage","finalAnswer","resAnswers","ssign","k","st","addTopics","addStuffs","nextStageId","addPhrases","newStuff","newStuffs","newPhrases","phraseId","newValue","addParams","cParam","addRanges","cRange","addGrads","cGrad","Game","mlpaState","defaultParams","screen","newWidth","factorW","newHeight","factorH","getSizes","TopicItem","isSelect","margin","padding","cursor","color","border","StageItem","stuffText","isFinal","StuffItem","allStages","viewAchievs","stat","goStage","allTopics","getPhrases","isSpecial","changesItems","inputElem","checked","onChange","updateStuff","Number","marginRight","paddingTop","paddingBottom","linkItems","getStages","unshift","linkThemesItems","t","next","newCurrTopic","topicStages","removeButton","removeStuff","viewBox","updatePhrase","RangeItem","AddStuff","addStuff","currentRange","sortItems","stuffA","stuffB","isTopA","acheivs","pAnswers","changeStage","getStuffs","splitStuffs","stuffsItems","shift","generStuff","noRanges","rangesItems","getParam","align","removeStage","updateStage","nextPhrase","newStageStart","showGrads","stagesItems","curStage","stageView","updateTopic","g","updateTopicGrads","removeTopic","addStage","AddTopic","optItems","addTopic","App","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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7DsB,iFkB6DA,EAAG,GtB7DC,oGsB8D/BxD,EAAKwD,OlB7DwB,2EkB6DA,GAAI,GtB9DF,oGsBgE/BxD,EAAKwD,OlB7DqB,uCkB6DA,EAAG,EtBjEI,0DsBkEjCxD,EAAKwD,OlB7D0B,iFkB6DA,EAAG,GtBlED,0DsBmEjCxD,EAAKwD,OlB7DyB,qEkB6DA,GAAI,GtBnED,0DsBqEjCxD,EAAKwD,OlB7DkB,sGkB6DA,GAAM,EtBlEN,wCsBmEvBxD,EAAKwD,OlB5DoB,gGkB4DA,GAAM,EtBjEN,8CsBkEzBxD,EAAKwD,OlB9DiB,oFkB8DA,GAAM,EtBnEN,gEsBoEtBxD,EAAKwD,OlB7DqB,gGkB6DA,GAAM,EtBlEN,8EsBmE1BxD,EAAKwD,OlB5DqB,4GkB4DA,GAAM,EtBjEN,+FsBkE1BxD,EAAKwD,OlB9DoB,0FkB8DA,GAAM,EtBnEN,qDsBqE3BxD,EAAKyD,SACHzD,EAAK0D,ME7EqB,8CpBAD,uCAIC,wCkB0E1B1D,EAAK0D,ME7EqB,8CpBDD,uCAKM,kFkB0E/B1D,EAAK0D,ME7EqB,kCpBFD,uCAMK,sEkB2E9B1D,EAAK0D,ME7EqB,oDpBHC,iFAGD,wCkB8E1B1D,EAAK0D,ME7EqB,oDpBJC,iFAII,kFkB8E/B1D,EAAK0D,ME7EqB,wCpBLC,iFAKG,sEkB+E9B1D,EAAK0D,ME7EsB,oDpBNE,2EAEH,wCkBkF1B1D,EAAK0D,ME7EsB,oDpBPE,2EAGE,kFkBkF/B1D,EAAK0D,ME7EsB,wCpBRE,2EAIC,sEkBmF9B1D,EAAK0D,ME7EiB,qGpBJC,sGkBkFvB1D,EAAK0D,ME5EmB,+FpBJC,gGkBiFzB1D,EAAK0D,ME9EgB,mFpBJC,oFkBmFtB1D,EAAK0D,ME7EoB,+FpBJC,gGkBkF1B1D,EAAK0D,ME5EoB,2GpBJC,4GkBiF1B1D,EAAK0D,ME9EmB,yFpBJC,2FkBsFZ1D,Q,OG5FM2D,E,YACnB,aAAe,IAAD,8BACZ,+CAEKhQ,UAAY,KACjB,EAAKE,WAAa,KAElB,EAAKgI,IAAMmE,EACX,EAAKnE,IAAI4G,MAAMmB,GACf,EAAKC,gBARO,E,6EAWZ5V,KAAK4N,IAAI5H,OAAO6B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","file":"static/js/main.be5c0e19.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nexport default class AnswerI extends React.Component {\n  render() {\n    const { text, click, disabled, isHiding, isAchiev } = this.props;\n    const disClass = disabled ? (isHiding ? \"disabled\" : \"\") : \"undisabled\";\n    const achievClass = isAchiev ? 'achievement' : '';\n    return (\n        <div>\n      <div\n        className={`answer ${disClass} ${achievClass}`}\n        onClick={() => {\n          if (!disabled) click();\n        }}\n      >\n        {text.toUpperCase()}\n      </div>\n        </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class Params extends React.Component {\n  /* constructor() {\n    super();\n\n  }*/\n\n  correctGrads() {\n    const { grads, checkGrad } = this.props;\n    const corrGrads = grads.filter(g => checkGrad(g.name));\n\n    return corrGrads;\n  }\n  render() {\n    const { params, lim, edit } = this.props;\n\n    const correctGrads = this.correctGrads();\n    const correctGradsItems = correctGrads.map(g => (\n      <div key={g.name}>\n        \n        <span style={{ color: \"white\" }}>{g.name}</span>\n      </div>\n    ));\n\n    const paramItems = params.map(param => {\n      return param.isAchiev ? (\n        <div key={param.name}>\n          <input type=\"checkbox\" disabled checked={param.value} />{\" \"}\n          <span style={{ color: \"white\" }}>{param.name}</span>\n        </div>\n      ) : (\n        <div key={param.name}>\n          <div>\n            <button\n              onClick={() => {\n                edit(param.name, -1);\n              }}\n            >\n              -\n            </button>\n            <div\n              style={{\n                display: \"inline-block\",\n                height: \"15px\",\n                width: `${param.value * 10}px`,\n                backgroundColor: \"red\"\n              }}\n            ></div>\n            <div\n              style={{\n                display: \"inline-block\",\n                height: \"15px\",\n                width: `${(lim - param.value) * 10}px`,\n                backgroundColor: \"gray\"\n              }}\n            ></div>\n\n            <button\n              onClick={() => {\n                edit(param.name, 1);\n              }}\n            >\n              +\n            </button>\n            <span style={{ color: \"white\" }}>{param.name}</span>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div style={{position: 'absolute', top: '0'}}>\n        {paramItems}\n        {correctGradsItems}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default class PhraseText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isStart: true, curText: \"\", balText: \"\" };\n  }\n  checkPoint(string) {\n    const points = [\".\", \"!\", \"?\"];\n    return Boolean(points.find(p => `${p} ` === string));\n  }\n  nextLetterLoop() {\n    const { text, pAnsswerd, writingFinish, isPlayer } = this.props;\n\n    const { curText } = this.state;\n    if (text !== curText) {\n      const curLen = curText.length;\n\n      const newText = text.slice(0, curLen + 1);\n      const balText = text.slice(curLen + 1);\n\n      const isPoint = this.checkPoint(\n        newText.substr(newText.length - 2, newText.length)\n      );\n\n      const timeout = isPoint ? Math.random() * 350 + 150 : 20;\n\n      setTimeout(() => {\n        this.setState({ curText: newText, isStart: false, balText });\n        this.nextLetterLoop();\n      }, timeout);\n    } else isPlayer ? pAnsswerd() : writingFinish();\n  }\n  render() {\n    const { isPlayer, isEnding } = this.props;\n    const { isStart, curText, balText } = this.state;\n    if (isStart) this.nextLetterLoop();\n    const title = isEnding ? \"\" : isPlayer ? \"Я\" : \"Она\";\n    const titleClass = isPlayer ? \"text-p\" : \"text-c\";\n    return (\n      <div className=\"phrase-text\">\n        <span className={titleClass}>{title}/</span> {curText}\n        <span className=\"bal-text\">{balText}</span>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport PhraseText from \"./PhraseText\";\n\nexport default class DialogBox extends React.Component {\n  constructor() {\n    super();\n    this.state = { isPAnsserd: false };\n  }\n\n  pAnsswerd = () => {\n    const { dDelay } = this.props;\n    setTimeout(() => {\n      this.setState({ isPAnsserd: true });\n    }, dDelay);\n  };\n  render() {\n    const {\n      pPhrase,\n      cPhrase,\n      writingFinish,\n      hiding,\n      isEnding,\n      isLoaded\n    } = this.props;\n    const { isPAnsserd } = this.state;\n\n    const hidingClass = hiding ? \"phrase-hiding\" : \"\";\n\n    const pAnswer =\n      isLoaded && !isEnding ? (\n        <PhraseText\n          isEnding={isEnding}\n          text={pPhrase}\n          isPlayer\n          pAnsswerd={this.pAnsswerd}\n        />\n      ) : null;\n\n    const cAnswer =\n      isPAnsserd || isEnding ? (\n        <PhraseText\n          isEnding={isEnding}\n          text={cPhrase}\n          writingFinish={writingFinish}\n        />\n      ) : null;\n\n    return (\n      <div className=\"dialog-box\">\n        <div className={`phrase-interface ${hidingClass}`}>\n          <div className=\"phrase-content\">\n            {pAnswer}\n            {cAnswer}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export default class ImgObject {\n  constructor(image, slot = \"\", min, max, param = null) {\n    this.image = image;\n    this.slot = slot;\n    this.min = min;\n    this.max = max;\n    this.param = param;\n  }\n}\n","export default class SceneObject {\n  constructor(x = 0, y = 0, imgName, width) {\n    this.x = x;\n    this.y = y;\n    this.imgName = imgName;\n    this.width = width\n  }\n}\n","export default class Shaking {\n  constructor(speed, ampl) {\n    this.maxSpeed = speed;\n    this.maxAmpl = ampl;\n    this.speed = speed;\n    this.ampl = ampl;\n  }\n  value = 0;\n  stage = 0;\n\n  calcSpeed = () => {\n    this.speed = Math.random() * this.maxSpeed * 0.3 + this.maxSpeed * 0.7;\n  };\n  calcAmpl = () => {\n    this.ampl = Math.random() * this.maxAmpl * 0.5 + this.maxAmpl * 0.5;\n  };\n  update = param => {\n    this.stage += this.speed;\n\n    if (this.stage > 2 * Math.PI) {\n      this.stage = 0;\n\n      this.calcAmpl();\n      this.calcSpeed();\n    }\n    if (param) {\n      const newMaxSpeed = param.value < 3 ? 6 : param.value < 10 ? 0.1 : 0.05;\n\n      const newMaxAmpl = -Math.sin((param.value / 15) * (-Math.PI / 2)) * 10;\n\n      if (this.maxSpeed !== newMaxSpeed) {\n        this.maxSpeed = newMaxSpeed;\n        this.calcSpeed();\n      }\n      if (this.maxAmpl !== newMaxAmpl) {\n        this.maxAmpl = newMaxAmpl;\n      }\n    }\n\n    this.value = Math.sin(this.stage) * this.ampl;\n  };\n}\n","import React from \"react\";\nimport ImgObject from \"./img-object\";\nimport SceneObject from \"./scene-object\";\nimport \"./style.css\";\n\nimport {\n  PARAM_EQUILIBRIUM,\n  PARAM_DETERMINATION\n} from \"../../../game/parameters\";\nimport Shaking from \"./shaking\";\n\nexport default class Visual extends React.Component {\n  constructor(props) {\n    super(props);\n    this.c = null;\n    this.ctx = null;\n    this.shaking = {\n      x: new Shaking(0.05, 10),\n      y: new Shaking(0.05, 7)\n    };\n    this.objects = [\n      new ImgObject(\"road\", \"back\"),\n      new ImgObject(\"legs\", \"legs\"),\n      new ImgObject(\"doubt\", \"body\", 1, 5, PARAM_DETERMINATION),\n      new ImgObject(\"uncertainty\", \"body\", 6, 10, PARAM_DETERMINATION),\n      new ImgObject(\"readiness\", \"body\", 11, 15, PARAM_DETERMINATION),\n      //new ImgObject(\"tension\", \"body\"),\n      new ImgObject(\"squinted\", \"head\", 1, 5, PARAM_EQUILIBRIUM),\n      new ImgObject(\"horror\", \"head\", 6, 10, PARAM_EQUILIBRIUM),\n      new ImgObject(\"fear\", \"head\", 11, 15, PARAM_EQUILIBRIUM)\n      /* new ImgObject(\"apathy\", \"head\"),\n      new ImgObject(\"trembling\", \"head\")*/\n    ];\n\n\n    this.currProgress = 0;\n\n    this.positions = [\n      { prog: 0, camX: 915, camY: 386, camZoom: 20 },\n      { prog: 200, camX: 924, camY: 395, camZoom: 13.82 },\n      { prog: 400, camX: 933, camY: 410, camZoom: 8.24 },\n\n      { prog: 600, camX: 942, camY: 440, camZoom: 3.82 },\n      { prog: 800, camX: 951, camY: 480, camZoom: 1.98 },\n      { prog: 1000, camX: 960, camY: 540, camZoom: 1.4 }\n    ];\n\n    const girlX = 800;\n    const girlY = 345;\n    this.scene = {\n      back: new SceneObject(0, 0, \"road\", 1920),\n      legs: new SceneObject(girlX, girlY, \"legs\", 200),\n      body: new SceneObject(girlX, girlY, \"doubt\", 200),\n      head: new SceneObject(girlX, girlY, \"horror\", 200)\n    };\n    this.images = [];\n\n    const { landWidth, landHeight } = this.props.landSizes;\n\n    this.landWidth = landWidth;\n    this.landHeight = landHeight;\n\n    this.state = { isStarted: false };\n  }\n\n  getPosition() {\n    if (this.positions.length === 1) return this.positions[0];\n    for (let index = 0; index < this.positions.length; index++) {\n      const pos = this.positions[index];\n      if (this.currProgress < pos.prog) {\n        const first = this.positions[index - 1];\n        const last = pos;\n        const factor =\n          (this.currProgress - first.prog) / (last.prog - first.prog);\n        const camZoom = first.camZoom + (last.camZoom - first.camZoom) * factor;\n        const camX = first.camX + (last.camX - first.camX) * factor;\n        const camY = first.camY + (last.camY - first.camY) * factor;\n        return { camZoom, camX, camY };\n      } else if (index === this.positions.length - 1) {\n        return pos;\n      }\n    }\n  }\n\n  drawImg = (obj, ctx) => {\n    const {progress} = this.props\n    const { img } = this.images.find(image => image.name === obj.imgName);\n    const { width, x, y } = obj;\n\n    if (progress > this.currProgress) {\n      this.currProgress += 0.1;\n    }\n\n    const locFactor = width / img.width;\n    const height = img.height * locFactor;\n\n    const { camZoom, camX, camY } = this.getPosition();\n\n    const screenWidth = this.landWidth / 2;\n    const screenHeight = this.landHeight / 2;\n\n    ctx.drawImage(\n      img,\n      (x - camX) * camZoom + screenWidth + this.shaking.x.value,\n      (y - camY) * camZoom + screenHeight + this.shaking.y.value,\n      width * camZoom,\n      height * camZoom\n    );\n  };\n  async componentDidMount() {\n    if (!this.c && this.refs.myCanvas) {\n      this.c = this.refs.myCanvas;\n      this.ctx = this.c.getContext(\"2d\");\n\n      this.loaderLoop();\n    }\n  }\n\n  loaderLoop() {\n    this.objects.forEach(object => {\n      this.loadImage(object);\n    });\n  }\n\n  loadImage(sceneObject) {\n\n    const { slot, image } = sceneObject;\n    let img = new Image();\n    let url = slot ? `${slot}/` : \"\";\n    url += image;\n    img.src = `${window.location.href}/img/${url}.png`;\n    img.onload = event => {\n\n      const { target } = event;\n      this.images.push({ name: image, img: target });\n      if (this.images.length === this.objects.length) {\n        const { loadFinished } = this.props;\n        loadFinished();\n      }\n    };\n  }\n\n  getCorrImgName(slotName) {\n    const { params } = this.props;\n    const corrImages = this.objects.filter(obj => obj.slot === slotName);\n    let corrImg = corrImages.find(obj => {\n      if (obj.param) {\n        const param = params.find(p => p.name === obj.param);\n\n        return param.value <= obj.max && param.value >= obj.min;\n      } else return false;\n    });\n\n    if (!corrImg) {\n      corrImg = corrImages.find(img => !img.param);\n    }\n    return corrImg.image;\n  }\n\n  drawSceneLopp = () => {\n    const { params, isEnding } = this.props;\n    const param = params.find(p => p.name === PARAM_EQUILIBRIUM);\n\n    this.shaking.x.update(param);\n    this.shaking.y.update(param);\n\n    const { isStarted } = this.state;\n    if (!isStarted) this.setState({ isStarted: true });\n\n    const newCanvas = document.createElement(\"CANVAS\");\n    newCanvas.width = this.landWidth;\n    newCanvas.height = this.landHeight;\n    const newCtx = newCanvas.getContext(\"2d\");\n\n    for (let key in this.scene) {\n      const obj = this.scene[key];\n      obj.imgName = this.getCorrImgName(key);\n      this.drawImg(obj, newCtx);\n    }\n\n    this.ctx.drawImage(newCanvas, 0, 0);\n\n    if (!isEnding) window.requestAnimationFrame(this.drawSceneLopp);\n  };\n\n  render() {\n\n    const { width, height, isLoaded } = this.props;\n    const { isStarted } = this.state;\n\n    if (isLoaded && !isStarted) {\n      window.requestAnimationFrame(this.drawSceneLopp);\n    }\n\n    const className = isLoaded ? \"loaded\" : \"\";\n\n    return (\n      <div>\n        <canvas\n          className={className}\n          ref=\"myCanvas\"\n          width={this.landWidth}\n          height={this.landHeight}\n          style={{ width, height }}\n        ></canvas>\n      </div>\n    );\n  }\n}\n","export const PARAM_DETERMINATION = \"РЕШИМОСТЬ\";\nexport const PARAM_EQUILIBRIUM = \"УРАВНОВЕШЕННОСТЬ\";\n\nexport const PARAM_DOG = \"Собака\";\nexport const PARAM_GC = \"Знакомство\";\nexport const PARAM_CRUSH = \"Мертвец\";\nexport const PARAM_NOODLE = \"Любовь к лапше\";\nexport const PARAM_PHOTO = \"Фотограф\";\nexport const PARAM_PANICS = \"Панические атаки\";\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default class Loading extends React.Component {\n  render() {\n    return <div className=\"lds-dual-ring\"></div>;\n  }\n}\n","export default class AudioElement {\n  constructor(rangeName, audio, fileName) {\n    this.rangeName = rangeName;\n    this.fileName = fileName;\n    this.audio = audio;\n    this.audio.volume = 0;\n\n    this.isPlayed = false;\n    this.vStep = 1;\n    this.vMax = 10;\n    this.isOn = false;\n\n    this.updateLoop();\n  }\n\n  updateLoop = () => {\n    if (this.isPlayed) {\n      if (this.volume < this.vMax) this.volume += this.vStep;\n    } else {\n      if (this.volume > 0) {\n        this.volume -= this.vStep;\n      } else this.audio.pause();\n    }\n\n    if (!this.isOn) {\n      this.audio.pause();\n    } else this.audio.play();\n\n    setTimeout(this.updateLoop, 600);\n  };\n\n  get volume() {\n    return this.audio.volume * this.vMax;\n  }\n  set volume(value) {\n    this.audio.volume = value / this.vMax;\n  }\n}\n","import React from \"react\";\n\nimport {\n  RANGE_PANIC,\n  RANGE_TENSION,\n  RANGE_STABILITY\n} from \"../../../game/ranges\";\nimport AudioElement from \"./audio-element\";\n\nexport default class AudioPlayer extends React.Component {\n  constructor() {\n    super();\n    this.musics = [\n      new AudioElement(RANGE_PANIC, this.getAudio(\"bells\"), \"bells\"),\n      new AudioElement(\n        RANGE_TENSION,\n        this.getAudio(\"piano-trap\"),\n        \"piano-trap\"\n      ),\n      new AudioElement(RANGE_STABILITY, this.getAudio(\"piano\"), \"piano\")\n    ];\n  }\n\n  getAudio(fileN) {\n    const audio = new Audio(`${window.location.href}/audio/music/${fileN}.wav`);\n    audio.loop = true;\n    audio.preload = \"auto\";\n\n    return audio;\n  }\n  correctRanges() {\n    const { ranges, checkRange } = this.props;\n    const corrRanges = ranges.filter(r => checkRange(r.name));\n\n    return corrRanges;\n  }\n  getAudioName() {\n    const corrRanges = this.correctRanges();\n    for (let range of corrRanges) {\n      const result = this.musics.find(m => m.rangeName === range.name);\n\n      return result?.fileName || \"\";\n    }\n  }\n\n  render() {\n    const { audioPlayed } = this.props;\n\n    const fileName = this.getAudioName();\n\n    this.musics.forEach(m => {\n      m.isOn = audioPlayed\n      if (m.fileName === fileName) m.isPlayed = true;\n      else m.isPlayed = false;\n    });\n\n    return null;\n  }\n}\n","export const RANGE_PANIC = \"ПАНИКА\";\nexport const RANGE_TENSION = \"НАПРЯЖЕННОСТЬ\";\nexport const RANGE_STABILITY = \"СТАБИЛЬНОСТЬ\";\n\nexport const RANGE_APATHY = \"АПАТИЯ\";\nexport const RANGE_UNCERTAINTY = \"НЕУВЕРЕННОСТЬ\";\nexport const RANGE_CONFIDENCE = \"УВЕРЕННОСТЬ\";\n\nexport const RANGE_DOG = \"УПОМИНАЛА О СОБАКЕ\";\nexport const RANGE_GC = \"УПОМИНАЛ О СЕБЕ\";\nexport const RANGE_CRUSH = \"УПОМИНАЛА О ПАРНЕ\";\nexport const RANGE_NOODLE = \"УПОМИНАЛА О ЛАПШЕ\";\nexport const RANGE_PHOTO = \"УПОМИНАЛА О ФОТО\";\nexport const RANGE_PANICS = \"УПОМИНАЛА О ПАНИКАХ\";\n","import React from \"react\";\n\nexport default class FullScreen extends React.Component {\n  constructor() {\n    super();\n    this.state = { isFullScren: false };\n  }\n  getFullScreen() {\n    return Boolean(document.fullscreenElement);\n  }\n  fullScreenOn() {\n    const screenDom = document.getElementById(\"screenDom\");\n\n    if (this.getFullScreen()) document.exitFullscreen();\n    else screenDom.requestFullscreen();\n\n    this.setState({ isFullScren: !this.getFullScreen() });\n  }\n  render = () => {\n    const {isFullScren} = this.state\n\n    const icoClass = isFullScren ? \"fas fa-compress\" : \"fas fa-expand\";\n\n    return (\n      <div className=\"sett\">\n        <button\n          className={`${icoClass} sett-btn`}\n          onClick={() => {\n            this.fullScreenOn();\n          }}\n        ></button>\n      </div>\n    );\n  };\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default class AudioSwitcher extends React.Component {\n  render() {\n    const { audioSwitch, audioPlayed } = this.props;\n\n    const icoClass = audioPlayed ? \"fas fa-volume-up\" : \"fas fa-volume-mute\";\n\n    return (\n      <div className=\"sett\">\n        <button\n          className={`${icoClass} sett-btn`}\n          onClick={() => {\n            audioSwitch();\n          }}\n        ></button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport FullScreen from \"./FullScreen\";\nimport AudioSwitcher from \"./AudioSwitcher\";\n\nexport default class Settings extends React.Component {\n  render() {\n    const {methods, data} = this.props\n    return (\n      <div className=\"settings\">\n\n        <AudioSwitcher audioSwitch={methods.audioSwitch} audioPlayed={data.audioPlayed} />\n          <FullScreen />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default class ImageItem extends React.Component {\n  render() {\n    const { src, isCurrent, isHiding, goNext, disabled } = this.props;\n    const className = isCurrent ? \"appear\" : isHiding ? \"extin\" : \"\";\n    const disClassName = !disabled ? \"not-dis\" : \"\";\n\n    return (\n      <div className={`end-cont ${className} ${disClassName}`}>\n        <img\n          onClick={() => {\n            if (!disabled) {\n              goNext();\n            }\n          }}\n          className=\"end-img\"\n          src={src}\n          alt={\"img\"}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport ImageItem from \"./ImageItem\";\n\nexport default class Ending extends React.Component {\n  constructor() {\n    super();\n    this.endData = [\n      {\n        name: \"gabriella\",\n        quantity: 5,\n        audio: \"\"\n      },\n      {\n        name: \"taisa\",\n        quantity: 5,\n        audio: \"\"\n      },\n\n      {\n        name: \"hurima\",\n        quantity: 7,\n        audio: \"\"\n      },\n      {\n        name: \"leya\",\n        quantity: 8,\n        audio: \"\"\n      },\n      {\n        name: \"lola\",\n        quantity: 4,\n        audio: \"\"\n      }\n    ];\n    this.state = { currentImg: 1, imagesLoaded: false };\n    this.images = [];\n    this.loader();\n  }\n\n  loader() {\n    const endDataSum = this.endData\n      .map(data => data.quantity)\n      .reduce((a, b) => a + b, 0);\n\n    this.endData.forEach(({ name, quantity }) => {\n      for (let i = 1; i <= quantity; i++) {\n        let img = new Image();\n        img.src = `${window.location.href}/img/endings/${name}/${i}.png`;\n        img.onload = event => {\n          const { target } = event;\n          this.images.push({ name: `${name}_${i}`, image: target });\n\n          if (this.images.length === endDataSum) {\n            console.log(\"LOADED\");\n            this.setState({ imagesLoaded: true });\n          }\n        };\n      }\n    });\n  }\n\n  render() {\n    const { currentImg, imagesLoaded } = this.state;\n    const { endingNext, disabled, isEnding, topicName } = this.props;\n\n    const imagesItems = [];\n\n    if (imagesLoaded && isEnding) {\n      const { name, quantity } = this.endData.find(e => e.name === topicName);\n\n      for (let i = 1; i <= quantity; i++) {\n        const isCurrent = i === currentImg;\n\n        const image = this.images.find(\n          ({ name: imgName }) => imgName === `${name}_${i}`\n        );\n\n        imagesItems.push(\n          <ImageItem\n            disabled={disabled || !isCurrent}\n            isCurrent={isCurrent}\n            isHiding={i < currentImg}\n            goNext={() => {\n              if (isCurrent && currentImg - 1 < quantity && !disabled) {\n                this.setState({ currentImg: currentImg + 1 });\n                endingNext();\n              } else alert(\"ТИТРЫ\");\n            }}\n            key={i}\n            src={image?.image.src}\n          />\n        );\n      }\n    }\n    const style = {\n      display: isEnding ? \"\" : \"none\"\n    };\n\n    return (\n      <div style={style} className=\"ending\">\n        {imagesItems}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default class Alert extends React.Component {\n  render() {\n    const { text } = this.props;\n    const className = text ? \"alert\" : \"\";\n    return (\n      <div className={className}>\n        <div className=\"fas fa-lock-open alert-ico\"></div>\n        {text.toUpperCase()}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport Params from \"./Params\";\nimport AnswerI from \"./AnswerI/AnswerI\";\nimport DialogBox from \"./DialogBox/DialogBox\";\nimport \"./style.css\";\nimport Visual from \"./Visual/Visual\";\nimport Loading from \"./Loading/Loading\";\nimport AudioPlayer from \"./Audio/AudioPlayer\";\nimport Settings from \"./Settings/Settiings\";\nimport Ending from \"./Ending/Ending\";\nimport { PARAM_DETERMINATION } from \"../../game/parameters\";\nimport Alert from \"./Alert/Alert\";\n\nexport default class UI extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loc = props.loc;\n    const currStageId = this.loc.getStartId();\n    const currentStuff = this.loc._getStuffs(currStageId).find(s => s.isIntro);\n    const { text: pPhrase } = this.loc\n      ._getPhrases(currentStuff.id)\n      .find(p => !p.isGeneral);\n\n    const { cPhrase, answers } = this.getStageData(currStageId);\n    this.state = {\n      cPhrase,\n      pPhrase,\n      answers,\n      disabled: true,\n      currStageId,\n      isHiding: false,\n      dDelay: 1000,\n      isLoaded: false,\n      audioPlayed: false,\n      isEnding: false,\n      alertText: \"\"\n    };\n  }\n  getStageData(stageId) {\n    const interf = this.loc.getInterfaceStage(stageId);\n    const { answers, replic } = interf;\n    const { phrase } = replic;\n\n    const newStage = this.loc.stages.find(stage => stage.id === stageId);\n    const topic = this.loc._getTopic(newStage.topic_id);\n    const { isFin } = topic;\n\n    return {\n      cPhrase: phrase,\n      answers,\n      isFin\n    };\n  }\n  update(stuffId) {\n    const stuff = this.loc.stuffs.find(s => s.id === stuffId);\n    stuff.changes.forEach(change => {\n      const param = this.loc._getParam(change.paramName);\n      if (param.isAchiev && param.value !== change.term) {\n        setTimeout(() => {\n          this.setState({\n            alertText: param.name\n          });\n        }, 500);\n      }\n    });\n\n    const newStageId = this.loc.calcStuff(stuffId);\n\n    const pPhrase = this.loc.getCorrectPhrase(stuffId);\n    const { cPhrase, answers, isFin } = this.getStageData(newStageId);\n\n    this.setState({\n      isHiding: true,\n      disabled: true\n    });\n\n    setTimeout(() => {\n      const delayParam = this.loc._getParam(PARAM_DETERMINATION);\n      const dDelay = (this.loc.lim - delayParam.value) * 100;\n      this.setState({\n        isEnding: isFin,\n        pPhrase,\n        cPhrase,\n        currStageId: newStageId,\n        answers,\n        isHiding: false,\n        dDelay\n      });\n    }, 500);\n  }\n  endingNext = () => {\n    const { answers } = this.state;\n    if (answers.length) this.update(answers[0].id);\n    //console.log(answers.length)\n  };\n  writingFinish() {\n    this.setState({ disabled: false });\n  }\n  audioSwitch = () => {\n    const { audioPlayed } = this.state;\n    this.setState({ audioPlayed: !audioPlayed });\n  };\n\n  render() {\n    const {\n      pPhrase,\n      cPhrase,\n      currStageId,\n      answers,\n      disabled,\n      isHiding,\n      dDelay,\n      isLoaded,\n      audioPlayed,\n      isEnding,\n      alertText\n    } = this.state;\n\n    const answersItems = answers.map(answer => {\n        const isAchiev = this.loc.checkStuffByAchiev(answer.id);\n\n        return (\n          <AnswerI\n            isAchiev={isAchiev}\n            key={answer.id}\n            text={answer.generalPhrase}\n            disabled={disabled}\n            isHiding={isHiding}\n            click={() => {\n              this.update(answer.id);\n            }}\n          />\n        );\n      }),\n      { width, height, landSizes } = this.props;\n\n    const currentStage = this.loc.stages.find(s => s.id === currStageId);\n    const currentTopic = this.loc._getTopic(currentStage.topic_id);\n\n    const gameUI =\n      isLoaded && !isEnding ? (\n        <div className=\"answers\">{answersItems}</div>\n      ) : null;\n    const loadingAnim = !isLoaded ? <Loading /> : null;\n\n    return (\n      <div>\n        {loadingAnim}\n        <Visual\n          progress={(this.loc.topicQ / this.loc.topicLim) * 1000}\n          isEnding={isEnding}\n          params={this.loc.params}\n          width={width}\n          height={height}\n          isLoaded={isLoaded}\n          loadFinished={() => this.setState({ isLoaded: true })}\n          landSizes={landSizes}\n        />\n        <Ending\n          topicName={currentTopic.name}\n          isEnding={isEnding}\n          disabled={disabled}\n          endingNext={this.endingNext}\n        />\n        <AudioPlayer\n          ranges={this.loc.ranges}\n          checkRange={this.loc.checkRange}\n          audioPlayed={audioPlayed}\n        />\n        {gameUI}\n        <DialogBox\n          isLoaded={isLoaded}\n          hiding={isHiding}\n          key={currStageId}\n          pPhrase={pPhrase}\n          cPhrase={cPhrase}\n          dDelay={dDelay}\n          isEnding={isEnding}\n          writingFinish={() => {\n            this.writingFinish();\n          }}\n        />\n        <Alert key={alertText} text={alertText} />\n        <Settings\n          methods={{ audioSwitch: this.audioSwitch }}\n          data={{ audioPlayed }}\n        />\n      </div>\n    );\n  }\n}\n\n/*\n <Params\n          params={this.loc.params}\n          lim={this.loc.lim}\n          edit={(paramName, term) => {\n            this.loc._editParams([this.loc.cChange(paramName, term)]);\n            this.forceUpdate();\n          }}\n          grads={this.loc.grads}\n          checkGrad={this.loc.checkGrad}\n        />\n*/\n","import React from \"react\";\nimport \"./Settings/style.css\";\n\nexport default class Screen extends React.Component {\n  render() {\n    const { width, height } = this.props;\n    const style = {\n      width,\n      height,\n      display: \"inline-block\",\n      backgroundColor: \"black\",\n\n      marginLeft: `calc(50% - ${width / 2}px)`,\n      position: \"absolute\",\n      overflow: \"hidden\"\n    };\n    return (\n      <div id=\"screenDom\">\n        <div style={style}>\n          {this.props.children}\n\n        </div>\n      </div>\n    );\n  }\n}\n","export default class Graduation {\n  constructor(name, rangesNames) {\n    this.name = name;\n    this.rangesNames = rangesNames;\n  }\n}\n","export default class Parameter {\n  constructor(name, value, isAchiev = false) {\n    this.name = name;\n    this.value = value;\n    this.isAchiev = isAchiev;\n  }\n}\n","export default class Phrase {\n  constructor(rangeName, text, isGeneral, id) {\n    this.rangeName = rangeName;\n    this.text = text;\n    this.isGeneral = isGeneral;\n    this.id = id;\n  }\n  stuff_id = null;\n}\n","export default class Range {\n  constructor(name, paramName, min, max) {\n    this.name = name;\n    this.paramName = paramName;\n    this.min = min;\n    this.max = max;\n  }\n}\n","export default class Stage {\n  constructor(isStart, id) {\n    this.id = id;\n    this.isStart = isStart\n  }\n  isBeen = false;\n  topic_id = null;\n}\n","export default class Stuff {\n  constructor(next_stage_id, changes = [], isA = false, id) {\n    this.next_stage_id = next_stage_id;\n    this.changes = changes;\n    this.isA = isA;\n    this.id = id;\n  }\n  isIntro = false;\n  stage_id = null;\n}\n","export default class Topic {\n  constructor(name, graduation, isFin, isStart, id, stuffIntro) {\n    this.name = name;\n    this.gradNames = [graduation]\n    this.isFin = isFin;\n    this.isStart = isStart;\n    this.id = id;\n    this.stuffIntro = stuffIntro\n  }\n}\n","export default class Change {\n  constructor(paramName, term) {\n    this.paramName = paramName;\n    this.term = term;\n  }\n}\n","export default class Interf {\n  constructor(generalPhrase, phrase, id) {\n    this.generalPhrase = generalPhrase;\n    this.phrase = phrase;\n    this.id = id;\n  }\n}\n","import { Loc } from \"./../mlpa_engine\";\n\nimport {\n  PARAM_EQUILIBRIUM,\n  PARAM_DETERMINATION,\n  PARAM_DOG,\n  PARAM_CRUSH,\n  PARAM_GC,\n  PARAM_NOODLE,\n  PARAM_PANICS,\n  PARAM_PHOTO\n} from \"./parameters\";\n\nimport {\n  RANGE_PANIC,\n  RANGE_TENSION,\n  RANGE_STABILITY,\n  RANGE_APATHY,\n  RANGE_UNCERTAINTY,\n  RANGE_CONFIDENCE,\n  RANGE_DOG,\n  RANGE_CRUSH,\n  RANGE_GC,\n  RANGE_NOODLE,\n  RANGE_PANICS,\n  RANGE_PHOTO\n} from \"./ranges\";\n\nimport {\n  GRAD_PAN_APA,\n  GRAD_PAN_UNC,\n  GRAD_PAN_CON,\n  GRAD_TEN_APA,\n  GRAD_TEN_UNC,\n  GRAD_TEN_CON,\n  GRAD_STAB_APA,\n  GRAD_STAB_UNC,\n  GRAD_STAB_CON,\n  GRAD_DOG,\n  GRAD_CRUSH,\n  GRAD_GC,\n  GRAD_NOODLE,\n  GRAD_PANICS,\n  GRAD_PHOTO,\n} from \"./grads\";\n\nconst locE = new Loc();\nlocE.addParams(\n  locE.cParam(PARAM_DETERMINATION, 2),\n  locE.cParam(PARAM_EQUILIBRIUM, 4),\n\n  locE.cParam(PARAM_DOG, false, true),\n\n  locE.cParam(PARAM_CRUSH, false, true),\n  locE.cParam(PARAM_GC, false, true),\n  locE.cParam(PARAM_NOODLE, false, true),\n  locE.cParam(PARAM_PANICS, false, true),\n  locE.cParam(PARAM_PHOTO, false, true)\n);\n\nlocE.addRanges(\n  locE.cRange(RANGE_PANIC, 1, 5, PARAM_EQUILIBRIUM),\n  locE.cRange(RANGE_TENSION, 6, 10, PARAM_EQUILIBRIUM),\n  locE.cRange(RANGE_STABILITY, 11, 15, PARAM_EQUILIBRIUM),\n\n  locE.cRange(RANGE_APATHY, 1, 5, PARAM_DETERMINATION),\n  locE.cRange(RANGE_UNCERTAINTY, 6, 10, PARAM_DETERMINATION),\n  locE.cRange(RANGE_CONFIDENCE, 11, 15, PARAM_DETERMINATION),\n\n  locE.cRange(RANGE_DOG, true, true, PARAM_DOG),\n  locE.cRange(RANGE_CRUSH, true, true, PARAM_CRUSH),\n  locE.cRange(RANGE_GC, true, true, PARAM_GC),\n  locE.cRange(RANGE_NOODLE, true, true, PARAM_NOODLE),\n  locE.cRange(RANGE_PANICS, true, true, PARAM_PANICS),\n  locE.cRange(RANGE_PHOTO, true, true, PARAM_PHOTO)\n);\nlocE.addGrads(\n  locE.cGrad(GRAD_PAN_APA, RANGE_PANIC, RANGE_APATHY),\n  locE.cGrad(GRAD_PAN_UNC, RANGE_PANIC, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_PAN_CON, RANGE_PANIC, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_TEN_APA, RANGE_TENSION, RANGE_APATHY),\n  locE.cGrad(GRAD_TEN_UNC, RANGE_TENSION, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_TEN_CON, RANGE_TENSION, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_STAB_APA, RANGE_STABILITY, RANGE_APATHY),\n  locE.cGrad(GRAD_STAB_UNC, RANGE_STABILITY, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_STAB_CON, RANGE_STABILITY, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_DOG, RANGE_DOG),\n  locE.cGrad(GRAD_CRUSH, RANGE_CRUSH),\n  locE.cGrad(GRAD_GC, RANGE_GC),\n  locE.cGrad(GRAD_NOODLE, RANGE_NOODLE),\n  locE.cGrad(GRAD_PANICS, RANGE_PANICS),\n  locE.cGrad(GRAD_PHOTO, RANGE_PHOTO),\n\n);\n\nexport default locE;\n","import Parameter from \"./parameter\";\nimport Range from \"./range\";\nimport Graduation from \"./graduation\";\nimport Phrase from \"./phrase\";\nimport Stuff from \"./stuff\";\nimport Change from \"./change\";\nimport Stage from \"./stage\";\nimport Topic from \"./topic\";\nimport Interf from \"./interf\";\nimport {PARAM_CRUSH} from \"../game/parameters\";\n\nexport default class Loc {\n  params = [];\n  ranges = [];\n  grads = [];\n  topics = [];\n\n  stuffs = [];\n  stages = [];\n  phrases = [];\n\n  lim = 15;\n\n  topicLim = 8;\n  topicQ = 0;\n\n  cParam(name, value, isAchiev) {\n    return new Parameter(name, value, isAchiev);\n  }\n  addParams(...params) {\n    this.params = this.params.concat(params);\n  }\n\n  cRange(name, min, max, paramName) {\n    return new Range(name, paramName, min, max);\n  }\n  addRanges(...ranges) {\n    this.ranges = this.ranges.concat(ranges);\n  }\n\n  cGrad(name, ...rangesNames) {\n    return new Graduation(name, rangesNames);\n  }\n  addGrads(...grads) {\n    this.grads = this.grads.concat(grads);\n  }\n\n  cTopic(name, gradName, isFin, isStart, ...stages) {\n    const topicId = this.getId(\"topics\");\n    this.addTopics(new Topic(name, gradName, isFin, isStart, topicId));\n    this.addStages(topicId, ...stages);\n  }\n\n  addTopics(...topics) {\n    this.topics = this.topics.concat(topics);\n  }\n\n  cStage(isStart, ...answers) {\n    const stageId = this.getId(\"stages\");\n    this.addStuffs(stageId, ...answers);\n    return new Stage(isStart, stageId);\n  }\n\n  addStages = (topicId, ...stages) => {\n    if (this._getTopic(topicId)) {\n      const newStages = stages.map(stage => {\n        return { ...stage, topic_id: topicId };\n      });\n      this.stages = this.stages.concat(newStages);\n    } else console.error(`Topic ${topicId} not found!`);\n  };\n\n  cStuff(props, ...phrases) {\n    let { id: nextStageId, changes = [], isA, isIntro } = props ? props : {};\n    const stuffId = this.getId(\"stuffs\");\n\n    this.addPhrases(stuffId, phrases);\n    const newStuff = new Stuff(\n      nextStageId,\n      !isA ? changes.filter(c => c.term) : [],\n      isA,\n      stuffId\n    );\n    newStuff.isIntro = isIntro;\n    return newStuff;\n  }\n\n  addStuffs(stageId, ...stuffs) {\n    const newStuffs = stuffs.map(stuff => {\n      let { isIntro } = stuff;\n      const next_stage_id = isIntro ? stageId : stuff.next_stage_id;\n      return { ...stuff, stage_id: stageId, next_stage_id };\n    });\n    this.stuffs = this.stuffs.concat(newStuffs);\n  }\n\n  addPhrases(stuffId, phrases) {\n    const newPhrases = phrases.map(phrase => ({\n      ...phrase,\n      stuff_id: stuffId\n    }));\n\n    this.phrases = this.phrases.concat(newPhrases);\n  }\n\n  cPhrase(text, isGeneral = false, rangeName) {\n    const phraseId = this.getId(\"phrases\");\n    return new Phrase(rangeName, text, isGeneral, phraseId);\n  }\n\n  cChange(paramName, term) {\n    return new Change(paramName, term);\n  }\n\n  _getTopic(id) {\n    return this.topics.find(topic => topic.id === id);\n  }\n  _getStages = topicId => {\n    return this.stages.filter(stage => stage.topic_id === topicId);\n  };\n\n  _getStuffs = stageId => {\n    return this.stuffs.filter(stuff => stuff.stage_id === stageId);\n  };\n\n  _getPhrases = stuffId => {\n    return this.phrases.filter(phrase => phrase.stuff_id === stuffId);\n  };\n\n  _getParam = name => {\n    return this.params.find(param => param.name === name);\n  };\n\n  _getRange(name) {\n    return this.ranges.find(range => range.name === name);\n  }\n\n  _getGrad(name) {\n    return this.grads.find(grad => grad.name === name);\n  }\n\n  _editParams(changes) {\n    changes.forEach(change => {\n      const param = this._getParam(change.paramName);\n\n      if (param.isAchiev) {\n        param.value = true;\n      } else {\n        const newValue = param.value + change.term;\n        if (newValue > this.lim) {\n          param.value = this.lim;\n        } else if (newValue < 1) {\n          param.value = 1;\n        } else param.value = newValue;\n      }\n    });\n  }\n\n  checkStageFinal = stageId => {\n    const stuffs = this._getStuffs(stageId);\n    return !stuffs.find(s => !s.isA);\n  };\n\n  checkRange = rangeName => {\n    const range = this._getRange(rangeName);\n    const param = this._getParam(range.paramName);\n    const res = param.isAchiev\n      ? param.value === range.max\n      : param.value >= range.min && param.value <= range.max;\n    return res;\n  };\n\n  checkGrads = gradNames => {\n    return gradNames.find(gName => this.checkGrad(gName));\n  };\n\n  checkGrad = gradName => {\n    const grad = this._getGrad(gradName);\n    const ranges = grad.rangesNames.map(rName => this._getRange(rName));\n    const params = [];\n    ranges.forEach(range => {\n      if (!params[range.paramName]) {\n        params[range.paramName] = this.checkRange(range.name);\n      }\n    });\n    for (let key in params) {\n      if (!params[key]) return false;\n    }\n    return true;\n  };\n\n  idState = {};\n  getId = type => {\n    if (!this.idState[type]) this.idState[type] = 0;\n    this.idState[type]++;\n    return this.idState[type];\n  };\n\n  getStartId = () => {\n    const startTopic = this.topics.find(topic => topic.isStart);\n    const stages = this._getStages(startTopic.id);\n    const startStage = stages.find(stage => stage.isStart);\n    return startStage ? startStage.id : null;\n  };\n\n  calcStuff = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n\n    this._editParams(stuff.changes);\n    return stuff.next_stage_id;\n  };\n\n  getGeneralPhrase = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n    const phrases = this._getPhrases(stuff.id);\n    const generalPhrase = phrases.find(phrase => phrase.isGeneral);\n    return generalPhrase?.text;\n  };\n\n  checkStuffByAchiev = id => {\n    const stuff = this.stuffs.find(s => s.id === id);\n    if (!stuff.next_stage_id) return false;\n    const nextStage = this.stages.find(s => s.id === stuff.next_stage_id);\n    const stage = this.stages.find(s => s.id === stuff.stage_id);\n    const topic = this._getTopic(stage.topic_id);\n\n    const result = topic.gradNames.find(gName => {\n      const grad = this._getGrad(gName);\n\n      return (\n        nextStage.isStart &&\n        Boolean(\n          grad.rangesNames.find(rName => {\n            const range = this._getRange(rName);\n            const param = this._getParam(range.paramName);\n            return param.isAchiev;\n          })\n        )\n      );\n    });\n    return result;\n  };\n\n  getCorrectPhrase = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n    const phrases = this._getPhrases(stuff.id);\n    const neutralPhrase = phrases.find(phrase => !phrase.rangeName);\n    for (let i in phrases) {\n      const phrase = phrases[i];\n      if (phrase.rangeName && this.checkRange(phrase.rangeName))\n        return phrase.text;\n    }\n\n    return neutralPhrase.text;\n  };\n\n  _getCorrectStuffs = id => {\n    const stage = this.stages.find(s => s.id === id);\n    stage.isBeen = true;\n    const currentTopic = this._getTopic(stage.topic_id);\n\n    const answersAll = this._getStuffs(id);\n\n    const replicStuff = answersAll.find(stuff => stuff.isA);\n    const replic = new Interf(null, this.getCorrectPhrase(replicStuff.id));\n\n    let answersNotA = answersAll.filter(stuff => {\n      return !(stuff.isA || stuff.isIntro);\n    });\n\n    if (!answersNotA.length) {\n      this.topicQ++;\n\n      if (this.topicQ < this.topicLim) {\n        this.topics.forEach(topic => {\n          const nextStage = this._getStages(topic.id).find(\n            stage => stage.isStart\n          );\n          const nextTopic = this._getTopic(nextStage.topic_id);\n          if (!nextStage.isBeen && !nextTopic.isStart && !nextTopic.isFin) {\n            const nextStuff = this._getStuffs(nextStage.id).find(\n              stuff => stuff.isIntro\n            );\n            answersNotA.push(nextStuff);\n          }\n        });\n\n        answersNotA = answersNotA.filter(a => {\n          if (this.checkStuffByAchiev(a.id)) {\n            const nextStage = this.stages.find(s => s.id === a.next_stage_id);\n            const nextTopic = this._getTopic(nextStage.topic_id);\n            return this.checkGrads(nextTopic.gradNames);\n          } else return true;\n        });\n\n        answersNotA.sort(() => Math.random() - 0.5);\n\n        answersNotA = answersNotA.slice(0, 3);\n      } else if (!currentTopic.isFin) {\n        const finalTopic = this.topics.find(topic => {\n          return topic.isFin && this.checkGrads(topic.gradNames);\n        });\n        const finalStage = this._getStages(finalTopic.id).find(s => s.isStart);\n        const finalAnswer = this._getStuffs(finalStage.id).find(s => s.isIntro);\n        answersNotA.push(finalAnswer);\n      }\n    }\n\n    return { resAnswers: answersNotA, replic };\n  };\n\n  getInterfaceStage = id => {\n    const { resAnswers, replic } = this._getCorrectStuffs(id);\n\n    const interf = {\n      answers: resAnswers.map(stuff => {\n        return new Interf(\n          this.getGeneralPhrase(stuff.id),\n          this.getCorrectPhrase(stuff.id),\n          stuff.id\n        );\n      }),\n      replic\n    };\n\n    return interf;\n  };\n\n  ssign = data => {\n    for (let key in data) {\n      if (![\"params\", \"grads\", \"ranges\", \"topicLim\"].find(k => k === key)) {\n        this[key] = data[key];\n      }\n    }\n    this.stuffs.forEach(s => {\n      if(s.changes.find(c => c.paramName === PARAM_CRUSH)){\n        const stage = this.stages.find(st => st.id === s.stage_id)\n        const topic = this._getTopic(stage.topic_id)\n        console.log(`stage:${stage.id} topic: ${topic.name}`)\n      }\n    })\n  };\n}\n","export const GRAD_PAN_APA = \"ПАН АПАТ\";\nexport const GRAD_PAN_UNC = \"ПАН НЕУВ\";\nexport const GRAD_PAN_CON = \"ПАН УВ\";\n\nexport const GRAD_TEN_APA = \"НАПР АПАТ\";\nexport const GRAD_TEN_UNC = \"НАПР НЕУВ\";\nexport const GRAD_TEN_CON = \"НАПР УВ\";\n\nexport const GRAD_STAB_APA = \"СТАБ АПАТ\";\nexport const GRAD_STAB_UNC = \"СТАБ НЕУВ\";\nexport const GRAD_STAB_CON = \"СТАБ УВ\";\n\nexport const GRAD_DOG = \"УПОМИНАЛА О СОБАКЕ\";\nexport const GRAD_GC = \"УПОМИНАЛ О СЕБЕ\";\nexport const GRAD_CRUSH = \"УПОМИНАЛА О ПАРНЕ\";\nexport const GRAD_NOODLE = \"УПОМИНАЛА О ЛАПШЕ\";\nexport const GRAD_PHOTO = \"УПОМИНАЛА О ФОТО\";\nexport const GRAD_PANICS = \"УПОМИНАЛА О ПАНИКАХ\";\n","import React from \"react\";\nimport UI from \"./UI\";\nimport Screen from \"./Screen\";\nimport locE from \"../../game/loc_example\";\nimport mlpaState from \"../../mlpa_state\";\n\nexport default class Game extends React.Component {\n  constructor() {\n    super();\n\n    this.landWidth = 1920;\n    this.landHeight = 1080;\n\n    this.loc = locE;\n    this.loc.ssign(mlpaState);\n    this.defaultParams();\n  }\n  defaultParams() {\n    this.loc.params.forEach(p => {\n      if (!p.isAchiev) p.value = 2;\n    });\n  }\n  getSizes() {\n    const { width, height } = window.screen;\n\n    const max = Math.max(width, height);\n    const min = Math.min(width, height);\n\n    let newWidth = max;\n\n    const factorW = newWidth / this.landWidth;\n    let newHeight = this.landHeight * factorW;\n    if (newHeight > min) {\n      newHeight = min;\n      const factorH = newHeight / this.landHeight;\n      newWidth = this.landWidth * factorH;\n    }\n    return { newWidth, newHeight };\n  }\n  render() {\n    const { newWidth, newHeight } = this.getSizes();\n    return (\n      <Screen width={newWidth} height={newHeight}>\n        <UI\n          loc={this.loc}\n          width={newWidth}\n          height={newHeight}\n          landSizes={{ landWidth: this.landWidth, landHeight: this.landHeight }}\n        />\n      </Screen>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class TopicItem extends React.Component {\n  render() {\n    const { topic, isSelect, click } = this.props;\n\n    const border = topic.isStart\n      ? \"solid 0.3rem red\"\n      : topic.isFin\n      ? \"solid 0.3rem aqua\"\n      : \"none\";\n\n    const style = {\n      backgroundColor: isSelect ? \"green\" : \"gray\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      cursor: \"pointer\",\n      color: \"white\",\n      border\n    };\n    return (\n      <div\n        style={style}\n        onClick={() => {\n          click(topic.id);\n        }}\n      >\n        {topic.name}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class StageItem extends React.Component {\n  render() {\n    const { stage, click, isSelect, stuffText, methods } = this.props;\n\n    const isFinal = methods.checkStageFinal(stage.id);\n    const border = stage.isStart\n      ? \"solid 0.3rem red\"\n      : isFinal\n      ? \"solid 0.3rem aqua\"\n      : \"none\";\n\n    const style = {\n      backgroundColor: isSelect ? \"blue\" : \"gray\",\n      cursor: \"pointer\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      color: \"white\",\n      border\n    };\n    return (\n      <div\n        onClick={() => {\n          click(stage.id);\n        }}\n        style={style}\n      >\n        {stuffText(stage.id)}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class StuffItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const nextStage = props.allStages.find(\n      s => s.id === props.stuff.next_stage_id\n    );\n    const currentTopic = nextStage?.topic_id;\n\n    this.state = {\n      currentTopic,\n      viewAchievs: false\n    };\n  }\n  render() {\n    const {\n      stuff,\n      methods,\n      range,\n      stat,\n      goStage,\n      allStages,\n      stuffText,\n      allTopics\n    } = this.props;\n\n    const phrase = methods.getPhrases(stuff.id).find(p => {\n      return (\n        p.rangeName === range ||\n        (range === \"none\" && !p.rangeName) ||\n        (range === \"GENERAL\" && p.isGeneral)\n      );\n    });\n\n    const { changes } = stuff;\n    const { currentTopic, viewAchievs } = this.state;\n\n    const isSpecial = !(stuff.isA || stuff.isIntro);\n\n    const changesItems = isSpecial\n      ? stat.params.map(p => {\n          const c = changes.find(change => change.paramName === p.name);\n\n          const term = c ? c.term : p.isAchiev ? false : 0;\n\n          const inputElem = p.isAchiev ? (\n            <input\n              type=\"checkbox\"\n              checked={term}\n              onChange={e => {\n                methods.updateStuff(stuff.id, stuff.next_stage_id, {\n                  paramName: p.name,\n                  term: Boolean(e.target.checked)\n                });\n              }}\n            />\n          ) : (\n            <input\n              type=\"number\"\n              style={{ width: \"40px\" }}\n              value={term}\n              onChange={e => {\n                methods.updateStuff(stuff.id, stuff.next_stage_id, {\n                  paramName: p.name,\n                  term: Number(e.target.value)\n                });\n              }}\n            />\n          );\n\n          if (!viewAchievs && p.isAchiev) return null;\n          return (\n            <span\n              style={{\n                display: \"inline-block\",\n                padding: \"0.5rem\",\n                backgroundColor: \"#ffccff\",\n                marginRight: \"0.5rem\"\n              }}\n              key={p.name}\n            >\n              {p.name}:{inputElem}\n            </span>\n          );\n        })\n      : null;\n\n    const style = {\n      backgroundColor: stuff.isA\n        ? \"#ccffff\"\n        : stuff.isIntro\n        ? \" #ffe6b3\"\n        : \"#D3D3D3\",\n      cursor: \"pointer\",\n      margin: \"0.2rem\",\n\n      paddingTop: stuff.isA ? \"1rem\" : \"0.5rem\",\n      paddingBottom: stuff.isA ? \"1rem\" : \"0.5rem\",\n\n      display: \"inline-block\",\n      width: \"40%\"\n    };\n\n    const text = phrase ? phrase.text : \"\";\n\n    const linkItems = methods.getStages(this.state.currentTopic).map(s => {\n      return (\n        <option value={s.id} key={s.id}>\n          {stuffText(s.id)}\n        </option>\n      );\n    });\n\n    if (!allStages.find(s => s.id === stuff.next_stage_id)) {\n      linkItems.unshift(\n        <option value={\"error\"} key=\"0\">\n          {stuff.next_stage_id} NOT FOUND\n        </option>\n      );\n    }\n\n    const linkThemesItems = allTopics.map(t => {\n      return (\n        <option value={t.id} key={t.id}>\n          {t.name}\n        </option>\n      );\n    });\n\n    const next = isSpecial ? (\n      <div style={{ display: \"inline-block\", marginRight: \"0.5rem\" }}>\n        <div\n          style={{\n            display: \"inline-block\",\n            backgroundColor: \"red\",\n            cursor: \"pointer\",\n            color: \"white\"\n          }}\n          onClick={() => {\n            goStage(stuff.next_stage_id);\n          }}\n        >\n          ===>\n        </div>\n        {currentTopic}\n\n        <select\n          value={this.state.currentTopic}\n          onChange={e => {\n            const newCurrTopic = Number(e.target.value);\n            this.setState({ currentTopic: newCurrTopic });\n            const topicStages = methods.getStages(newCurrTopic);\n\n            if (\n              topicStages.length &&\n              !topicStages.find(s => s.id === stuff.next_stage_id)\n            )\n              methods.updateStuff(stuff.id, topicStages[0].id);\n          }}\n        >\n          {linkThemesItems}\n        </select>\n\n        <select\n          value={stuff.next_stage_id}\n          onChange={e => {\n            methods.updateStuff(stuff.id, Number(e.target.value));\n          }}\n        >\n          {linkItems}\n        </select>\n      </div>\n    ) : null;\n\n    const removeButton = isSpecial ? (\n      <button onClick={() => methods.removeStuff(stuff.id)}>X</button>\n    ) : null;\n\n    const viewBox = !isSpecial ? null : (\n      <input\n        type=\"checkbox\"\n        checked={viewAchievs}\n        onChange={e => {\n          this.setState({ viewAchievs: e.target.checked });\n        }}\n      />\n    );\n\n    return (\n      <div>\n        {removeButton}\n        <div style={style}>\n          ({stuff.id}){\" \"}\n          <input\n            value={text}\n            style={{ width: \"90%\" }}\n            onChange={e => {\n              methods.updatePhrase(\n                stuff.id,\n                range === \"none\" ? null : range,\n                phrase ? phrase.id : null,\n                e.target.value\n              );\n            }}\n          />\n        </div>\n        {next}\n        {changesItems}\n        {viewBox}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class RangeItem extends React.Component {\n  render() {\n    const { range, isSelect, click } = this.props;\n\n    const style = {\n      backgroundColor: isSelect ? \"orange\" : \"gray\",\n      cursor: \"pointer\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      color: \"white\"\n    };\n    return (\n      <div\n        style={style}\n        onClick={() => {\n          click(range.name);\n        }}\n      >\n        {range.name}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class AddStuff extends React.Component {\n  render() {\n    const { methods, stageId, topic } = this.props;\n\n    const nextStageId = methods.getStages(topic.id)[0].id;\n\n    return (\n      <div>\n        <button\n          onClick={() => {\n            methods.addStuff(stageId, false, nextStageId, []);\n          }}\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport StuffItem from \"../Stuffs/StuffItem\";\nimport RangeItem from \"../Ranges/RangeItem\";\nimport AddStuff from \"../Stuffs/AddStuff\";\n\nexport default class Stage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { currentRange: \"none\", acheivs: false };\n  }\n\n  click = name => {\n    this.setState({ currentRange: name });\n  };\n  splitStuffs(stuffs) {\n    const answer = stuffs.find(stuff => stuff.isA);\n    const pAnswers = stuffs.filter(stuff => !stuff.isA);\n    return { answer, pAnswers };\n  }\n  sortItems = (stuffA, stuffB) => {\n    const isTopA = Boolean(stuffA.isA || stuffA.isIntro);\n    const isTopB = Boolean(stuffB.isA || stuffB.isIntro)\n\n\n    return  isTopB - isTopA\n\n  }\n  render() {\n    const {\n      stage,\n      methods,\n      stat,\n      changeStage,\n      allStages,\n      stuffText,\n      topic,\n      allTopics\n    } = this.props;\n\n    const stuffs = methods.getStuffs(stage.id);\n\n    const { answer, pAnswers } = this.splitStuffs(stuffs);\n\n    const stuffsItems = [answer, ...pAnswers].sort(this.sortItems).map(stuff => {\n      const res = stuff ? (\n        <StuffItem\n          stat={stat}\n          range={this.state.currentRange}\n          methods={methods}\n          key={stuff.id}\n          stuff={stuff}\n          goStage={changeStage}\n          allStages={allStages}\n          allTopics={allTopics}\n          stuffText={stuffText}\n        />\n      ) : null;\n\n      return res;\n    });\n\n    if (\"GENERAL\" === this.state.currentRange) {\n      stuffsItems.shift();\n    }\n\n    const { ranges } = stat;\n\n    const generStuff = (\n      <RangeItem\n        isSelect={\"GENERAL\" === this.state.currentRange}\n        range={{ name: \"GENERAL\" }}\n        click={this.click}\n      />\n    );\n\n    const noRanges = (\n      <RangeItem\n        isSelect={\"none\" === this.state.currentRange}\n        range={{ name: \"none\" }}\n        click={this.click}\n      />\n    );\n\n    const rangesItems = ranges\n      .filter(r => {\n        const param = methods.getParam(r.paramName);\n        return this.state.acheivs || !param.isAchiev;\n      })\n      .map(range => (\n        <RangeItem\n          isSelect={range.name === this.state.currentRange}\n          key={range.name}\n          range={range}\n          click={this.click}\n        />\n      ));\n\n    return (\n      <div>\n        <h2 align=\"center\">\n          {stuffText(stage.id)}{\" \"}\n          <button\n            onClick={() => {\n              methods.removeStage(stage.id);\n            }}\n          >\n            X\n          </button>\n          <input\n            type=\"checkbox\"\n            checked={stage.isStart}\n            onChange={e => {\n              methods.updateStage(stage.id, e.target.checked);\n            }}\n          />\n        </h2>\n        {generStuff}\n        {noRanges}\n        {rangesItems}\n        <input\n          type=\"checkbox\"\n          checked={this.state.acheivs}\n          onChange={e => {\n            this.setState({ acheivs: e.target.checked });\n          }}\n        />\n        {stuffsItems}\n        <AddStuff topic={topic} methods={methods} stageId={stage.id} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport StageItem from \"../Stages/StageItem\";\nimport Stage from \"../Stages/Stage\";\n\nexport default class Topic extends React.Component {\n  constructor() {\n    super();\n    this.state = { newStageStart: false, showGrads: false };\n  }\n  stuffText = id => {\n    if (id) {\n      const { methods } = this.props;\n\n      const nextStuff = methods.getStuffs(id).find(stuff => stuff.isA);\n\n      if (nextStuff) {\n        const nextPhrases = methods.getPhrases(nextStuff.id);\n        const nextPhrase = nextPhrases.find(p => !p.rangeName);\n\n        if (nextPhrase) {\n          return `(${id}) ${nextPhrase.text.slice(0, 7)}...`;\n        } else return `(${id}) NOT PHRASE...`;\n      } else return \"NOT FOUND\";\n    }\n    return null;\n  };\n  render() {\n    const {\n      topic,\n      stat,\n      methods,\n      currentStage,\n      click,\n      changeStage,\n      allStages,\n      allTopics\n    } = this.props;\n\n    const { showGrads } = this.state;\n\n    const stages = methods.getStages(topic.id);\n    const stagesItems = stages.map(stage => {\n      const isSelect = stage.id === currentStage;\n\n      return (\n        <StageItem\n          methods={methods}\n          stuffText={this.stuffText}\n          key={stage.id}\n          stage={stage}\n          isSelect={isSelect}\n          click={click}\n        />\n      );\n    });\n\n    const curStage = stages.find(stage => stage.id === currentStage);\n\n    const stageView = currentStage ? (\n      <Stage\n        stage={curStage}\n        methods={methods}\n        stat={stat}\n        allStages={allStages}\n        allTopics={allTopics}\n        changeStage={changeStage}\n        stuffText={this.stuffText}\n        topic={topic}\n      />\n    ) : null;\n\n    return (\n      <div>\n        <h1 align=\"center\">\n          Topic{\" \"}\n          <input\n            value={topic.name}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                e.target.value,\n                topic.gradNames,\n                topic.isFin,\n                topic.isStart\n              );\n            }}\n          />\n          , grads:\n          <input type=\"checkbox\" checked={showGrads} onChange={e => {this.setState({showGrads: e.target.checked})}}/>\n          {showGrads\n            ? stat.grads.map(g => (\n                <div key={g.name}>\n                  {g.name}\n                  <input\n                    type=\"checkbox\"\n                    checked={Boolean(\n                      topic.gradNames.find(grad => grad === g.name)\n                    )}\n                    onChange={e => {\n                      methods.updateTopicGrads(\n                        topic.id,\n                        g.name,\n                        !e.target.checked\n                      );\n                    }}\n                  />\n                </div>\n              ))\n            : null}\n          Start:\n          <input\n            type=\"checkbox\"\n            checked={topic.isStart}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                topic.gradNames,\n                topic.isFin,\n                e.target.checked\n              );\n            }}\n          />\n          Final:\n          <input\n            type=\"checkbox\"\n            checked={topic.isFin}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                topic.gradNames,\n                e.target.checked,\n                topic.isStart\n              );\n            }}\n          />\n          <button\n            onClick={() => {\n              methods.removeTopic(topic.id);\n            }}\n            style={{ marginLeft: \"1rem\" }}\n          >\n            X\n          </button>\n        </h1>\n\n        <br />\n        <div>\n          <input\n            type=\"checkbox\"\n            checked={this.state.newStageStart}\n            onChange={e => {\n              this.setState({ newStageStart: e.target.checked });\n            }}\n          />\n          <button\n            onClick={() => {\n              methods.addStage(topic.id, this.state.newStageStart);\n            }}\n          >\n            +\n          </button>\n        </div>\n        {stagesItems}\n        <br />\n        {stageView}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class AddTopic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graduation: props.stat.grads[0].name,\n      name: \"\",\n      isFin: false,\n      isStart: false\n    };\n  }\n\n  render() {\n    const { graduation, name, isFin, isStart } = this.state;\n    const { stat, methods } = this.props;\n    const { grads } = stat;\n    const optItems = grads.map(grad => (\n      <option value={grad.name} key={grad.name}>\n        {grad.name}\n      </option>\n    ));\n\n    return (\n      <div>\n        <input\n          value={name}\n          onChange={e => {\n            this.setState({ name: e.target.value });\n          }}\n        />\n        <select\n          value={graduation}\n          onChange={e => {\n            this.setState({ graduation: e.target.value });\n          }}\n        >\n          {optItems}\n        </select>\n        Start:\n        <input\n          type=\"checkbox\"\n          checked={isStart}\n          onChange={e => {\n            this.setState({ isStart: e.target.checked });\n          }}\n        />\n        Final:\n        <input\n          type=\"checkbox\"\n          checked={isFin}\n          onChange={e => {\n            this.setState({ isFin: e.target.checked });\n          }}\n        />\n        <button\n          onClick={() => {\n            methods.addTopic(name, graduation, isFin, isStart);\n          }}\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport locE from \"../../game/loc_example\";\n//import locE from \"./../../game/loc_example\";\nimport TopicItem from \"./Topics/TopicItem\";\nimport Topic from \"./Topics/Topic\";\nimport AddTopic from \"./Topics/AddTopic\";\nimport exportFromJSON from \"export-from-json\";\nimport mlpaState from \"../../mlpa_state\";\n\nexport default class Editor extends React.Component {\n  constructor() {\n    super();\n    this.myStorage = window.localStorage;\n    this.loc = {};\n    this.import(true);\n    const { topicId, stageId } = this.getTopStag();\n    this.state = { currentTopic: topicId, currentStage: stageId };\n  }\n\n  import(firstTime) {\n    this.loc = locE;\n\n    this.loc.ssign({ ...mlpaState });\n    if (!firstTime) this.forceUpdate();\n  }\n\n  getTopStag() {\n    const topicId = this.loc.topics[0] ? this.loc.topics[0].id : null;\n    const stageId = this.loc._getStages(topicId)[0]\n      ? this.loc._getStages(topicId)[0].id\n      : null;\n    return { topicId, stageId };\n  }\n\n  exportFile() {\n    const data = this.loc;\n    const fileName = \"mlpa_state\";\n    const exportType = \"json\";\n\n    exportFromJSON({ data, fileName, exportType });\n  }\n\n  addTopic = (name, gradName, isFin, isStart) => {\n    this.loc.cTopic(name, gradName, isFin, isStart);\n    this.forceUpdate();\n  };\n\n  addStage = (topicId, isStart) => {\n    const intro = this.loc.cStuff(\n      { isIntro: true },\n      this.loc.cPhrase(\"introSpace\"),\n      this.loc.cPhrase(\"introGenSpace\", true)\n    );\n\n    const space = this.loc.cStuff({ isA: true }, this.loc.cPhrase(\"space\"));\n\n    const stuffs = isStart ? [intro, space] : [space];\n\n    this.loc.addStages(topicId, this.loc.cStage(isStart, ...stuffs));\n    this.forceUpdate();\n  };\n  updateStage = (id, isStart) => {\n    const stage = this.loc.stages.find(s => s.id === id);\n    stage.isStart = isStart;\n    this.forceUpdate();\n  };\n  updateTopic = (topicId, name, gradNames, isFin, isStart) => {\n    const topic = this.loc._getTopic(topicId);\n    topic.name = name;\n    topic.gradNames = gradNames;\n    topic.isFin = isFin;\n    topic.isStart = isStart;\n    this.forceUpdate();\n  };\n  updateTopicGrads = (id, gradName, isDelete = false) => {\n    const topic = this.loc._getTopic(id)\n    if(isDelete){\n      const index = topic.gradNames.findIndex(g => g === gradName)\n      topic.gradNames.splice(index, 1)\n    }\n    else {\n      topic.gradNames.push(gradName)\n    }\n    this.forceUpdate();\n  }\n  addPhrase = (stuffId, range, text, isGeneral) => {\n    this.loc.addPhrases(stuffId, [this.loc.cPhrase(text, isGeneral, range)]);\n    this.forceUpdate();\n  };\n\n  updatePhrase = (stuffId, range, id, newText) => {\n    const phrase = this.loc.phrases.find(p => p.id === id);\n    if (phrase) {\n      phrase.text = newText;\n      if (!newText && !phrase.isGeneral && phrase.rangeName)\n        this.removePhrase(phrase.id);\n    } else {\n      this.addPhrase(stuffId, range, newText);\n    }\n    this.forceUpdate();\n  };\n\n  addStuff = (stageId, isA, nextStageId, changes = []) => {\n    const newStaff = this.loc.cStuff(\n      {\n        isA,\n        id: nextStageId\n      },\n      this.loc.cPhrase(\"space\"),\n      this.loc.cPhrase(\"generalSpace\", true)\n    );\n\n    this.loc.addStuffs(stageId, newStaff);\n\n    this.forceUpdate();\n  };\n  updateStuff = (id, nextStageId, ...changes) => {\n    const stuff = this.loc.stuffs.find(s => s.id === id);\n    stuff.next_stage_id = nextStageId;\n    changes.forEach(change => {\n      const changeIndex = stuff.changes.findIndex(\n        c => c.paramName === change.paramName\n      );\n      const thisStuffCh = stuff.changes[changeIndex];\n\n      const changeTerm = change.term;\n\n      if (!thisStuffCh) {\n        stuff.changes.push(this.loc.cChange(change.paramName, changeTerm));\n      } else {\n        if (changeTerm) thisStuffCh.term = changeTerm;\n        else stuff.changes.splice(changeIndex, 1);\n        console.log(thisStuffCh);\n      }\n    });\n    this.forceUpdate();\n  };\n\n  removeTopic = id => {\n    const index = this.loc.topics.findIndex(t => t.id === id);\n    this.loc.topics.splice(index, 1);\n    const stages = this.loc._getStages(id);\n    stages.forEach(s => {\n      this.removeStage(s.id);\n    });\n\n    this.setState({ currentTopic: null, currentStage: null });\n    this.forceUpdate();\n  };\n  removeStage = id => {\n    const index = this.loc.stages.findIndex(s => s.id === id);\n    this.loc.stages.splice(index, 1);\n    const stuffs = this.loc._getStuffs(id);\n    stuffs.forEach(s => {\n      if (s.next_stage_id === id) {\n        s.next_stage_id = null;\n      }\n      this.removeStuff(s.id);\n    });\n    this.setState({ currentStage: null });\n    this.forceUpdate();\n  };\n  removeStuff = id => {\n    const index = this.loc.stuffs.findIndex(s => s.id === id);\n    this.loc.stuffs.splice(index, 1);\n    const phrases = this.loc._getPhrases(id);\n    phrases.forEach(p => {\n      this.removePhrase(p.id);\n    });\n    this.forceUpdate();\n  };\n  removePhrase = id => {\n    const index = this.loc.phrases.findIndex(p => p.id === id);\n    this.loc.phrases.splice(index, 1);\n    this.forceUpdate();\n  };\n\n  click = id => {\n    const firstStage = this.loc._getStages(id)[0];\n    if (firstStage) this.changeStage(firstStage.id);\n    else this.setState({ currentTopic: id, currentStage: null });\n    this.forceUpdate();\n  };\n  changeStage = id => {\n    const stage = this.loc.stages.find(s => s.id === id);\n    if (stage) {\n      this.setState({ currentTopic: stage.topic_id, currentStage: id });\n    }\n\n    this.forceUpdate();\n  };\n\n  render() {\n    const { topics, grads, params, ranges } = this.loc;\n    const stat = {\n      grads,\n      params,\n      ranges\n    };\n\n    const { currentStage, currentTopic } = this.state;\n\n    const methods = {\n      addTopic: this.addTopic,\n      addStage: this.addStage,\n      updateStage: this.updateStage,\n      updateTopic: this.updateTopic,\n      updateTopicGrads: this.updateTopicGrads,\n      removeTopic: this.removeTopic,\n      removeStage: this.removeStage,\n      updateStuff: this.updateStuff,\n      removeStuff: this.removeStuff,\n      getStages: this.loc._getStages,\n      getStuffs: this.loc._getStuffs,\n      getPhrases: this.loc._getPhrases,\n      addStuff: this.addStuff,\n      updatePhrase: this.updatePhrase,\n      addPhrase: this.addPhrase,\n      removePhrase: this.removePhrase,\n      getParam: this.loc._getParam,\n      checkStageFinal: this.loc.checkStageFinal\n    };\n\n    const topicItems = topics.map(topic => {\n      const isSelect = topic.id === currentTopic;\n      return (\n        <TopicItem\n          key={topic.id}\n          topic={topic}\n          methods={methods}\n          isSelect={isSelect}\n          click={this.click}\n        />\n      );\n    });\n\n    const topicView = currentTopic ? (\n      <Topic\n        allTopics={this.loc.topics}\n        allStages={this.loc.stages}\n        currentStage={currentStage}\n        topic={topics.find(topic => topic.id === this.state.currentTopic)}\n        stat={stat}\n        methods={methods}\n        goTopic={this.click}\n        click={this.changeStage}\n        changeStage={this.changeStage}\n      />\n    ) : null;\n\n    console.log(this.loc);\n    return (\n      <div>\n        <button onClick={() => this.import()}>import</button>\n        <button onClick={() => this.exportFile()}>export</button>\n        <br />\n        <AddTopic methods={methods} stat={stat} />\n        {topicItems}\n        {topicView}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Game from \"./components/Game/Game\";\nimport Editor from \"./components/Editor/Editor\";\n\nfunction App() {\n  return (\n    <div>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}