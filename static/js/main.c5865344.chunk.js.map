{"version":3,"sources":["mlpa_engine/graduation.js","mlpa_engine/parameter.js","mlpa_engine/phrase.js","mlpa_engine/range.js","mlpa_engine/stage.js","mlpa_engine/stuff.js","mlpa_engine/topic.js","mlpa_engine/change.js","mlpa_engine/interf.js","game/loc_example.js","mlpa_engine/loc.js","game/parameters.js","game/ranges.js","game/grads.js","components/Game/ReplicI/ReplicI.js","components/Game/AnswerI/AnswerI.js","components/Game/Params.js","components/Game/UI.js","components/Editor/Topics/TopicItem.js","components/Editor/Stages/StageItem.js","components/Editor/Stuffs/StuffItem.js","components/Editor/Ranges/RangeItem.js","components/Editor/Stuffs/AddStuff.js","components/Editor/Stages/Stage.js","components/Editor/Topics/Topic.js","components/Editor/Topics/AddTopic.js","components/Editor/Editor.js","App.js","serviceWorker.js","index.js"],"names":["Graduation","name","rangesNames","this","Parameter","value","isAchiev","Phrase","rangeName","text","isGeneral","id","stuff_id","Range","paramName","min","max","Stage","isStart","isBeen","topic_id","Stuff","next_stage_id","changes","isA","stage_id","Topic","graduation","isFin","Change","term","Interf","generalPhrase","phrase","locE","params","ranges","grads","topics","stuffs","stages","phrases","lim","addStages","topicId","_getTopic","newStages","map","stage","concat","console","error","_getStages","filter","_getStuffs","stageId","stuff","_getPhrases","stuffId","_getParam","find","param","checkStageFinal","s","checkGrad","gradName","_getGrad","rName","_getRange","key","forEach","range","checkRange","idState","getId","type","getStartId","startTopic","topic","startStage","calcStuff","_editParams","getGeneralPhrase","getCorrectPhrase","neutralPhrase","i","checkAnswToGrad","nextStage","getInterfaceStage","replicStuff","replic","answers","ssign","data","k","addTopics","addStuffs","props","nextStageId","addPhrases","c","newStuffs","newPhrases","phraseId","grad","change","newValue","answersAll","correctNeutAchiev","correctFinal","incrrectNeutral","r","p","correct","push","slice","addParams","cParam","addRanges","cRange","addGrads","cGrad","ReplicI","style","backgroundColor","isPlayerReplic","className","React","Component","AnswerI","answer","updateStage","onClick","Params","g","edit","correctGradsItems","correctGrads","paramItems","disabled","checked","display","height","width","UI","loc","mlpaState","defaultParams","currentStage","state","prevAnswer","newStageId","newPrevAnswer","setState","currentInterface","answersItems","cChange","forceUpdate","TopicItem","isSelect","click","margin","padding","cursor","color","border","StageItem","stuffText","isFinal","methods","StuffItem","allStages","currentTopic","viewAchievs","stat","goStage","allTopics","getPhrases","changesItems","inputElem","onChange","e","updateStuff","Boolean","target","Number","marginRight","paddingTop","paddingBottom","linkItems","getStages","unshift","linkThemesItems","t","next","newCurrTopic","topicStages","length","removeButton","removeStuff","viewBox","updatePhrase","RangeItem","AddStuff","addStuff","currentRange","acheivs","pAnswers","changeStage","getStuffs","splitStuffs","stuffsItems","shift","generStuff","noRanges","rangesItems","getParam","align","removeStage","nextStuff","nextPhrase","newStageStart","stagesItems","optItems","curStage","stageView","updateTopic","removeTopic","marginLeft","addStage","AddTopic","addTopic","App","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"ipuCAAqBA,EACnB,WAAYC,EAAMC,GAAc,oBAC9BC,KAAKF,KAAOA,EACZE,KAAKD,YAAcA,GCHFE,EACnB,WAAYH,EAAMI,GAA0B,IAAnBC,EAAkB,4EACzCH,KAAKF,KAAOA,EACZE,KAAKE,MAAQA,EACbF,KAAKG,SAAWA,GCJCC,EACnB,WAAYC,EAAWC,EAAMC,EAAWC,GAAK,yBAM7CC,SAAW,KALTT,KAAKK,UAAYA,EACjBL,KAAKM,KAAOA,EACZN,KAAKO,UAAYA,EACjBP,KAAKQ,GAAKA,GCLOE,EACnB,WAAYZ,EAAMa,EAAWC,EAAKC,GAAM,oBACtCb,KAAKF,KAAOA,EACZE,KAAKW,UAAYA,EACjBX,KAAKY,IAAMA,EACXZ,KAAKa,IAAMA,GCLMC,EACnB,WAAYC,EAASP,GAAK,yBAI1BQ,QAAS,EAJgB,KAKzBC,SAAW,KAJTjB,KAAKQ,GAAKA,EACVR,KAAKe,QAAUA,GCHEG,EACnB,WAAYC,GAA+C,IAAhCC,EAA+B,uDAArB,GAAIC,EAAiB,wDAAJb,EAAI,gEAM1Dc,SAAW,KALTtB,KAAKmB,cAAgBA,EACrBnB,KAAKoB,QAAUA,EACfpB,KAAKqB,IAAMA,EACXrB,KAAKQ,GAAKA,GCLOe,EACnB,WAAYzB,EAAM0B,EAAYC,EAAOV,EAASP,GAAK,oBACjDR,KAAKF,KAAOA,EACZE,KAAKwB,WAAaA,EAClBxB,KAAKyB,MAAQA,EACbzB,KAAKe,QAAUA,EACff,KAAKQ,GAAKA,GCNOkB,EACnB,WAAYf,EAAWgB,GAAO,oBAC5B3B,KAAKW,UAAYA,EACjBX,KAAK2B,KAAOA,GCHKC,EACnB,WAAYC,EAAeC,EAAQtB,GAAK,oBACtCR,KAAK6B,cAAgBA,EACrB7B,KAAK8B,OAASA,EACd9B,KAAKQ,GAAKA,G,OC2BRuB,EAAO,I,4DCpBXC,OAAS,G,KACTC,OAAS,G,KACTC,MAAQ,G,KACRC,OAAS,G,KAETC,OAAS,G,KACTC,OAAS,G,KACTC,QAAU,G,KAEVC,IAAM,G,KAuCNC,UAAY,SAACC,GACX,GAAI,EAAKC,UAAUD,GAAU,CAAC,IAAD,uBADNJ,EACM,iCADNA,EACM,kBAC3B,IAAMM,EAAYN,EAAOO,KAAI,SAAAC,GAC3B,OAAO,eAAKA,EAAZ,CAAmB5B,SAAUwB,OAE/B,EAAKJ,OAAS,EAAKA,OAAOS,OAAOH,QAC5BI,QAAQC,MAAR,gBAAuBP,EAAvB,iB,KA0CTQ,WAAa,SAAAR,GACX,OAAO,EAAKJ,OAAOa,QAAO,SAAAL,GAAK,OAAIA,EAAM5B,WAAawB,M,KAGxDU,WAAa,SAAAC,GACX,OAAO,EAAKhB,OAAOc,QAAO,SAAAG,GAAK,OAAIA,EAAM/B,WAAa8B,M,KAGxDE,YAAc,SAAAC,GACZ,OAAO,EAAKjB,QAAQY,QAAO,SAAApB,GAAM,OAAIA,EAAOrB,WAAa8C,M,KAG3DC,UAAY,SAAA1D,GACV,OAAO,EAAKkC,OAAOyB,MAAK,SAAAC,GAAK,OAAIA,EAAM5D,OAASA,M,KA4BlD6D,gBAAkB,SAAAP,GAEhB,OADe,EAAKD,WAAWC,GAChBK,MAAK,SAAAG,GAAC,OAAKA,EAAEvC,Q,KAY9BwC,UAAY,SAAAC,GACV,IACM7B,EADO,EAAK8B,SAASD,GACP/D,YAAY6C,KAAI,SAAAoB,GAAK,OAAI,EAAKC,UAAUD,MACtDhC,EAAS,GAMf,IAAK,IAAIkC,KALTjC,EAAOkC,SAAQ,SAAAC,GACRpC,EAAOoC,EAAMzD,aAChBqB,EAAOoC,EAAMzD,WAAa,EAAK0D,WAAWD,EAAMtE,UAGpCkC,EACd,IAAKA,EAAOkC,GAAM,OAAO,EAE3B,OAAO,G,KAGTI,QAAU,G,KACVC,MAAQ,SAAAC,GAGN,OAFK,EAAKF,QAAQE,KAAO,EAAKF,QAAQE,GAAQ,GAC9C,EAAKF,QAAQE,KACN,EAAKF,QAAQE,I,KAGtBC,WAAa,WACX,IAAMC,EAAa,EAAKvC,OAAOsB,MAAK,SAAAkB,GAAK,OAAIA,EAAM5D,WAE7C6D,EADS,EAAK3B,WAAWyB,EAAWlE,IAChBiD,MAAK,SAAAZ,GAAK,OAAIA,EAAM9B,WAC9C,OAAO6D,EAAaA,EAAWpE,GAAK,M,KAGtCqE,UAAY,SAAAtB,GACV,IAAMF,EAAQ,EAAKjB,OAAOqB,MAAK,SAAAG,GAAC,OAAIA,EAAEpD,KAAO+C,KAG7C,OADA,EAAKuB,YAAYzB,EAAMjC,SAChBiC,EAAMlC,e,KAGf4D,iBAAmB,SAAAxB,GACjB,IAAMF,EAAQ,EAAKjB,OAAOqB,MAAK,SAAAG,GAAC,OAAIA,EAAEpD,KAAO+C,KAEvC1B,EADU,EAAKyB,YAAYD,EAAM7C,IACTiD,MAAK,SAAA3B,GAAM,OAAIA,EAAOvB,aACpD,cAAOsB,QAAP,IAAOA,OAAP,EAAOA,EAAevB,M,KAGxB0E,iBAAmB,SAAAzB,GACjB,IAAMF,EAAQ,EAAKjB,OAAOqB,MAAK,SAAAG,GAAC,OAAIA,EAAEpD,KAAO+C,KACvCjB,EAAU,EAAKgB,YAAYD,EAAM7C,IACjCyE,EAAgB3C,EAAQmB,MAAK,SAAA3B,GAAM,OAAKA,EAAOzB,aACrD,IAAK,IAAI6E,KAAK5C,EAAS,CACrB,IAAMR,EAASQ,EAAQ4C,GACvB,GAAIpD,EAAOzB,WAAa,EAAKgE,WAAWvC,EAAOzB,WAC7C,OAAOyB,EAAOxB,KAGlB,OAAO2E,EAAc3E,M,KAoDvB6E,gBAAkB,SAAA9B,GAChB,IAAM+B,EAAY,EAAK/C,OAAOoB,MAC5B,SAAAZ,GAAK,OAAIA,EAAMrC,KAAO6C,EAAMlC,iBAExBwD,EAAQ,EAAKjC,UAAU0C,EAAUnE,UACvC,OAAO,EAAK4C,UAAUc,EAAMnD,a,KAI9B6D,kBAAoB,SAAA7E,GAGJ,EAAK6B,OAAOoB,MAAK,SAAAG,GAAC,OAAIA,EAAEpD,KAAOA,KACvCQ,QAAS,EAEf,IAAMoB,EAAS,EAAKe,WAAW3C,GAEzB8E,EAAclD,EAAOqB,MAAK,SAAAJ,GAAK,OAAIA,EAAMhC,OACzCkE,EAAS,IAAI3D,EAAO,KAAM,EAAKoD,iBAAiBM,EAAY9E,KAqBlE,MAXe,CACbgF,QARiBpD,EAAOc,QAAO,SAAAG,GAC/B,OAAQA,EAAMhC,OAOMuB,KAAI,SAAAS,GACtB,OAAO,IAAIzB,EACT,EAAKmD,iBAAiB1B,EAAM7C,IAC5B,EAAKwE,iBAAiB3B,EAAM7C,IAC5B6C,EAAM7C,OAGV+E,W,KAMJE,MAAQ,SAAAC,GAAS,IAAD,WACLxB,GACF,CAAC,SAAU,QAAS,UAAUT,MAAK,SAAAkC,GAAC,OAAIA,IAAMzB,OACjD,EAAKA,GAAOwB,EAAKxB,KAFrB,IAAK,IAAIA,KAAOwB,EAAO,EAAdxB,I,mDAhSJpE,EAAMI,EAAOC,GAClB,OAAO,IAAIF,EAAUH,EAAMI,EAAOC,K,kCAEd,IAAD,uBAAR6B,EAAQ,yBAARA,EAAQ,gBACnBhC,KAAKgC,OAAShC,KAAKgC,OAAOc,OAAOd,K,6BAG5BlC,EAAMc,EAAKC,EAAKF,GACrB,OAAO,IAAID,EAAMZ,EAAMa,EAAWC,EAAKC,K,kCAEnB,IAAD,uBAARoB,EAAQ,yBAARA,EAAQ,gBACnBjC,KAAKiC,OAASjC,KAAKiC,OAAOa,OAAOb,K,4BAG7BnC,GAAuB,IAAD,uBAAbC,EAAa,iCAAbA,EAAa,kBAC1B,OAAO,IAAIF,EAAWC,EAAMC,K,iCAEV,IAAD,uBAAPmC,EAAO,yBAAPA,EAAO,gBACjBlC,KAAKkC,MAAQlC,KAAKkC,MAAMY,OAAOZ,K,6BAG1BpC,EAAMgE,EAAUrC,EAAOV,GAC5B,IAAM0B,EAAUzC,KAAKuE,MAAM,UAC3BvE,KAAK4F,UAAU,IAAIrE,EAAMzB,EAAMgE,EAAUrC,EAAOV,EAAS0B,IAFT,2BAARJ,EAAQ,iCAARA,EAAQ,kBAGhDrC,KAAKwC,UAAL,MAAAxC,KAAA,CAAeyC,GAAf,OAA2BJ,M,kCAGP,IAAD,uBAARF,EAAQ,yBAARA,EAAQ,gBACnBnC,KAAKmC,OAASnC,KAAKmC,OAAOW,OAAOX,K,6BAG5BpB,GAAqB,IAC1B,IAAMqC,EAAUpD,KAAKuE,MAAM,UADD,mBAATiB,EAAS,iCAATA,EAAS,kBAG1B,OADAxF,KAAK6F,UAAL,MAAA7F,KAAA,CAAeoD,GAAf,OAA2BoC,IACpB,IAAI1E,EAAMC,EAASqC,K,6BAYrB0C,GAAmB,IAAC,IAAD,EACuBA,GAAgB,GAAnDC,EADY,EAChBvF,GADgB,IACCY,eADD,MACW,GADX,EACeC,EADf,EACeA,IACjCkC,EAAUvD,KAAKuE,MAAM,UAFH,mBAATjC,EAAS,iCAATA,EAAS,kBAKxB,OADAtC,KAAKgG,WAAWzC,EAASjB,GAClB,IAAIpB,EACT6E,EACC1E,EAAoC,GAA9BD,EAAQ8B,QAAO,SAAA+C,GAAC,OAAIA,EAAEtE,QAC7BN,EACAkC,K,gCAIMH,GAAqB,IAAD,uBAARhB,EAAQ,iCAARA,EAAQ,kBAC5B,IAAM8D,EAAY9D,EAAOQ,KAAI,SAAAS,GAAK,sBAAUA,EAAV,CAAiB/B,SAAU8B,OAC7DpD,KAAKoC,OAASpC,KAAKoC,OAAOU,OAAOoD,K,iCAGxB3C,EAASjB,GAClB,IAAM6D,EAAa7D,EAAQM,KAAI,SAAAd,GAAM,sBAChCA,EADgC,CAEnCrB,SAAU8C,OAGZvD,KAAKsC,QAAUtC,KAAKsC,QAAQQ,OAAOqD,K,8BAG7B7F,GAAqC,IAA/BC,EAA8B,wDAAXF,EAAW,uCACpC+F,EAAWpG,KAAKuE,MAAM,WAC5B,OAAO,IAAInE,EAAOC,EAAWC,EAAMC,EAAW6F,K,8BAGxCzF,EAAWgB,GACjB,OAAO,IAAID,EAAOf,EAAWgB,K,gCAGrBnB,GACR,OAAOR,KAAKmC,OAAOsB,MAAK,SAAAkB,GAAK,OAAIA,EAAMnE,KAAOA,O,gCAkBtCV,GACR,OAAOE,KAAKiC,OAAOwB,MAAK,SAAAW,GAAK,OAAIA,EAAMtE,OAASA,O,+BAGzCA,GACP,OAAOE,KAAKkC,MAAMuB,MAAK,SAAA4C,GAAI,OAAIA,EAAKvG,OAASA,O,kCAGnCsB,GAAU,IAAD,OACnBA,EAAQ+C,SAAQ,SAAAmC,GACd,IAAM5C,EAAQ,EAAKF,UAAU8C,EAAO3F,WAEpC,GAAI+C,EAAMvD,SACRuD,EAAMxD,OAAQ,MACT,CACL,IAAMqG,EAAW7C,EAAMxD,MAAQoG,EAAO3E,KAClC4E,EAAW,EAAKhE,IAClBmB,EAAMxD,MAAQ,EAAKqC,IAEnBmB,EAAMxD,MADGqG,EAAW,EACN,EACKA,Q,iCAUhBlG,GACT,IAAM+D,EAAQpE,KAAKiE,UAAU5D,GACvBqD,EAAQ1D,KAAKwD,UAAUY,EAAMzD,WAInC,OAHY+C,EAAMvD,SACduD,EAAMxD,QAAUkE,EAAMvD,IACtB6C,EAAMxD,OAASkE,EAAMxD,KAAO8C,EAAMxD,OAASkE,EAAMvD,M,wCA4DrCL,GAAK,IAAD,OAMdgG,EAHSxG,KAAKmD,WAAW3C,GAGL0C,QAAO,SAAAG,GAC/B,OAAIA,EAAMhC,MAEM,EAAKgB,OAAOoB,MAAK,SAAAG,GAAC,OAAIA,EAAEpD,KAAO6C,EAAMlC,iBACrCH,UAIZyF,EAAoB,GACpBC,EAAe,GACfC,EAAkB,GA8BxB,OA5BAH,EAAWrC,SAAQ,SAAAd,GACjB,IAAM+B,EAAY,EAAK/C,OAAOoB,MAC5B,SAAAZ,GAAK,OAAIA,EAAMrC,KAAO6C,EAAMlC,iBAExBwD,EAAQ,EAAKjC,UAAU0C,EAAUnE,UACjCoF,EAAO,EAAKtC,SAASY,EAAMnD,YAI3BrB,EAHSkG,EAAKtG,aAAY,SAAAiE,GAAK,OAAI,EAAKC,UAAUD,MAClCjE,aAAY,SAAA6G,GAAC,OAAI,EAAKpD,UAAUoD,EAAEjG,cAEhC8C,MAAK,SAAAoD,GAAC,OAAIA,EAAE1G,YAC9B2G,EAAU,EAAKjD,UAAUwC,EAAKvG,MAC5B2B,EAAUkD,EAAVlD,MAEJqF,EAGGrF,EAEAiF,EAAaK,KAAK1D,GAFXoD,EAAkBM,KAAK1D,GAGzBlD,GAAasB,GAEvBkF,EAAgBI,KAAK1D,MAINoD,EAAkB3D,OAAO6D,GAGxBK,MAAM,EA5CR,O,MD5LtBjF,EAAKkF,UACHlF,EAAKmF,OEjC4B,yDFiCA,GACjCnF,EAAKmF,OEjC0B,mGFiCA,GAE/BnF,EAAKmF,OEjCkB,0FFiCA,GAAO,IAGhCnF,EAAKoF,UACHpF,EAAKqF,OGxCoB,uCHwCA,EAAG,EEvCG,oGFwC/BrF,EAAKqF,OGxCsB,iFHwCA,EAAG,GExCC,oGFyC/BrF,EAAKqF,OGxCwB,2EHwCA,GAAI,GEzCF,oGF2C/BrF,EAAKqF,OGxCqB,uCHwCA,EAAG,EE5CI,0DF6CjCrF,EAAKqF,OGxC0B,iFHwCA,EAAG,GE7CD,0DF8CjCrF,EAAKqF,OGxCyB,qEHwCA,GAAI,GE9CD,0DFgDjCrF,EAAKqF,OGxCkB,0FHwCA,GAAM,EE7CN,2FF+CzBrF,EAAKsF,SACHtF,EAAKuF,MInDqB,8CDAD,uCAIC,wCHgD1BvF,EAAKuF,MInDqB,8CDDD,uCAKM,kFHgD/BvF,EAAKuF,MInDqB,kCDFD,uCAMK,sEHiD9BvF,EAAKuF,MInDqB,oDDHC,iFAGD,wCHoD1BvF,EAAKuF,MInDqB,oDDJC,iFAII,kFHoD/BvF,EAAKuF,MInDqB,wCDLC,iFAKG,sEHqD9BvF,EAAKuF,MInDsB,oDDNE,2EAEH,wCHwD1BvF,EAAKuF,MInDsB,oDDPE,2EAGE,kFHwD/BvF,EAAKuF,MInDsB,wCDRE,2EAIC,sEHyD9BvF,EAAKuF,MInDiB,yFDJC,2FH0DVvF,Q,OK/DMwF,G,uLACT,IAAD,EAC4BvH,KAAK8F,MAAhCP,EADD,EACCA,OACFiC,EAAQ,CACZC,gBAHK,EACSC,eAEoB,UAAY,SAEhD,OACE,yBAAKC,UAAU,UAAUH,MAAOA,GAC7BjC,EAAOzD,Y,GARqB8F,IAAMC,YCAtBC,G,uLACT,IAAD,EACyB9H,KAAK8F,MAA7BiC,EADD,EACCA,OAAQC,EADT,EACSA,YAEhB,OACE,yBACEL,UAAU,SACVM,QAAS,WACPD,MAGDD,EAAOlG,mB,GAXqB+F,IAAMC,YCDtBK,E,uLAMH,IAAD,EACgBlI,KAAK8F,MAA1B5D,EADK,EACLA,MAAO2B,EADF,EACEA,UAGf,OAFkB3B,EAAMgB,QAAO,SAAAiF,GAAC,OAAItE,EAAUsE,EAAErI,W,+BAIxC,IAAD,EACuBE,KAAK8F,MAA3B9D,EADD,EACCA,OAAQO,EADT,EACSA,IAAK6F,EADd,EACcA,KAGfC,EADerI,KAAKsI,eACa1F,KAAI,SAAAuF,GAAC,OAC1C,yBAAKjE,IAAKiE,EAAErI,MAAOqI,EAAErI,SAGjByI,EAAavG,EAAOY,KAAI,SAAAc,GAC5B,OAAOA,EAAMvD,SACX,yBAAK+D,IAAKR,EAAM5D,MACd,2BAAO0E,KAAK,WAAWgE,UAAQ,EAACC,QAAS/E,EAAMxD,QADjD,IAC4DwD,EAAM5D,MAGlE,yBAAKoE,IAAKR,EAAM5D,MACd,6BACE,4BACEmI,QAAS,WACPG,EAAK1E,EAAM5D,MAAO,KAFtB,KAOA,yBACE0H,MAAO,CACLkB,QAAS,eACTC,OAAQ,OACRC,MAAM,GAAD,OAAmB,GAAdlF,EAAMxD,MAAX,MACLuH,gBAAiB,SAGrB,yBACED,MAAO,CACLkB,QAAS,eACTC,OAAQ,OACRC,MAAM,GAAD,OAA2B,IAArBrG,EAAMmB,EAAMxD,OAAlB,MACLuH,gBAAiB,UAIrB,4BACEQ,QAAS,WACPG,EAAK1E,EAAM5D,KAAM,KAFrB,KAOC4D,EAAM5D,UAMf,OACE,6BACGyI,EACAF,O,GApE2BT,IAAMC,WCKrBgB,E,YACnB,aAAe,IAAD,uBACZ,+CACKC,IAAM/G,EACX,EAAK+G,IAAIrD,MAAMsD,GACf,EAAKC,gBACL,IAAMC,EAAe,EAAKH,IAAIrE,aALlB,OAMZ,EAAKyE,MAAQ,CACXD,eACAE,WAAY,6DARF,E,6EAaZnJ,KAAK8I,IAAI9G,OAAOmC,SAAQ,SAAA0C,GACjBA,EAAE1G,WAAU0G,EAAE3G,MAAQ,Q,kCAInBqD,GACV,IAAM6F,EAAapJ,KAAK8I,IAAIjE,UAAUtB,GAChC8F,EAAgBrJ,KAAK8I,IAAI9D,iBAAiBzB,GAChDvD,KAAKsJ,SAAS,CAAEL,aAAcG,EAAYD,WAAYE,M,+BAG9C,IAAD,SAC8BrJ,KAAKkJ,MAAlCD,EADD,EACCA,aAAcE,EADf,EACeA,WAChBI,EAAmBvJ,KAAK8I,IAAIzD,kBAAkB4D,GAE5CzD,EAAoB+D,EAApB/D,QAASD,EAAWgE,EAAXhE,OACXiE,EAAehE,EAAQ5C,KAAI,SAAAmF,GAC/B,OACE,kBAAC,EAAD,CACE7D,IAAK6D,EAAOvH,GACZuH,OAAQA,EACRC,YAAa,WACX,EAAKA,YAAYD,EAAOvH,UAMhC,OACE,6BACE,kBAAC,EAAD,CACEwB,OAAQhC,KAAK8I,IAAI9G,OACjBO,IAAKvC,KAAK8I,IAAIvG,IACd6F,KAAM,SAACzH,EAAWgB,GAChB,EAAKmH,IAAIhE,YAAY,CAAC,EAAKgE,IAAIW,QAAQ9I,EAAWgB,KAClD,EAAK+H,eAEPxH,MAAOlC,KAAK8I,IAAI5G,MAChB2B,UAAW7D,KAAK8I,IAAIjF,YAEtB,kBAAC,EAAD,CAAS0B,OAAQ,CAAEzD,OAAQqH,GAAczB,gBAAgB,IACzD,kBAAC,EAAD,CAASnC,OAAQA,IAChBiE,O,GAxDuB5B,IAAMC,WCLjB8B,E,iLACT,IAAD,EAC4B3J,KAAK8F,MAAhCnB,EADD,EACCA,MAAOiF,EADR,EACQA,SAAUC,EADlB,EACkBA,MAQnBrC,EAAQ,CACZC,gBAAiBmC,EAAW,QAAU,OACtClB,QAAS,eACToB,OAAQ,SACRC,QAAS,SACTC,OAAQ,UACRC,MAAO,QACPC,OAbavF,EAAM5D,QACjB,mBACA4D,EAAMlD,MACN,oBACA,QAWJ,OACE,yBACE+F,MAAOA,EACPS,QAAS,WACP4B,EAAMlF,EAAMnE,MAGbmE,EAAM7E,U,GA1BwB8H,IAAMC,WCAxBsC,E,iLACT,IAAD,EACgDnK,KAAK8F,MAApDjD,EADD,EACCA,MAAOgH,EADR,EACQA,MAAOD,EADf,EACeA,SAAUQ,EADzB,EACyBA,UAE1BC,EAHC,EACoCC,QAEnB3G,gBAAgBd,EAAMrC,IAOxCgH,EAAQ,CACZC,gBAAiBmC,EAAW,OAAS,OACrCI,OAAQ,UACRtB,QAAS,eACToB,OAAQ,SACRC,QAAS,SACTE,MAAO,QACPC,OAbarH,EAAM9B,QACjB,mBACAsJ,EACA,oBACA,QAWJ,OACE,yBACEpC,QAAS,WACP4B,EAAMhH,EAAMrC,KAEdgH,MAAOA,GAEN4C,EAAUvH,EAAMrC,S,GA3BcoH,IAAMC,W,QCAxB0C,E,YACnB,WAAYzE,GAAQ,IAAD,sBACjB,4CAAMA,IAEN,IAAMV,EAAYU,EAAM0E,UAAU/G,MAChC,SAAAG,GAAC,OAAIA,EAAEpD,KAAOsF,EAAMzC,MAAMlC,iBAEtBsJ,EAAY,OAAGrF,QAAH,IAAGA,OAAH,EAAGA,EAAWnE,SANf,OAQjB,EAAKiI,MAAQ,CACXuB,eACAC,aAAa,GAVE,E,sEAaT,IAAD,SAUH1K,KAAK8F,MARPzC,EAFK,EAELA,MACAiH,EAHK,EAGLA,QACAlG,EAJK,EAILA,MACAuG,EALK,EAKLA,KACAC,EANK,EAMLA,QACAJ,EAPK,EAOLA,UACAJ,EARK,EAQLA,UACAS,EATK,EASLA,UAGI/I,EAASwI,EAAQQ,WAAWzH,EAAM7C,IAAIiD,MAAK,SAAAoD,GAC/C,OACEA,EAAExG,YAAc+D,GACL,SAAVA,IAAqByC,EAAExG,WACb,YAAV+D,GAAuByC,EAAEtG,aAItBa,EAAYiC,EAAZjC,QApBD,EAqB+BpB,KAAKkJ,MAAnCuB,EArBD,EAqBCA,aAAcC,EArBf,EAqBeA,YAEhBK,EAAgB1H,EAAMhC,IA8CxB,KA7CAsJ,EAAK3I,OAAOY,KAAI,SAAAiE,GACd,IAAMZ,EAAI7E,EAAQqC,MAAK,SAAA6C,GAAM,OAAIA,EAAO3F,YAAckG,EAAE/G,QAElD6B,EAAOsE,EAAIA,EAAEtE,MAAOkF,EAAE1G,UAAmB,EAEzC6K,EAAYnE,EAAE1G,SAClB,2BACEqE,KAAK,WACLiE,QAAS9G,EACTsJ,SAAU,SAAAC,GACRZ,EAAQa,YAAY9H,EAAM7C,GAAI6C,EAAMlC,cAAe,CACjDR,UAAWkG,EAAE/G,KACb6B,KAAMyJ,QAAQF,EAAEG,OAAO5C,cAK7B,2BACEjE,KAAK,SACLgD,MAAO,CAAEoB,MAAO,QAChB1I,MAAOyB,EACPsJ,SAAU,SAAAC,GACRZ,EAAQa,YAAY9H,EAAM7C,GAAI6C,EAAMlC,cAAe,CACjDR,UAAWkG,EAAE/G,KACb6B,KAAM2J,OAAOJ,EAAEG,OAAOnL,YAM9B,OAAKwK,GAAe7D,EAAE1G,SAAiB,KAErC,0BACEqH,MAAO,CACLkB,QAAS,eACTqB,QAAS,SACTtC,gBAAiB,UACjB8D,YAAa,UAEfrH,IAAK2C,EAAE/G,MAEN+G,EAAE/G,KATL,IASYkL,MAMdxD,EAAQ,CACZC,gBAAiBpE,EAAMhC,IAAM,UAAY,UACzC2I,OAAQ,UACRF,OAAQ,SAER0B,WAAYnI,EAAMhC,IAAM,OAAS,SACjCoK,cAAepI,EAAMhC,IAAM,OAAS,SAEpCqH,QAAS,eACTE,MAAO,OAGHtI,EAAOwB,EAASA,EAAOxB,KAAO,GAE9BoL,EAAYpB,EAAQqB,UAAU3L,KAAKkJ,MAAMuB,cAAc7H,KAAI,SAAAgB,GAC/D,OACE,4BAAQ1D,MAAO0D,EAAEpD,GAAI0D,IAAKN,EAAEpD,IACzB4J,EAAUxG,EAAEpD,QAKdgK,EAAU/G,MAAK,SAAAG,GAAC,OAAIA,EAAEpD,KAAO6C,EAAMlC,kBACtCuK,EAAUE,QACR,4BAAQ1L,MAAO,QAASgE,IAAI,KACzBb,EAAMlC,cADT,eAMJ,IAAM0K,EAAkBhB,EAAUjI,KAAI,SAAAkJ,GACpC,OACE,4BAAQ5L,MAAO4L,EAAEtL,GAAI0D,IAAK4H,EAAEtL,IACzBsL,EAAEhM,SAKHiM,EAAQ1I,EAAMhC,IA2ChB,KA1CF,yBAAKmG,MAAO,CAAEkB,QAAS,eAAgB6C,YAAa,WAClD,yBACE/D,MAAO,CACLkB,QAAS,eACTjB,gBAAiB,MACjBuC,OAAQ,UACRC,MAAO,SAEThC,QAAS,WACP2C,EAAQvH,EAAMlC,iBARlB,QAaCsJ,EAED,4BACEvK,MAAOF,KAAKkJ,MAAMuB,aAClBQ,SAAU,SAAAC,GACR,IAAMc,EAAeV,OAAOJ,EAAEG,OAAOnL,OACrC,EAAKoJ,SAAS,CAAEmB,aAAcuB,IAC9B,IAAMC,EAAc3B,EAAQqB,UAAUK,GAGpCC,EAAYC,SACXD,EAAYxI,MAAK,SAAAG,GAAC,OAAIA,EAAEpD,KAAO6C,EAAMlC,kBAEtCmJ,EAAQa,YAAY9H,EAAM7C,GAAIyL,EAAY,GAAGzL,MAGhDqL,GAGH,4BACE3L,MAAOmD,EAAMlC,cACb8J,SAAU,SAAAC,GACRZ,EAAQa,YAAY9H,EAAM7C,GAAI8K,OAAOJ,EAAEG,OAAOnL,UAG/CwL,IAKDS,EAAgB9I,EAAMhC,IAExB,KADF,4BAAQ4G,QAAS,kBAAMqC,EAAQ8B,YAAY/I,EAAM7C,MAAjD,KAGI6L,EAAUhJ,EAAMhC,IAAM,KAC1B,2BACEmD,KAAK,WACLiE,QAASiC,EACTO,SAAU,SAAAC,GACR,EAAK5B,SAAS,CAAEoB,YAAaQ,EAAEG,OAAO5C,aAK5C,OACE,6BACG0D,EACD,yBAAK3E,MAAOA,GAAZ,IACInE,EAAM7C,GADV,IACe,IACb,2BACEN,MAAOI,EACPkH,MAAO,CAAEoB,MAAO,OAChBqC,SAAU,SAAAC,GACRZ,EAAQgC,aACNjJ,EAAM7C,GACI,SAAV4D,EAAmB,KAAOA,EAC1BtC,EAASA,EAAOtB,GAAK,KACrB0K,EAAEG,OAAOnL,WAKhB6L,EACAhB,EACAsB,O,GA1M8BzE,IAAMC,WCAxB0E,E,iLACT,IAAD,EAC4BvM,KAAK8F,MAAhC1B,EADD,EACCA,MAAOwF,EADR,EACQA,SAAUC,EADlB,EACkBA,MAEnBrC,EAAQ,CACZC,gBAAiBmC,EAAW,SAAW,OACvCI,OAAQ,UACRtB,QAAS,eACToB,OAAQ,SACRC,QAAS,SACTE,MAAO,SAET,OACE,yBACEzC,MAAOA,EACPS,QAAS,WACP4B,EAAMzF,EAAMtE,QAGbsE,EAAMtE,U,GAnBwB8H,IAAMC,WCAxB2E,E,iLACT,IAAD,EAC6BxM,KAAK8F,MAAjCwE,EADD,EACCA,QAASlH,EADV,EACUA,QAASuB,EADnB,EACmBA,MAEpBoB,EAAcuE,EAAQqB,UAAUhH,EAAMnE,IAAI,GAAGA,GAEnD,OACE,6BACE,4BACEyH,QAAS,WACPqC,EAAQmC,SAASrJ,GAAS,EAAO2C,EAAa,MAFlD,U,GAR8B6B,IAAMC,WCGvB/G,E,YACnB,WAAYgF,GAAQ,IAAD,8BACjB,4CAAMA,KAIR+D,MAAQ,SAAA/J,GACN,EAAKwJ,SAAS,CAAEoD,aAAc5M,KAJ9B,EAAKoJ,MAAQ,CAAEwD,aAAc,OAAQC,SAAS,GAF7B,E,yEAQPvK,GAGV,MAAO,CAAE2F,OAFM3F,EAAOqB,MAAK,SAAAJ,GAAK,OAAIA,EAAMhC,OAEzBuL,SADAxK,EAAOc,QAAO,SAAAG,GAAK,OAAKA,EAAMhC,U,+BAGvC,IAAD,SAUHrB,KAAK8F,MARPjD,EAFK,EAELA,MACAyH,EAHK,EAGLA,QACAK,EAJK,EAILA,KACAkC,EALK,EAKLA,YACArC,EANK,EAMLA,UACAJ,EAPK,EAOLA,UACAzF,EARK,EAQLA,MACAkG,EATK,EASLA,UAGIzI,EAASkI,EAAQwC,UAAUjK,EAAMrC,IAZhC,EAcsBR,KAAK+M,YAAY3K,GAAtC2F,EAdD,EAcCA,OAAQ6E,EAdT,EAcSA,SAEVI,EAAc,CAACjF,GAAD,mBAAY6E,IAAUhK,KAAI,SAAAS,GAe5C,OAdYA,EACV,kBAAC,EAAD,CACEsH,KAAMA,EACNvG,MAAO,EAAK8E,MAAMwD,aAClBpC,QAASA,EACTpG,IAAKb,EAAM7C,GACX6C,MAAOA,EACPuH,QAASiC,EACTrC,UAAWA,EACXK,UAAWA,EACXT,UAAWA,IAEX,QAKF,YAAcpK,KAAKkJ,MAAMwD,cAC3BM,EAAYC,QAnCP,IAsCChL,EAAW0I,EAAX1I,OAEFiL,EACJ,kBAAC,EAAD,CACEtD,SAAU,YAAc5J,KAAKkJ,MAAMwD,aACnCtI,MAAO,CAAEtE,KAAM,WACf+J,MAAO7J,KAAK6J,QAIVsD,EACJ,kBAAC,EAAD,CACEvD,SAAU,SAAW5J,KAAKkJ,MAAMwD,aAChCtI,MAAO,CAAEtE,KAAM,QACf+J,MAAO7J,KAAK6J,QAIVuD,EAAcnL,EACjBiB,QAAO,SAAA0D,GACN,IAAMlD,EAAQ4G,EAAQ+C,SAASzG,EAAEjG,WACjC,OAAO,EAAKuI,MAAMyD,UAAYjJ,EAAMvD,YAErCyC,KAAI,SAAAwB,GAAK,OACR,kBAAC,EAAD,CACEwF,SAAUxF,EAAMtE,OAAS,EAAKoJ,MAAMwD,aACpCxI,IAAKE,EAAMtE,KACXsE,MAAOA,EACPyF,MAAO,EAAKA,WAIlB,OACE,6BACE,wBAAIyD,MAAM,UACPlD,EAAUvH,EAAMrC,IAAK,IACtB,4BACEyH,QAAS,WACPqC,EAAQiD,YAAY1K,EAAMrC,MAF9B,KAMU,IACV,2BACEgE,KAAK,WACLiE,QAAS5F,EAAM9B,QACfkK,SAAU,SAAAC,GACRZ,EAAQtC,YAAYnF,EAAMrC,GAAI0K,EAAEG,OAAO5C,aAI5CyE,EACAC,EACAC,EACD,2BACE5I,KAAK,WACLiE,QAASzI,KAAKkJ,MAAMyD,QACpB1B,SAAU,SAAAC,GACR,EAAK5B,SAAS,CAAEqD,QAASzB,EAAEG,OAAO5C,aAGrCuE,EACD,kBAAC,EAAD,CAAUrI,MAAOA,EAAO2F,QAASA,EAASlH,QAASP,EAAMrC,U,GAlH9BoH,IAAMC,WCDpBtG,E,YACnB,aAAe,IAAD,8BACZ,+CAGF6I,UAAY,SAAA5J,GACV,GAAIA,EAAI,CAAC,IACC8J,EAAY,EAAKxE,MAAjBwE,QAEFkD,EAAYlD,EAAQwC,UAAUtM,GAAIiD,MAAK,SAAAJ,GAAK,OAAIA,EAAMhC,OAE5D,GAAImM,EAAW,CACb,IACMC,EADcnD,EAAQQ,WAAW0C,EAAUhN,IAClBiD,MAAK,SAAAoD,GAAC,OAAKA,EAAExG,aAE5C,OAAIoN,EACI,IAAN,OAAWjN,EAAX,aAAkBiN,EAAWnN,KAAK0G,MAAM,EAAG,GAA3C,OACK,WAAWxG,EAAX,mBACF,MAAO,YAEhB,OAAO,MAjBP,EAAK0I,MAAQ,CAAEwE,eAAe,GAFlB,E,sEAqBJ,IAAD,SAUH1N,KAAK8F,MARPnB,EAFK,EAELA,MACAgG,EAHK,EAGLA,KACAL,EAJK,EAILA,QACArB,EALK,EAKLA,aACAY,EANK,EAMLA,MACAgD,EAPK,EAOLA,YACArC,EARK,EAQLA,UACAK,EATK,EASLA,UAGM3I,EAAUyI,EAAVzI,MACAV,EAAemD,EAAfnD,WAEFa,EAASiI,EAAQqB,UAAUhH,EAAMnE,IACjCmN,EAActL,EAAOO,KAAI,SAAAC,GAC7B,IAAM+G,EAAW/G,EAAMrC,KAAOyI,EAE9B,OACE,kBAAC,EAAD,CACEqB,QAASA,EACTF,UAAW,EAAKA,UAChBlG,IAAKrB,EAAMrC,GACXqC,MAAOA,EACP+G,SAAUA,EACVC,MAAOA,OAKP+D,EAAW1L,EAAMU,KAAI,SAAAyD,GACzB,OACE,4BAAQnG,MAAOmG,EAAKvG,KAAMoE,IAAKmC,EAAKvG,MACjCuG,EAAKvG,SAKN+N,EAAWxL,EAAOoB,MAAK,SAAAZ,GAAK,OAAIA,EAAMrC,KAAOyI,KAE7C6E,EAAY7E,EAChB,kBAAC,EAAD,CACEpG,MAAOgL,EACPvD,QAASA,EACTK,KAAMA,EACNH,UAAWA,EACXK,UAAWA,EACXgC,YAAaA,EACbzC,UAAWpK,KAAKoK,UAChBzF,MAAOA,IAEP,KAEJ,OACE,6BACE,wBAAI2I,MAAM,UAAV,QACQ,IACN,2BACEpN,MAAOyE,EAAM7E,KACbmL,SAAU,SAAAC,GACRZ,EAAQyD,YACNpJ,EAAMnE,GACN0K,EAAEG,OAAOnL,MACTyE,EAAMnD,WACNmD,EAAMlD,MACNkD,EAAM5D,YAVd,UAeE,4BACEb,MAAOsB,EACPyJ,SAAU,SAAAC,GACRZ,EAAQyD,YACNpJ,EAAMnE,GACNmE,EAAM7E,KACNoL,EAAEG,OAAOnL,MACTyE,EAAMlD,MACNkD,EAAM5D,WAIT6M,GA3BL,SA8BE,2BACEpJ,KAAK,WACLiE,QAAS9D,EAAM5D,QACfkK,SAAU,SAAAC,GACRZ,EAAQyD,YACNpJ,EAAMnE,GACNmE,EAAM7E,KACN6E,EAAMnD,WACNmD,EAAMlD,MACNyJ,EAAEG,OAAO5C,YAvCjB,SA4CE,2BACEjE,KAAK,WACLiE,QAAS9D,EAAMlD,MACfwJ,SAAU,SAAAC,GACRZ,EAAQyD,YACNpJ,EAAMnE,GACNmE,EAAM7E,KACN6E,EAAMnD,WACN0J,EAAEG,OAAO5C,QACT9D,EAAM5D,YAIZ,4BACEkH,QAAS,WACPqC,EAAQ0D,YAAYrJ,EAAMnE,KAE5BgH,MAAO,CAAEyG,WAAY,SAJvB,MAUF,6BACA,6BACE,2BACEzJ,KAAK,WACLiE,QAASzI,KAAKkJ,MAAMwE,cACpBzC,SAAU,SAAAC,GACR,EAAK5B,SAAS,CAAEoE,cAAexC,EAAEG,OAAO5C,aAG5C,4BACER,QAAS,WACPqC,EAAQ4D,SAASvJ,EAAMnE,GAAI,EAAK0I,MAAMwE,iBAF1C,MAQDC,EACD,6BACCG,O,GApK0BlG,IAAMC,WCFpBsG,E,YACnB,WAAYrI,GAAQ,IAAD,8BACjB,4CAAMA,KACDoD,MAAQ,CACX1H,WAAYsE,EAAM6E,KAAKzI,MAAM,GAAGpC,KAChCA,KAAM,GACN2B,OAAO,EACPV,SAAS,GANM,E,sEAUT,IAAD,SACsCf,KAAKkJ,MAA1C1H,EADD,EACCA,WAAY1B,EADb,EACaA,KAAM2B,EADnB,EACmBA,MAAOV,EAD1B,EAC0BA,QAD1B,EAEmBf,KAAK8F,MAAvB6E,EAFD,EAECA,KAAML,EAFP,EAEOA,QAERsD,EADYjD,EAAVzI,MACeU,KAAI,SAAAyD,GAAI,OAC7B,4BAAQnG,MAAOmG,EAAKvG,KAAMoE,IAAKmC,EAAKvG,MACjCuG,EAAKvG,SAIV,OACE,6BACE,2BACEI,MAAOJ,EACPmL,SAAU,SAAAC,GACR,EAAK5B,SAAS,CAAExJ,KAAMoL,EAAEG,OAAOnL,WAGnC,4BACEA,MAAOsB,EACPyJ,SAAU,SAAAC,GACR,EAAK5B,SAAS,CAAE9H,WAAY0J,EAAEG,OAAOnL,UAGtC0N,GAbL,SAgBE,2BACEpJ,KAAK,WACLiE,QAAS1H,EACTkK,SAAU,SAAAC,GACR,EAAK5B,SAAS,CAAEvI,QAASmK,EAAEG,OAAO5C,aApBxC,SAwBE,2BACEjE,KAAK,WACLiE,QAAShH,EACTwJ,SAAU,SAAAC,GACR,EAAK5B,SAAS,CAAE7H,MAAOyJ,EAAEG,OAAO5C,aAGpC,4BACER,QAAS,WACPqC,EAAQ8D,SAAStO,EAAM0B,EAAYC,EAAOV,KAF9C,U,GArD8B6G,IAAMC,W,QCQRD,IAAMC,UCE3BwG,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCKcjD,QACW,cAA7BkD,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAApM,GACLD,QAAQC,MAAMA,EAAMqM,c","file":"static/js/main.c5865344.chunk.js","sourcesContent":["export default class Graduation {\r\n  constructor(name, rangesNames) {\r\n    this.name = name;\r\n    this.rangesNames = rangesNames;\r\n  }\r\n}\r\n","export default class Parameter {\r\n  constructor(name, value, isAchiev = false) {\r\n    this.name = name;\r\n    this.value = value;\r\n    this.isAchiev = isAchiev;\r\n  }\r\n}\r\n","export default class Phrase {\r\n  constructor(rangeName, text, isGeneral, id) {\r\n    this.rangeName = rangeName;\r\n    this.text = text;\r\n    this.isGeneral = isGeneral;\r\n    this.id = id;\r\n  }\r\n  stuff_id = null;\r\n}\r\n","export default class Range {\r\n  constructor(name, paramName, min, max) {\r\n    this.name = name;\r\n    this.paramName = paramName;\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n}\r\n","export default class Stage {\r\n  constructor(isStart, id) {\r\n    this.id = id;\r\n    this.isStart = isStart\r\n  }\r\n  isBeen = false;\r\n  topic_id = null;\r\n}\r\n","export default class Stuff {\r\n  constructor(next_stage_id, changes = [], isA = false, id) {\r\n    this.next_stage_id = next_stage_id;\r\n    this.changes = changes;\r\n    this.isA = isA;\r\n    this.id = id;\r\n  }\r\n  stage_id = null;\r\n}\r\n","export default class Topic {\r\n  constructor(name, graduation, isFin, isStart, id) {\r\n    this.name = name;\r\n    this.graduation = graduation;\r\n    this.isFin = isFin;\r\n    this.isStart = isStart;\r\n    this.id = id;\r\n  }\r\n}\r\n","export default class Change {\r\n  constructor(paramName, term) {\r\n    this.paramName = paramName;\r\n    this.term = term;\r\n  }\r\n}\r\n","export default class Interf {\r\n  constructor(generalPhrase, phrase, id) {\r\n    this.generalPhrase = generalPhrase;\r\n    this.phrase = phrase;\r\n    this.id = id;\r\n  }\r\n}\r\n","import { Loc } from \"./../mlpa_engine\";\r\n\r\nimport {\r\n  PARAM_EQUILIBRIUM,\r\n  PARAM_DETERMINATION,\r\n  PARAM_DOG\r\n} from \"./parameters\";\r\n\r\nimport {\r\n  RANGE_PANIC,\r\n  RANGE_TENSION,\r\n  RANGE_STABILITY,\r\n  RANGE_APATHY,\r\n  RANGE_UNCERTAINTY,\r\n  RANGE_CONFIDENCE,\r\n  RANGE_DOG\r\n} from \"./ranges\";\r\n\r\nimport {\r\n  GRAD_PAN_APA,\r\n  GRAD_PAN_UNC,\r\n  GRAD_PAN_CON,\r\n  GRAD_TEN_APA,\r\n  GRAD_TEN_UNC,\r\n  GRAD_TEN_CON,\r\n  GRAD_STAB_APA,\r\n  GRAD_STAB_UNC,\r\n  GRAD_STAB_CON,\r\n  GRAD_DOG\r\n} from \"./grads\";\r\n\r\nconst locE = new Loc();\r\nlocE.addParams(\r\n  locE.cParam(PARAM_DETERMINATION, 2),\r\n  locE.cParam(PARAM_EQUILIBRIUM, 4),\r\n\r\n  locE.cParam(PARAM_DOG, false, true)\r\n);\r\n\r\nlocE.addRanges(\r\n  locE.cRange(RANGE_PANIC, 1, 5, PARAM_EQUILIBRIUM),\r\n  locE.cRange(RANGE_TENSION, 6, 10, PARAM_EQUILIBRIUM),\r\n  locE.cRange(RANGE_STABILITY, 11, 15, PARAM_EQUILIBRIUM),\r\n\r\n  locE.cRange(RANGE_APATHY, 1, 5, PARAM_DETERMINATION),\r\n  locE.cRange(RANGE_UNCERTAINTY, 6, 10, PARAM_DETERMINATION),\r\n  locE.cRange(RANGE_CONFIDENCE, 11, 15, PARAM_DETERMINATION),\r\n\r\n  locE.cRange(RANGE_DOG, true, true, PARAM_DOG)\r\n);\r\nlocE.addGrads(\r\n  locE.cGrad(GRAD_PAN_APA, RANGE_PANIC, RANGE_APATHY),\r\n  locE.cGrad(GRAD_PAN_UNC, RANGE_PANIC, RANGE_UNCERTAINTY),\r\n  locE.cGrad(GRAD_PAN_CON, RANGE_PANIC, RANGE_CONFIDENCE),\r\n\r\n  locE.cGrad(GRAD_TEN_APA, RANGE_TENSION, RANGE_APATHY),\r\n  locE.cGrad(GRAD_TEN_UNC, RANGE_TENSION, RANGE_UNCERTAINTY),\r\n  locE.cGrad(GRAD_TEN_CON, RANGE_TENSION, RANGE_CONFIDENCE),\r\n\r\n  locE.cGrad(GRAD_STAB_APA, RANGE_STABILITY, RANGE_APATHY),\r\n  locE.cGrad(GRAD_STAB_UNC, RANGE_STABILITY, RANGE_UNCERTAINTY),\r\n  locE.cGrad(GRAD_STAB_CON, RANGE_STABILITY, RANGE_CONFIDENCE),\r\n\r\n  locE.cGrad(GRAD_DOG, RANGE_DOG)\r\n);\r\n\r\nexport default locE;\r\n","import Parameter from \"./parameter\";\r\nimport Range from \"./range\";\r\nimport Graduation from \"./graduation\";\r\nimport Phrase from \"./phrase\";\r\nimport Stuff from \"./stuff\";\r\nimport Change from \"./change\";\r\nimport Stage from \"./stage\";\r\nimport Topic from \"./topic\";\r\nimport Interf from \"./interf\";\r\n\r\nexport default class Loc {\r\n  params = [];\r\n  ranges = [];\r\n  grads = [];\r\n  topics = [];\r\n\r\n  stuffs = [];\r\n  stages = [];\r\n  phrases = [];\r\n\r\n  lim = 15;\r\n\r\n  cParam(name, value, isAchiev) {\r\n    return new Parameter(name, value, isAchiev);\r\n  }\r\n  addParams(...params) {\r\n    this.params = this.params.concat(params);\r\n  }\r\n\r\n  cRange(name, min, max, paramName) {\r\n    return new Range(name, paramName, min, max);\r\n  }\r\n  addRanges(...ranges) {\r\n    this.ranges = this.ranges.concat(ranges);\r\n  }\r\n\r\n  cGrad(name, ...rangesNames) {\r\n    return new Graduation(name, rangesNames);\r\n  }\r\n  addGrads(...grads) {\r\n    this.grads = this.grads.concat(grads);\r\n  }\r\n\r\n  cTopic(name, gradName, isFin, isStart, ...stages) {\r\n    const topicId = this.getId(\"topics\");\r\n    this.addTopics(new Topic(name, gradName, isFin, isStart, topicId));\r\n    this.addStages(topicId, ...stages);\r\n  }\r\n\r\n  addTopics(...topics) {\r\n    this.topics = this.topics.concat(topics);\r\n  }\r\n\r\n  cStage(isStart, ...answers) {\r\n    const stageId = this.getId(\"stages\");\r\n    this.addStuffs(stageId, ...answers);\r\n    return new Stage(isStart, stageId);\r\n  }\r\n\r\n  addStages = (topicId, ...stages) => {\r\n    if (this._getTopic(topicId)) {\r\n      const newStages = stages.map(stage => {\r\n        return { ...stage, topic_id: topicId };\r\n      });\r\n      this.stages = this.stages.concat(newStages);\r\n    } else console.error(`Topic ${topicId} not found!`);\r\n  };\r\n\r\n  cStuff(props, ...phrases) {\r\n    const { id: nextStageId, changes = [], isA } = props ? props : {};\r\n    const stuffId = this.getId(\"stuffs\");\r\n\r\n    this.addPhrases(stuffId, phrases);\r\n    return new Stuff(\r\n      nextStageId,\r\n      !isA ? changes.filter(c => c.term) : [],\r\n      isA,\r\n      stuffId\r\n    );\r\n  }\r\n\r\n  addStuffs(stageId, ...stuffs) {\r\n    const newStuffs = stuffs.map(stuff => ({ ...stuff, stage_id: stageId }));\r\n    this.stuffs = this.stuffs.concat(newStuffs);\r\n  }\r\n\r\n  addPhrases(stuffId, phrases) {\r\n    const newPhrases = phrases.map(phrase => ({\r\n      ...phrase,\r\n      stuff_id: stuffId\r\n    }));\r\n\r\n    this.phrases = this.phrases.concat(newPhrases);\r\n  }\r\n\r\n  cPhrase(text, isGeneral = false, rangeName) {\r\n    const phraseId = this.getId(\"phrases\");\r\n    return new Phrase(rangeName, text, isGeneral, phraseId);\r\n  }\r\n\r\n  cChange(paramName, term) {\r\n    return new Change(paramName, term);\r\n  }\r\n\r\n  _getTopic(id) {\r\n    return this.topics.find(topic => topic.id === id);\r\n  }\r\n  _getStages = topicId => {\r\n    return this.stages.filter(stage => stage.topic_id === topicId);\r\n  };\r\n\r\n  _getStuffs = stageId => {\r\n    return this.stuffs.filter(stuff => stuff.stage_id === stageId);\r\n  };\r\n\r\n  _getPhrases = stuffId => {\r\n    return this.phrases.filter(phrase => phrase.stuff_id === stuffId);\r\n  };\r\n\r\n  _getParam = name => {\r\n    return this.params.find(param => param.name === name);\r\n  };\r\n\r\n  _getRange(name) {\r\n    return this.ranges.find(range => range.name === name);\r\n  }\r\n\r\n  _getGrad(name) {\r\n    return this.grads.find(grad => grad.name === name);\r\n  }\r\n\r\n  _editParams(changes) {\r\n    changes.forEach(change => {\r\n      const param = this._getParam(change.paramName);\r\n\r\n      if (param.isAchiev) {\r\n        param.value = true;\r\n      } else {\r\n        const newValue = param.value + change.term;\r\n        if (newValue > this.lim) {\r\n          param.value = this.lim;\r\n        } else if (newValue < 1) {\r\n          param.value = 1;\r\n        } else param.value = newValue;\r\n      }\r\n    });\r\n  }\r\n\r\n  checkStageFinal = stageId => {\r\n    const stuffs = this._getStuffs(stageId);\r\n    return !stuffs.find(s => !s.isA);\r\n  };\r\n\r\n  checkRange(rangeName) {\r\n    const range = this._getRange(rangeName);\r\n    const param = this._getParam(range.paramName);\r\n    const res = param.isAchiev\r\n      ? param.value === range.max\r\n      : param.value >= range.min && param.value <= range.max;\r\n    return res;\r\n  }\r\n\r\n  checkGrad = gradName => {\r\n    const grad = this._getGrad(gradName);\r\n    const ranges = grad.rangesNames.map(rName => this._getRange(rName));\r\n    const params = [];\r\n    ranges.forEach(range => {\r\n      if (!params[range.paramName]) {\r\n        params[range.paramName] = this.checkRange(range.name);\r\n      }\r\n    });\r\n    for (let key in params) {\r\n      if (!params[key]) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  idState = {};\r\n  getId = type => {\r\n    if (!this.idState[type]) this.idState[type] = 0;\r\n    this.idState[type]++;\r\n    return this.idState[type];\r\n  };\r\n\r\n  getStartId = () => {\r\n    const startTopic = this.topics.find(topic => topic.isStart);\r\n    const stages = this._getStages(startTopic.id);\r\n    const startStage = stages.find(stage => stage.isStart);\r\n    return startStage ? startStage.id : null;\r\n  };\r\n\r\n  calcStuff = stuffId => {\r\n    const stuff = this.stuffs.find(s => s.id === stuffId);\r\n\r\n    this._editParams(stuff.changes);\r\n    return stuff.next_stage_id;\r\n  };\r\n\r\n  getGeneralPhrase = stuffId => {\r\n    const stuff = this.stuffs.find(s => s.id === stuffId);\r\n    const phrases = this._getPhrases(stuff.id);\r\n    const generalPhrase = phrases.find(phrase => phrase.isGeneral);\r\n    return generalPhrase?.text;\r\n  };\r\n\r\n  getCorrectPhrase = stuffId => {\r\n    const stuff = this.stuffs.find(s => s.id === stuffId);\r\n    const phrases = this._getPhrases(stuff.id);\r\n    const neutralPhrase = phrases.find(phrase => !phrase.rangeName);\r\n    for (let i in phrases) {\r\n      const phrase = phrases[i];\r\n      if (phrase.rangeName && this.checkRange(phrase.rangeName))\r\n        return phrase.text;\r\n    }\r\n\r\n    return neutralPhrase.text;\r\n  };\r\n\r\n  _getCorrectStuffs(id) {\r\n    //НЕОБХОДИМОЕ ЧИСЛО ОТВЕТОВ\r\n    const necessity = 3;\r\n    const stuffs = this._getStuffs(id);\r\n\r\n    //ОГРАНИЧЕНИЕ ПО *БЫЛ ЗДЕСЬ*\r\n    const answersAll = stuffs.filter(stuff => {\r\n      if (stuff.isA) return false;\r\n      else {\r\n        const stage = this.stages.find(s => s.id === stuff.next_stage_id);\r\n        return !stage.isBeen;\r\n      }\r\n    });\r\n\r\n    const correctNeutAchiev = [];\r\n    const correctFinal = [];\r\n    const incrrectNeutral = [];\r\n\r\n    answersAll.forEach(stuff => {\r\n      const nextStage = this.stages.find(\r\n        stage => stage.id === stuff.next_stage_id\r\n      );\r\n      const topic = this._getTopic(nextStage.topic_id);\r\n      const grad = this._getGrad(topic.graduation);\r\n      const ranges = grad.rangesNames(rName => this._getRange(rName));\r\n      const params = ranges.rangesNames(r => this._getParam(r.paramName));\r\n\r\n      const isAchiev = params.find(p => p.isAchiev);\r\n      const correct = this.checkGrad(grad.name);\r\n      const { isFin } = topic;\r\n\r\n      if (correct) {\r\n        //подходящее по градации\r\n        //если не финал\r\n        if (!isFin) correctNeutAchiev.push(stuff);\r\n        //если финал\r\n        else correctFinal.push(stuff);\r\n      } else if (!isAchiev && !isFin) {\r\n        //неподходящие если не ачивный и не финальный\r\n        incrrectNeutral.push(stuff);\r\n      }\r\n    });\r\n\r\n    let resultStuffs = correctNeutAchiev.concat(incrrectNeutral);\r\n    //если пришло время для финалочек\r\n    if (false) resultStuffs = resultStuffs.concat(correctFinal);\r\n    return resultStuffs.slice(0, necessity);\r\n  }\r\n\r\n  checkAnswToGrad = stuff => {\r\n    const nextStage = this.stages.find(\r\n      stage => stage.id === stuff.next_stage_id\r\n    );\r\n    const topic = this._getTopic(nextStage.topic_id);\r\n    return this.checkGrad(topic.graduation);\r\n  };\r\n\r\n  //ДОБАВИТЬ БЕЗУСЛОВНЫЕ ОГРАНИЧЕНИЯ ДЛЯ ТЕМ ЗАВИСИМЫХ ОТ АЧИВОК\r\n  getInterfaceStage = id => {\r\n    //ДОБАВИТЬ ПОДКЛЮЧЕНИЕ ФИНАЛОЧЕК КОГДА НАДО\r\n\r\n    const stage = this.stages.find(s => s.id === id);\r\n    stage.isBeen = true;\r\n\r\n    const stuffs = this._getStuffs(id);\r\n\r\n    const replicStuff = stuffs.find(stuff => stuff.isA);\r\n    const replic = new Interf(null, this.getCorrectPhrase(replicStuff.id));\r\n\r\n    //ОГРАНИЧЕНИЯ ПО *БЫЛ ТУТ*\r\n    const answersAll = stuffs.filter(stuff => {\r\n      return !stuff.isA;\r\n    });\r\n\r\n    //РЕЗУЛЬТАТ\r\n    const resAnswers = answersAll;\r\n\r\n    const interf = {\r\n      answers: resAnswers.map(stuff => {\r\n        return new Interf(\r\n          this.getGeneralPhrase(stuff.id),\r\n          this.getCorrectPhrase(stuff.id),\r\n          stuff.id\r\n        );\r\n      }),\r\n      replic\r\n    };\r\n\r\n    return interf;\r\n  };\r\n\r\n  ssign = data => {\r\n    for (let key in data) {\r\n      if (![\"params\", \"grads\", \"ranges\"].find(k => k === key)) {\r\n        this[key] = data[key];\r\n      }\r\n    }\r\n  };\r\n}\r\n","export const PARAM_DETERMINATION = \"РЕШИМОСТЬ\";\r\nexport const PARAM_EQUILIBRIUM = \"УРАВНОВЕШЕННОСТЬ\";\r\n\r\nexport const PARAM_DOG = \"УЗНАЛ СОБ МЕРТВА\";\r\n","export const RANGE_PANIC = \"ПАНИКА\";\r\nexport const RANGE_TENSION = \"НАПРЯЖЕННОСТЬ\";\r\nexport const RANGE_STABILITY = \"СТАБИЛЬНОСТЬ\";\r\n\r\nexport const RANGE_APATHY = \"АПАТИЯ\";\r\nexport const RANGE_UNCERTAINTY = \"НЕУВЕРЕННОСТЬ\";\r\nexport const RANGE_CONFIDENCE = \"УВЕРЕННОСТЬ\";\r\n\r\nexport const RANGE_DOG = \"ЗНАЕТ ПРО СОБАКУ\";\r\n","export const GRAD_PAN_APA = \"ПАН АПАТ\";\r\nexport const GRAD_PAN_UNC = \"ПАН НЕУВ\";\r\nexport const GRAD_PAN_CON = \"ПАН УВ\";\r\n\r\nexport const GRAD_TEN_APA = \"НАПР АПАТ\";\r\nexport const GRAD_TEN_UNC = \"НАПР НЕУВ\";\r\nexport const GRAD_TEN_CON = \"НАПР УВ\";\r\n\r\nexport const GRAD_STAB_APA = \"СТАБ АПАТ\";\r\nexport const GRAD_STAB_UNC = \"СТАБ НЕУВ\";\r\nexport const GRAD_STAB_CON = \"СТАБ УВ\";\r\n\r\nexport const GRAD_DOG = \"ЗНАЕТ ПРО СОБАКУ\";\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default class ReplicI extends React.Component {\r\n  render() {\r\n    const { replic, isPlayerReplic } = this.props;\r\n    const style = {\r\n      backgroundColor: isPlayerReplic ? \"#ebebe0\" : \"white\"\r\n    };\r\n    return (\r\n      <div className=\"replica\" style={style}>\r\n        {replic.phrase}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default class AnswerI extends React.Component {\r\n  render() {\r\n    const { answer, updateStage } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className=\"answer\"\r\n        onClick={() => {\r\n          updateStage();\r\n        }}\r\n      >\r\n        {answer.generalPhrase}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Params extends React.Component {\r\n  /* constructor() {\r\n    super();\r\n\r\n  }*/\r\n\r\n  correctGrads() {\r\n    const { grads, checkGrad } = this.props;\r\n    const corrGrads = grads.filter(g => checkGrad(g.name));\r\n\r\n    return corrGrads;\r\n  }\r\n  render() {\r\n    const { params, lim, edit } = this.props;\r\n\r\n    const correctGrads = this.correctGrads();\r\n    const correctGradsItems = correctGrads.map(g => (\r\n      <div key={g.name}>{g.name}</div>\r\n    ));\r\n\r\n    const paramItems = params.map(param => {\r\n      return param.isAchiev ? (\r\n        <div key={param.name}>\r\n          <input type=\"checkbox\" disabled checked={param.value} /> {param.name}\r\n        </div>\r\n      ) : (\r\n        <div key={param.name}>\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                edit(param.name, -1);\r\n              }}\r\n            >\r\n              -\r\n            </button>\r\n            <div\r\n              style={{\r\n                display: \"inline-block\",\r\n                height: \"15px\",\r\n                width: `${param.value * 10}px`,\r\n                backgroundColor: \"red\"\r\n              }}\r\n            ></div>\r\n            <div\r\n              style={{\r\n                display: \"inline-block\",\r\n                height: \"15px\",\r\n                width: `${(lim - param.value) * 10}px`,\r\n                backgroundColor: \"gray\"\r\n              }}\r\n            ></div>\r\n\r\n            <button\r\n              onClick={() => {\r\n                edit(param.name, 1);\r\n              }}\r\n            >\r\n              +\r\n            </button>\r\n            {param.name}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        {paramItems}\r\n        {correctGradsItems}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport locE from \"../../game/loc_example\";\r\nimport mlpaState from \"../../mlpa_state\";\r\nimport ReplicI from \"./ReplicI/ReplicI\";\r\nimport AnswerI from \"./AnswerI/AnswerI\";\r\nimport Params from \"./Params\";\r\n\r\nexport default class UI extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.loc = locE;\r\n    this.loc.ssign(mlpaState);\r\n    this.defaultParams();\r\n    const currentStage = this.loc.getStartId();\r\n    this.state = {\r\n      currentStage,\r\n      prevAnswer: \"Что с тобой?\"\r\n    };\r\n  }\r\n\r\n  defaultParams() {\r\n    this.loc.params.forEach(p => {\r\n      if (!p.isAchiev) p.value = 7;\r\n    });\r\n  }\r\n\r\n  updateStage(stuffId) {\r\n    const newStageId = this.loc.calcStuff(stuffId);\r\n    const newPrevAnswer = this.loc.getCorrectPhrase(stuffId);\r\n    this.setState({ currentStage: newStageId, prevAnswer: newPrevAnswer });\r\n  }\r\n\r\n  render() {\r\n    const { currentStage, prevAnswer } = this.state;\r\n    const currentInterface = this.loc.getInterfaceStage(currentStage);\r\n\r\n    const { answers, replic } = currentInterface;\r\n    const answersItems = answers.map(answer => {\r\n      return (\r\n        <AnswerI\r\n          key={answer.id}\r\n          answer={answer}\r\n          updateStage={() => {\r\n            this.updateStage(answer.id);\r\n          }}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <Params\r\n          params={this.loc.params}\r\n          lim={this.loc.lim}\r\n          edit={(paramName, term) => {\r\n            this.loc._editParams([this.loc.cChange(paramName, term)]);\r\n            this.forceUpdate();\r\n          }}\r\n          grads={this.loc.grads}\r\n          checkGrad={this.loc.checkGrad}\r\n        />\r\n        <ReplicI replic={{ phrase: prevAnswer }} isPlayerReplic={true} />\r\n        <ReplicI replic={replic} />\r\n        {answersItems}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class TopicItem extends React.Component {\r\n  render() {\r\n    const { topic, isSelect, click } = this.props;\r\n\r\n    const border = topic.isStart\r\n      ? \"solid 0.3rem red\"\r\n      : topic.isFin\r\n      ? \"solid 0.3rem aqua\"\r\n      : \"none\";\r\n\r\n    const style = {\r\n      backgroundColor: isSelect ? \"green\" : \"gray\",\r\n      display: \"inline-block\",\r\n      margin: \"0.2rem\",\r\n      padding: \"0.5rem\",\r\n      cursor: \"pointer\",\r\n      color: \"white\",\r\n      border\r\n    };\r\n    return (\r\n      <div\r\n        style={style}\r\n        onClick={() => {\r\n          click(topic.id);\r\n        }}\r\n      >\r\n        {topic.name}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class StageItem extends React.Component {\r\n  render() {\r\n    const { stage, click, isSelect, stuffText, methods } = this.props;\r\n\r\n    const isFinal = methods.checkStageFinal(stage.id);\r\n    const border = stage.isStart\r\n      ? \"solid 0.3rem red\"\r\n      : isFinal\r\n      ? \"solid 0.3rem aqua\"\r\n      : \"none\";\r\n\r\n    const style = {\r\n      backgroundColor: isSelect ? \"blue\" : \"gray\",\r\n      cursor: \"pointer\",\r\n      display: \"inline-block\",\r\n      margin: \"0.2rem\",\r\n      padding: \"0.5rem\",\r\n      color: \"white\",\r\n      border\r\n    };\r\n    return (\r\n      <div\r\n        onClick={() => {\r\n          click(stage.id);\r\n        }}\r\n        style={style}\r\n      >\r\n        {stuffText(stage.id)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class StuffItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const nextStage = props.allStages.find(\r\n      s => s.id === props.stuff.next_stage_id\r\n    );\r\n    const currentTopic = nextStage?.topic_id;\r\n\r\n    this.state = {\r\n      currentTopic,\r\n      viewAchievs: false\r\n    };\r\n  }\r\n  render() {\r\n    const {\r\n      stuff,\r\n      methods,\r\n      range,\r\n      stat,\r\n      goStage,\r\n      allStages,\r\n      stuffText,\r\n      allTopics\r\n    } = this.props;\r\n\r\n    const phrase = methods.getPhrases(stuff.id).find(p => {\r\n      return (\r\n        p.rangeName === range ||\r\n        (range === \"none\" && !p.rangeName) ||\r\n        (range === \"GENERAL\" && p.isGeneral)\r\n      );\r\n    });\r\n\r\n    const { changes } = stuff;\r\n    const { currentTopic, viewAchievs } = this.state;\r\n\r\n    const changesItems = !stuff.isA\r\n      ? stat.params.map(p => {\r\n          const c = changes.find(change => change.paramName === p.name);\r\n\r\n          const term = c ? c.term : p.isAchiev ? false : 0;\r\n\r\n          const inputElem = p.isAchiev ? (\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={term}\r\n              onChange={e => {\r\n                methods.updateStuff(stuff.id, stuff.next_stage_id, {\r\n                  paramName: p.name,\r\n                  term: Boolean(e.target.checked)\r\n                });\r\n              }}\r\n            />\r\n          ) : (\r\n            <input\r\n              type=\"number\"\r\n              style={{ width: \"40px\" }}\r\n              value={term}\r\n              onChange={e => {\r\n                methods.updateStuff(stuff.id, stuff.next_stage_id, {\r\n                  paramName: p.name,\r\n                  term: Number(e.target.value)\r\n                });\r\n              }}\r\n            />\r\n          );\r\n\r\n          if (!viewAchievs && p.isAchiev) return null;\r\n          return (\r\n            <span\r\n              style={{\r\n                display: \"inline-block\",\r\n                padding: \"0.5rem\",\r\n                backgroundColor: \"#ffccff\",\r\n                marginRight: \"0.5rem\"\r\n              }}\r\n              key={p.name}\r\n            >\r\n              {p.name}:{inputElem}\r\n            </span>\r\n          );\r\n        })\r\n      : null;\r\n\r\n    const style = {\r\n      backgroundColor: stuff.isA ? \"#ccffff\" : \"#D3D3D3\",\r\n      cursor: \"pointer\",\r\n      margin: \"0.2rem\",\r\n\r\n      paddingTop: stuff.isA ? \"1rem\" : \"0.5rem\",\r\n      paddingBottom: stuff.isA ? \"1rem\" : \"0.5rem\",\r\n\r\n      display: \"inline-block\",\r\n      width: \"40%\"\r\n    };\r\n\r\n    const text = phrase ? phrase.text : \"\";\r\n\r\n    const linkItems = methods.getStages(this.state.currentTopic).map(s => {\r\n      return (\r\n        <option value={s.id} key={s.id}>\r\n          {stuffText(s.id)}\r\n        </option>\r\n      );\r\n    });\r\n\r\n    if (!allStages.find(s => s.id === stuff.next_stage_id)) {\r\n      linkItems.unshift(\r\n        <option value={\"error\"} key=\"0\">\r\n          {stuff.next_stage_id} NOT FOUND\r\n        </option>\r\n      );\r\n    }\r\n\r\n    const linkThemesItems = allTopics.map(t => {\r\n      return (\r\n        <option value={t.id} key={t.id}>\r\n          {t.name}\r\n        </option>\r\n      );\r\n    });\r\n\r\n    const next = !stuff.isA ? (\r\n      <div style={{ display: \"inline-block\", marginRight: \"0.5rem\" }}>\r\n        <div\r\n          style={{\r\n            display: \"inline-block\",\r\n            backgroundColor: \"red\",\r\n            cursor: \"pointer\",\r\n            color: \"white\"\r\n          }}\r\n          onClick={() => {\r\n            goStage(stuff.next_stage_id);\r\n          }}\r\n        >\r\n          ===>\r\n        </div>\r\n        {currentTopic}\r\n\r\n        <select\r\n          value={this.state.currentTopic}\r\n          onChange={e => {\r\n            const newCurrTopic = Number(e.target.value);\r\n            this.setState({ currentTopic: newCurrTopic });\r\n            const topicStages = methods.getStages(newCurrTopic);\r\n\r\n            if (\r\n              topicStages.length &&\r\n              !topicStages.find(s => s.id === stuff.next_stage_id)\r\n            )\r\n              methods.updateStuff(stuff.id, topicStages[0].id);\r\n          }}\r\n        >\r\n          {linkThemesItems}\r\n        </select>\r\n\r\n        <select\r\n          value={stuff.next_stage_id}\r\n          onChange={e => {\r\n            methods.updateStuff(stuff.id, Number(e.target.value));\r\n          }}\r\n        >\r\n          {linkItems}\r\n        </select>\r\n      </div>\r\n    ) : null;\r\n\r\n    const removeButton = !stuff.isA ? (\r\n      <button onClick={() => methods.removeStuff(stuff.id)}>X</button>\r\n    ) : null;\r\n\r\n    const viewBox = stuff.isA ? null : (\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={viewAchievs}\r\n        onChange={e => {\r\n          this.setState({ viewAchievs: e.target.checked });\r\n        }}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        {removeButton}\r\n        <div style={style}>\r\n          ({stuff.id}){\" \"}\r\n          <input\r\n            value={text}\r\n            style={{ width: \"90%\" }}\r\n            onChange={e => {\r\n              methods.updatePhrase(\r\n                stuff.id,\r\n                range === \"none\" ? null : range,\r\n                phrase ? phrase.id : null,\r\n                e.target.value\r\n              );\r\n            }}\r\n          />\r\n        </div>\r\n        {next}\r\n        {changesItems}\r\n        {viewBox}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class RangeItem extends React.Component {\r\n  render() {\r\n    const { range, isSelect, click } = this.props;\r\n\r\n    const style = {\r\n      backgroundColor: isSelect ? \"orange\" : \"gray\",\r\n      cursor: \"pointer\",\r\n      display: \"inline-block\",\r\n      margin: \"0.2rem\",\r\n      padding: \"0.5rem\",\r\n      color: \"white\"\r\n    };\r\n    return (\r\n      <div\r\n        style={style}\r\n        onClick={() => {\r\n          click(range.name);\r\n        }}\r\n      >\r\n        {range.name}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class AddStuff extends React.Component {\r\n  render() {\r\n    const { methods, stageId, topic } = this.props;\r\n\r\n    const nextStageId = methods.getStages(topic.id)[0].id;\r\n\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            methods.addStuff(stageId, false, nextStageId, []);\r\n          }}\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport StuffItem from \"../Stuffs/StuffItem\";\r\nimport RangeItem from \"../Ranges/RangeItem\";\r\nimport AddStuff from \"../Stuffs/AddStuff\";\r\n\r\nexport default class Stage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentRange: \"none\", acheivs: false };\r\n  }\r\n\r\n  click = name => {\r\n    this.setState({ currentRange: name });\r\n  };\r\n  splitStuffs(stuffs) {\r\n    const answer = stuffs.find(stuff => stuff.isA);\r\n    const pAnswers = stuffs.filter(stuff => !stuff.isA);\r\n    return { answer, pAnswers };\r\n  }\r\n  render() {\r\n    const {\r\n      stage,\r\n      methods,\r\n      stat,\r\n      changeStage,\r\n      allStages,\r\n      stuffText,\r\n      topic,\r\n      allTopics\r\n    } = this.props;\r\n\r\n    const stuffs = methods.getStuffs(stage.id);\r\n\r\n    const { answer, pAnswers } = this.splitStuffs(stuffs);\r\n\r\n    const stuffsItems = [answer, ...pAnswers].map(stuff => {\r\n      const res = stuff ? (\r\n        <StuffItem\r\n          stat={stat}\r\n          range={this.state.currentRange}\r\n          methods={methods}\r\n          key={stuff.id}\r\n          stuff={stuff}\r\n          goStage={changeStage}\r\n          allStages={allStages}\r\n          allTopics={allTopics}\r\n          stuffText={stuffText}\r\n        />\r\n      ) : null;\r\n\r\n      return res;\r\n    });\r\n\r\n    if (\"GENERAL\" === this.state.currentRange) {\r\n      stuffsItems.shift();\r\n    }\r\n\r\n    const { ranges } = stat;\r\n\r\n    const generStuff = (\r\n      <RangeItem\r\n        isSelect={\"GENERAL\" === this.state.currentRange}\r\n        range={{ name: \"GENERAL\" }}\r\n        click={this.click}\r\n      />\r\n    );\r\n\r\n    const noRanges = (\r\n      <RangeItem\r\n        isSelect={\"none\" === this.state.currentRange}\r\n        range={{ name: \"none\" }}\r\n        click={this.click}\r\n      />\r\n    );\r\n\r\n    const rangesItems = ranges\r\n      .filter(r => {\r\n        const param = methods.getParam(r.paramName);\r\n        return this.state.acheivs || !param.isAchiev;\r\n      })\r\n      .map(range => (\r\n        <RangeItem\r\n          isSelect={range.name === this.state.currentRange}\r\n          key={range.name}\r\n          range={range}\r\n          click={this.click}\r\n        />\r\n      ));\r\n\r\n    return (\r\n      <div>\r\n        <h2 align=\"center\">\r\n          {stuffText(stage.id)}{\" \"}\r\n          <button\r\n            onClick={() => {\r\n              methods.removeStage(stage.id);\r\n            }}\r\n          >\r\n            X\r\n          </button>{\" \"}\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={stage.isStart}\r\n            onChange={e => {\r\n              methods.updateStage(stage.id, e.target.checked);\r\n            }}\r\n          />\r\n        </h2>\r\n        {generStuff}\r\n        {noRanges}\r\n        {rangesItems}\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={this.state.acheivs}\r\n          onChange={e => {\r\n            this.setState({ acheivs: e.target.checked });\r\n          }}\r\n        />\r\n        {stuffsItems}\r\n        <AddStuff topic={topic} methods={methods} stageId={stage.id} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport StageItem from \"../Stages/StageItem\";\r\nimport Stage from \"../Stages/Stage\";\r\n\r\nexport default class Topic extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { newStageStart: false };\r\n  }\r\n  stuffText = id => {\r\n    if (id) {\r\n      const { methods } = this.props;\r\n\r\n      const nextStuff = methods.getStuffs(id).find(stuff => stuff.isA);\r\n\r\n      if (nextStuff) {\r\n        const nextPhrases = methods.getPhrases(nextStuff.id);\r\n        const nextPhrase = nextPhrases.find(p => !p.rangeName);\r\n\r\n        if (nextPhrase) {\r\n          return `(${id}) ${nextPhrase.text.slice(0, 7)}...`;\r\n        } else return `(${id}) NOT PHRASE...`;\r\n      } else return \"NOT FOUND\";\r\n    }\r\n    return null;\r\n  };\r\n  render() {\r\n    const {\r\n      topic,\r\n      stat,\r\n      methods,\r\n      currentStage,\r\n      click,\r\n      changeStage,\r\n      allStages,\r\n      allTopics\r\n    } = this.props;\r\n\r\n    const { grads } = stat;\r\n    const { graduation } = topic;\r\n\r\n    const stages = methods.getStages(topic.id);\r\n    const stagesItems = stages.map(stage => {\r\n      const isSelect = stage.id === currentStage;\r\n\r\n      return (\r\n        <StageItem\r\n          methods={methods}\r\n          stuffText={this.stuffText}\r\n          key={stage.id}\r\n          stage={stage}\r\n          isSelect={isSelect}\r\n          click={click}\r\n        />\r\n      );\r\n    });\r\n\r\n    const optItems = grads.map(grad => {\r\n      return (\r\n        <option value={grad.name} key={grad.name}>\r\n          {grad.name}\r\n        </option>\r\n      );\r\n    });\r\n\r\n    const curStage = stages.find(stage => stage.id === currentStage);\r\n\r\n    const stageView = currentStage ? (\r\n      <Stage\r\n        stage={curStage}\r\n        methods={methods}\r\n        stat={stat}\r\n        allStages={allStages}\r\n        allTopics={allTopics}\r\n        changeStage={changeStage}\r\n        stuffText={this.stuffText}\r\n        topic={topic}\r\n      />\r\n    ) : null;\r\n\r\n    return (\r\n      <div>\r\n        <h1 align=\"center\">\r\n          Topic{\" \"}\r\n          <input\r\n            value={topic.name}\r\n            onChange={e => {\r\n              methods.updateTopic(\r\n                topic.id,\r\n                e.target.value,\r\n                topic.graduation,\r\n                topic.isFin,\r\n                topic.isStart\r\n              );\r\n            }}\r\n          />\r\n          , grad:\r\n          <select\r\n            value={graduation}\r\n            onChange={e => {\r\n              methods.updateTopic(\r\n                topic.id,\r\n                topic.name,\r\n                e.target.value,\r\n                topic.isFin,\r\n                topic.isStart\r\n              );\r\n            }}\r\n          >\r\n            {optItems}\r\n          </select>\r\n          Start:\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={topic.isStart}\r\n            onChange={e => {\r\n              methods.updateTopic(\r\n                topic.id,\r\n                topic.name,\r\n                topic.graduation,\r\n                topic.isFin,\r\n                e.target.checked\r\n              );\r\n            }}\r\n          />\r\n          Final:\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={topic.isFin}\r\n            onChange={e => {\r\n              methods.updateTopic(\r\n                topic.id,\r\n                topic.name,\r\n                topic.graduation,\r\n                e.target.checked,\r\n                topic.isStart\r\n              );\r\n            }}\r\n          />\r\n          <button\r\n            onClick={() => {\r\n              methods.removeTopic(topic.id);\r\n            }}\r\n            style={{ marginLeft: \"1rem\" }}\r\n          >\r\n            X\r\n          </button>\r\n        </h1>\r\n\r\n        <br />\r\n        <div>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.newStageStart}\r\n            onChange={e => {\r\n              this.setState({ newStageStart: e.target.checked });\r\n            }}\r\n          />\r\n          <button\r\n            onClick={() => {\r\n              methods.addStage(topic.id, this.state.newStageStart);\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n        {stagesItems}\r\n        <br />\r\n        {stageView}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class AddTopic extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      graduation: props.stat.grads[0].name,\r\n      name: \"\",\r\n      isFin: false,\r\n      isStart: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { graduation, name, isFin, isStart } = this.state;\r\n    const { stat, methods } = this.props;\r\n    const { grads } = stat;\r\n    const optItems = grads.map(grad => (\r\n      <option value={grad.name} key={grad.name}>\r\n        {grad.name}\r\n      </option>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <input\r\n          value={name}\r\n          onChange={e => {\r\n            this.setState({ name: e.target.value });\r\n          }}\r\n        />\r\n        <select\r\n          value={graduation}\r\n          onChange={e => {\r\n            this.setState({ graduation: e.target.value });\r\n          }}\r\n        >\r\n          {optItems}\r\n        </select>\r\n        Start:\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={isStart}\r\n          onChange={e => {\r\n            this.setState({ isStart: e.target.checked });\r\n          }}\r\n        />\r\n        Final:\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={isFin}\r\n          onChange={e => {\r\n            this.setState({ isFin: e.target.checked });\r\n          }}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            methods.addTopic(name, graduation, isFin, isStart);\r\n          }}\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport locE from \"../../game/loc_example\";\r\n//import locE from \"./../../game/loc_example\";\r\nimport TopicItem from \"./Topics/TopicItem\";\r\nimport Topic from \"./Topics/Topic\";\r\nimport AddTopic from \"./Topics/AddTopic\";\r\nimport exportFromJSON from \"export-from-json\";\r\nimport mlpaState from \"../../mlpa_state\";\r\n\r\nexport default class Editor extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.myStorage = window.localStorage;\r\n    this.loc = {};\r\n    this.import(true);\r\n    const { topicId, stageId } = this.getTopStag();\r\n    this.state = { currentTopic: topicId, currentStage: stageId };\r\n  }\r\n\r\n  import(firstTime) {\r\n    this.loc = locE;\r\n\r\n    this.loc.ssign({ ...mlpaState });\r\n    if (!firstTime) this.forceUpdate();\r\n  }\r\n\r\n  getTopStag() {\r\n    const topicId = this.loc.topics[0] ? this.loc.topics[0].id : null;\r\n    const stageId = this.loc._getStages(topicId)[0]\r\n      ? this.loc._getStages(topicId)[0].id\r\n      : null;\r\n    return { topicId, stageId };\r\n  }\r\n\r\n  exportFile() {\r\n    const data = this.loc;\r\n    const fileName = \"mlpa_state\";\r\n    const exportType = \"json\";\r\n\r\n    exportFromJSON({ data, fileName, exportType });\r\n  }\r\n\r\n  saveLoc() {\r\n    const locData = JSON.stringify(this.loc);\r\n    this.myStorage.setItem(\"locData\", locData);\r\n  }\r\n\r\n  addTopic = (name, gradName, isFin, isStart) => {\r\n    this.loc.cTopic(name, gradName, isFin, isStart);\r\n    this.forceUpdate();\r\n  };\r\n\r\n  addStage = (topicId, isStart) => {\r\n    this.loc.addStages(\r\n      topicId,\r\n      this.loc.cStage(\r\n        isStart,\r\n        this.loc.cStuff({ isA: true }, this.loc.cPhrase(\"space\"))\r\n      )\r\n    );\r\n    this.forceUpdate();\r\n  };\r\n  updateStage = (id, isStart) => {\r\n    const stage = this.loc.stages.find(s => s.id === id);\r\n    stage.isStart = isStart;\r\n    this.forceUpdate();\r\n  };\r\n  updateTopic = (topicId, name, gradName, isFin, isStart) => {\r\n    const topic = this.loc._getTopic(topicId);\r\n    topic.name = name;\r\n    topic.graduation = gradName;\r\n    topic.isFin = isFin;\r\n    topic.isStart = isStart;\r\n    this.forceUpdate();\r\n  };\r\n  addPhrase = (stuffId, range, text, isGeneral) => {\r\n    this.loc.addPhrases(stuffId, [this.loc.cPhrase(text, isGeneral, range)]);\r\n    this.forceUpdate();\r\n  };\r\n\r\n  updatePhrase = (stuffId, range, id, newText) => {\r\n    const phrase = this.loc.phrases.find(p => p.id === id);\r\n    if (phrase) {\r\n      phrase.text = newText;\r\n      if (!newText && !phrase.isGeneral && phrase.rangeName)\r\n        this.removePhrase(phrase.id);\r\n    } else {\r\n      this.addPhrase(stuffId, range, newText);\r\n    }\r\n    this.forceUpdate();\r\n  };\r\n\r\n  addStuff = (stageId, isA, nextStageId, changes = []) => {\r\n    const newStaff = this.loc.cStuff(\r\n      {\r\n        isA,\r\n        id: nextStageId\r\n      },\r\n      this.loc.cPhrase(\"space\"),\r\n      this.loc.cPhrase(\"generalSpace\", true)\r\n    );\r\n\r\n    this.loc.addStuffs(stageId, newStaff);\r\n\r\n    this.forceUpdate();\r\n  };\r\n  updateStuff = (id, nextStageId, ...changes) => {\r\n    const stuff = this.loc.stuffs.find(s => s.id === id);\r\n    stuff.next_stage_id = nextStageId;\r\n    changes.forEach(change => {\r\n      const changeIndex = stuff.changes.findIndex(\r\n        c => c.paramName === change.paramName\r\n      );\r\n      const thisStuffCh = stuff.changes[changeIndex];\r\n\r\n      const changeTerm = change.term;\r\n\r\n      if (!thisStuffCh) {\r\n        stuff.changes.push(this.loc.cChange(change.paramName, changeTerm));\r\n      } else {\r\n        if (changeTerm) thisStuffCh.term = changeTerm;\r\n        else stuff.changes.splice(changeIndex, 1);\r\n        console.log(thisStuffCh);\r\n      }\r\n    });\r\n    this.forceUpdate();\r\n  };\r\n\r\n  removeTopic = id => {\r\n    const index = this.loc.topics.findIndex(t => t.id === id);\r\n    this.loc.topics.splice(index, 1);\r\n    const stages = this.loc._getStages(id);\r\n    stages.forEach(s => {\r\n      this.removeStage(s.id);\r\n    });\r\n\r\n    this.setState({ currentTopic: null, currentStage: null });\r\n    this.forceUpdate();\r\n  };\r\n  removeStage = id => {\r\n    const index = this.loc.stages.findIndex(s => s.id === id);\r\n    this.loc.stages.splice(index, 1);\r\n    const stuffs = this.loc._getStuffs(id);\r\n    stuffs.forEach(s => {\r\n      if (s.next_stage_id === id) {\r\n        s.next_stage_id = null;\r\n      }\r\n      this.removeStuff(s.id);\r\n    });\r\n    this.setState({ currentStage: null });\r\n    this.forceUpdate();\r\n  };\r\n  removeStuff = id => {\r\n    const index = this.loc.stuffs.findIndex(s => s.id === id);\r\n    this.loc.stuffs.splice(index, 1);\r\n    const phrases = this.loc._getPhrases(id);\r\n    phrases.forEach(p => {\r\n      this.removePhrase(p.id);\r\n    });\r\n    this.forceUpdate();\r\n  };\r\n  removePhrase = id => {\r\n    const index = this.loc.phrases.findIndex(p => p.id === id);\r\n    this.loc.phrases.splice(index, 1);\r\n    this.forceUpdate();\r\n  };\r\n\r\n  click = id => {\r\n    const firstStage = this.loc._getStages(id)[0];\r\n    if (firstStage) this.changeStage(firstStage.id);\r\n    else this.setState({ currentTopic: id, currentStage: null });\r\n    this.forceUpdate();\r\n  };\r\n  changeStage = id => {\r\n    const stage = this.loc.stages.find(s => s.id === id);\r\n    if (stage) {\r\n      this.setState({ currentTopic: stage.topic_id, currentStage: id });\r\n    }\r\n\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    const { topics, grads, params, ranges } = this.loc;\r\n    const stat = {\r\n      grads,\r\n      params,\r\n      ranges\r\n    };\r\n\r\n    const { currentStage, currentTopic } = this.state;\r\n\r\n    const methods = {\r\n      addTopic: this.addTopic,\r\n      addStage: this.addStage,\r\n      updateStage: this.updateStage,\r\n      updateTopic: this.updateTopic,\r\n      removeTopic: this.removeTopic,\r\n      removeStage: this.removeStage,\r\n      updateStuff: this.updateStuff,\r\n      removeStuff: this.removeStuff,\r\n      getStages: this.loc._getStages,\r\n      getStuffs: this.loc._getStuffs,\r\n      getPhrases: this.loc._getPhrases,\r\n      addStuff: this.addStuff,\r\n      updatePhrase: this.updatePhrase,\r\n      addPhrase: this.addPhrase,\r\n      removePhrase: this.removePhrase,\r\n      getParam: this.loc._getParam,\r\n      checkStageFinal: this.loc.checkStageFinal\r\n    };\r\n\r\n    const topicItems = topics.map(topic => {\r\n      const isSelect = topic.id === currentTopic;\r\n      return (\r\n        <TopicItem\r\n          key={topic.id}\r\n          topic={topic}\r\n          methods={methods}\r\n          isSelect={isSelect}\r\n          click={this.click}\r\n        />\r\n      );\r\n    });\r\n\r\n    const topicView = currentTopic ? (\r\n      <Topic\r\n        allTopics={this.loc.topics}\r\n        allStages={this.loc.stages}\r\n        currentStage={currentStage}\r\n        topic={topics.find(topic => topic.id === this.state.currentTopic)}\r\n        stat={stat}\r\n        methods={methods}\r\n        goTopic={this.click}\r\n        click={this.changeStage}\r\n        changeStage={this.changeStage}\r\n      />\r\n    ) : null;\r\n\r\n    console.log(this.loc);\r\n    return (\r\n      <div>\r\n        <button onClick={() => this.import()}>import</button>\r\n        <button onClick={() => this.exportFile()}>export</button>\r\n        <br />\r\n        <AddTopic methods={methods} stat={stat} />\r\n        {topicItems}\r\n        {topicView}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport UI from \"./components/Game/UI\";\r\nimport Editor from \"./components/Editor/Editor\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <UI />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}