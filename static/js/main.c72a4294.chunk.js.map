{"version":3,"sources":["components/Game/AnswerI/AnswerI.js","components/Game/Params.js","components/Game/DialogBox/PhraseText.js","components/Game/DialogBox/DialogBox.js","components/Game/Visual/img-object.js","components/Game/Visual/scene-object.js","components/Game/Visual/Visual.js","game/parameters.js","components/Game/Loading/Loading.js","components/Game/UI.js","components/Game/Settings/FullScreen.js","components/Game/Settings/Settiings.js","components/Game/Screen.js","mlpa_engine/graduation.js","mlpa_engine/parameter.js","mlpa_engine/phrase.js","mlpa_engine/range.js","mlpa_engine/stage.js","mlpa_engine/stuff.js","mlpa_engine/topic.js","mlpa_engine/change.js","mlpa_engine/interf.js","game/loc_example.js","mlpa_engine/loc.js","game/ranges.js","game/grads.js","components/Game/Game.js","components/Editor/Topics/TopicItem.js","components/Editor/Stages/StageItem.js","components/Editor/Stuffs/StuffItem.js","components/Editor/Ranges/RangeItem.js","components/Editor/Stuffs/AddStuff.js","components/Editor/Stages/Stage.js","components/Editor/Topics/Topic.js","components/Editor/Topics/AddTopic.js","components/Editor/Editor.js","App.js","serviceWorker.js","index.js"],"names":["AnswerI","React","Component","this","props","text","click","disabled","isHiding","disClass","className","onClick","toUpperCase","PhraseText","state","isStart","curText","balText","pAnsswerd","writingFinish","isPlayer","curLen","length","newText","slice","setTimeout","setState","nextLetterLoop","title","titleClass","DialogBox","dDelay","isPAnsserd","pPhrase","cPhrase","hidingClass","hiding","cAnswer","ImgObject","image","slot","min","max","param","SceneObject","x","y","imgName","width","Visual","drawImg","obj","ctx","img","images","find","name","locFactor","height","drawImage","drawSceneLopp","isStarted","newCanvas","document","createElement","landWidth","landHeight","newCtx","getContext","key","scene","getCorrImgName","window","requestAnimationFrame","c","objects","back","legs","body","head","landSizes","progress","refs","myCanvas","loaderLoop","forEach","object","loadImage","sceneObject","Image","url","src","location","href","onload","event","target","push","loadFinished","slotName","params","corrImages","filter","corrImg","p","value","isLoaded","console","log","ref","style","Loading","UI","loc","currStageId","getStartId","getStageData","answers","stageId","interf","getInterfaceStage","replic","phrase","stuffId","newStageId","calcStuff","getCorrectPhrase","answersItems","map","answer","id","generalPhrase","update","gameUI","loadingAnim","FullScreen","render","fullScreenOn","getElementById","requestFullscreen","Settings","Screen","display","backgroundColor","marginLeft","position","children","Graduation","rangesNames","Parameter","isAchiev","Phrase","rangeName","isGeneral","stuff_id","Range","paramName","Stage","isBeen","topic_id","Stuff","next_stage_id","changes","isA","stage_id","Topic","graduation","isFin","Change","term","Interf","locE","ranges","grads","topics","stuffs","stages","phrases","lim","addStages","topicId","_getTopic","newStages","stage","concat","error","_getStages","_getStuffs","stuff","_getPhrases","_getParam","checkStageFinal","s","checkGrad","gradName","_getGrad","rName","_getRange","range","checkRange","idState","getId","type","startTopic","topic","startStage","_editParams","getGeneralPhrase","neutralPhrase","i","checkAnswToGrad","nextStage","replicStuff","ssign","data","k","addTopics","addStuffs","nextStageId","addPhrases","newStuffs","newPhrases","phraseId","grad","change","newValue","answersAll","correctNeutAchiev","correctFinal","incrrectNeutral","r","correct","addParams","cParam","addRanges","cRange","addGrads","cGrad","Game","mlpaState","defaultParams","screen","Math","newWidth","factorW","newHeight","factorH","getSizes","TopicItem","isSelect","margin","padding","cursor","color","border","StageItem","stuffText","isFinal","methods","StuffItem","allStages","currentTopic","viewAchievs","stat","goStage","allTopics","getPhrases","changesItems","inputElem","checked","onChange","e","updateStuff","Boolean","Number","marginRight","paddingTop","paddingBottom","linkItems","getStages","unshift","linkThemesItems","t","next","newCurrTopic","topicStages","removeButton","removeStuff","viewBox","updatePhrase","RangeItem","AddStuff","addStuff","currentRange","acheivs","pAnswers","changeStage","getStuffs","splitStuffs","stuffsItems","shift","generStuff","noRanges","rangesItems","getParam","align","removeStage","updateStage","nextStuff","nextPhrase","newStageStart","currentStage","stagesItems","optItems","curStage","stageView","updateTopic","removeTopic","addStage","AddTopic","addTopic","App","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c72a4294.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nexport default class AnswerI extends React.Component {\n  render() {\n    const { text, click, disabled, isHiding } = this.props;\n    const disClass = disabled ? (isHiding ? \"disabled\" : \"\") : \"undisabled\";\n    return (\n        <div>\n      <div\n        className={`answer ${disClass}`}\n        onClick={() => {\n          if (!disabled) click();\n        }}\n      >\n        {text.toUpperCase()}\n      </div>\n        </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class Params extends React.Component {\n  /* constructor() {\n    super();\n\n  }*/\n\n  correctGrads() {\n    const { grads, checkGrad } = this.props;\n    const corrGrads = grads.filter(g => checkGrad(g.name));\n\n    return corrGrads;\n  }\n  render() {\n    const { params, lim, edit } = this.props;\n\n    const correctGrads = this.correctGrads();\n    const correctGradsItems = correctGrads.map(g => (\n      <div key={g.name}>\n        \n        <span style={{ color: \"white\" }}>{g.name}</span>\n      </div>\n    ));\n\n    const paramItems = params.map(param => {\n      return param.isAchiev ? (\n        <div key={param.name}>\n          <input type=\"checkbox\" disabled checked={param.value} />{\" \"}\n          <span style={{ color: \"white\" }}>{param.name}</span>\n        </div>\n      ) : (\n        <div key={param.name}>\n          <div>\n            <button\n              onClick={() => {\n                edit(param.name, -1);\n              }}\n            >\n              -\n            </button>\n            <div\n              style={{\n                display: \"inline-block\",\n                height: \"15px\",\n                width: `${param.value * 10}px`,\n                backgroundColor: \"red\"\n              }}\n            ></div>\n            <div\n              style={{\n                display: \"inline-block\",\n                height: \"15px\",\n                width: `${(lim - param.value) * 10}px`,\n                backgroundColor: \"gray\"\n              }}\n            ></div>\n\n            <button\n              onClick={() => {\n                edit(param.name, 1);\n              }}\n            >\n              +\n            </button>\n            <span style={{ color: \"white\" }}>{param.name}</span>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div style={{position: 'absolute', top: '0'}}>\n        {paramItems}\n        {correctGradsItems}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default class PhraseText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isStart: true, curText: \"\", balText: \"\" };\n  }\n  nextLetterLoop() {\n    const { text, pAnsswerd, writingFinish, isPlayer } = this.props;\n\n    const { curText } = this.state;\n    if (text !== curText) {\n      const curLen = curText.length;\n      const newText = text.slice(0, curLen + 1);\n\n      const balText = text.slice(curLen + 1);\n\n      setTimeout(() => {\n        this.setState({ curText: newText, isStart: false, balText });\n        this.nextLetterLoop();\n      }, 20);\n    } else isPlayer ? pAnsswerd() : writingFinish();\n  }\n  render() {\n    const { isPlayer } = this.props;\n    const { isStart, curText, balText } = this.state;\n    if (isStart) this.nextLetterLoop();\n    const title = isPlayer ? \"Я\" : \"Она\";\n    const titleClass = isPlayer ? \"text-p\" : \"text-c\";\n    return (\n      <div className=\"phrase-text\">\n        <span className={titleClass}>{title}/</span> {curText}\n        <span className=\"bal-text\">{balText}</span>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport PhraseText from \"./PhraseText\";\n\nexport default class DialogBox extends React.Component {\n  constructor() {\n    super();\n    this.state = { isPAnsserd: false };\n  }\n\n  pAnsswerd = () => {\n    const { dDelay } = this.props;\n    setTimeout(() => {\n      this.setState({ isPAnsserd: true });\n    }, dDelay);\n  };\n  render() {\n    const { pPhrase, cPhrase, writingFinish, hiding } = this.props;\n    const { isPAnsserd } = this.state;\n\n    const hidingClass = hiding ? \"phrase-hiding\" : \"\";\n\n    const cAnswer = isPAnsserd ? (\n      <PhraseText text={cPhrase} writingFinish={writingFinish} />\n    ) : null;\n\n    return (\n      <div className=\"dialog-box\">\n        <div className={`phrase-interface ${hidingClass}`}>\n          <div className=\"phrase-content\">\n            <PhraseText text={pPhrase} isPlayer pAnsswerd={this.pAnsswerd} />\n            {cAnswer}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export default class ImgObject {\n  constructor(image, slot = \"\", min, max, param = null) {\n    this.image = image;\n    this.slot = slot;\n    this.min = min;\n    this.max = max;\n    this.param = param;\n  }\n}\n","export default class SceneObject {\n  constructor(x = 0, y = 0, imgName, width) {\n    this.x = x;\n    this.y = y;\n    this.imgName = imgName;\n    this.width = width\n  }\n}\n","import React from \"react\";\nimport ImgObject from \"./img-object\";\nimport SceneObject from \"./scene-object\";\nimport \"./style.css\";\n\nimport {\n  PARAM_EQUILIBRIUM,\n  PARAM_DETERMINATION\n} from \"../../../game/parameters\";\n\nexport default class Visual extends React.Component {\n  constructor(props) {\n    super(props);\n    this.c = null;\n    this.ctx = null;\n    this.objects = [\n      new ImgObject(\"road\", \"back\"),\n      new ImgObject(\"legs\", \"legs\"),\n      new ImgObject(\"doubt\", \"body\", 1, 5, PARAM_DETERMINATION),\n      new ImgObject(\"uncertainty\", \"body\", 6, 10, PARAM_DETERMINATION),\n      new ImgObject(\"readiness\", \"body\", 11, 15, PARAM_DETERMINATION),\n      //new ImgObject(\"tension\", \"body\"),\n      new ImgObject(\"squinted\", \"head\", 1, 5, PARAM_EQUILIBRIUM),\n      new ImgObject(\"fear\", \"head\", 6, 10, PARAM_EQUILIBRIUM),\n      new ImgObject(\"horror\", \"head\", 11, 15, PARAM_EQUILIBRIUM),\n     /* new ImgObject(\"apathy\", \"head\"),\n      new ImgObject(\"trembling\", \"head\")*/\n    ];\n\n    const girlX = 800;\n    const girlY = 385;\n    this.scene = {\n      back: new SceneObject(0, -200, \"road\", 1920),\n      legs: new SceneObject(girlX, girlY, \"legs\", 200),\n      body: new SceneObject(girlX, girlY, \"doubt\", 200),\n      head: new SceneObject(girlX, girlY, \"horror\", 200)\n    };\n    this.images = [];\n\n    const { landWidth, landHeight } = this.props.landSizes;\n\n    this.landWidth = landWidth;\n    this.landHeight = landHeight;\n    /*\n    this.startCam = {\n      zoom: 23,\n      x: -872,\n      y: -400\n    };\n\n    this.endCam = {\n      zoom: 1,\n      x: 0,\n      y: 0\n    };*/\n\n    this.progress = 1;\n\n    this.state = { isStarted: false };\n  }\n  async componentDidMount() {\n    if (!this.c && this.refs.myCanvas) {\n      this.c = this.refs.myCanvas;\n      this.ctx = this.c.getContext(\"2d\");\n\n      this.loaderLoop();\n    }\n  }\n\n  loaderLoop() {\n    this.objects.forEach(object => {\n      this.loadImage(object);\n    });\n  }\n\n  loadImage(sceneObject) {\n    const { slot, image } = sceneObject;\n    let img = new Image();\n    let url = slot ? `${slot}/` : \"\";\n    url += image;\n    img.src = `${window.location.href}/img/${url}.png`;\n    img.onload = event => {\n      const { target } = event;\n      this.images.push({ name: image, img: target });\n      if (this.images.length === this.objects.length) {\n        const { loadFinished } = this.props;\n        loadFinished();\n      }\n    };\n  }\n\n  getCorrImgName(slotName) {\n    const { params } = this.props;\n    const corrImages = this.objects.filter(obj => obj.slot === slotName);\n    let corrImg = corrImages.find(obj => {\n      if (obj.param) {\n        const param = params.find(p => p.name === obj.param);\n\n        return param.value <= obj.max && param.value >= obj.min;\n      } else return false;\n    });\n\n    if (!corrImg) {\n      corrImg = corrImages.find(img => !img.param);\n    }\n    return corrImg.image;\n  }\n\n  drawImg = (obj, ctx) => {\n    const { img } = this.images.find(image => image.name === obj.imgName);\n    const { width, x, y } = obj;\n\n    const locFactor = width / img.width;\n    const height = img.height * locFactor;\n\n    const camZoom = 3\n    const camX = -560\n    const camY = -260\n\n    ctx.drawImage(img, (x + camX) * camZoom, (y + camY) * camZoom, width * camZoom, height * camZoom);\n  };\n\n  drawSceneLopp = () => {\n    const { isStarted } = this.state;\n    if (!isStarted) this.setState({ isStarted: true });\n\n    const newCanvas = document.createElement(\"CANVAS\");\n    newCanvas.width = this.landWidth;\n    newCanvas.height = this.landHeight;\n    const newCtx = newCanvas.getContext(\"2d\");\n\n    for (let key in this.scene) {\n      const obj = this.scene[key];\n      obj.imgName = this.getCorrImgName(key);\n      this.drawImg(obj, newCtx);\n    }\n\n    this.ctx.drawImage(newCanvas, 0, 0);\n\n    window.requestAnimationFrame(this.drawSceneLopp);\n  };\n\n  render() {\n    const { width, height, isLoaded } = this.props;\n    const { isStarted } = this.state;\n\n    if (isLoaded && !isStarted) {\n      console.log(\"STARTED\");\n      window.requestAnimationFrame(this.drawSceneLopp);\n    }\n\n    const className = isLoaded ? \"loaded\" : \"\";\n\n    return (\n      <div>\n        <canvas\n          className={className}\n          ref=\"myCanvas\"\n          width={this.landWidth}\n          height={this.landHeight}\n          style={{ width, height }}\n        ></canvas>\n      </div>\n    );\n  }\n}\n","export const PARAM_DETERMINATION = \"РЕШИМОСТЬ\";\nexport const PARAM_EQUILIBRIUM = \"УРАВНОВЕШЕННОСТЬ\";\n\nexport const PARAM_DOG = \"УЗНАЛ СОБ МЕРТВА\";\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default class Loading extends React.Component {\n  render() {\n    return <div className=\"lds-dual-ring\"></div>;\n  }\n}\n","import React from \"react\";\n\nimport Params from \"./Params\";\nimport AnswerI from \"./AnswerI/AnswerI\";\nimport DialogBox from \"./DialogBox/DialogBox\";\nimport \"./style.css\";\nimport Visual from \"./Visual/Visual\";\nimport Loading from \"./Loading/Loading\";\n\nexport default class UI extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loc = props.loc;\n    const currStageId = this.loc.getStartId();\n    const { cPhrase, answers } = this.getStageData(currStageId);\n    this.state = {\n      cPhrase,\n      pPhrase:\n        \"О чем ты сейчас думаешь? О чем ты сейчас думаешь? О чем ты сейчас думаешь? О чем ты сейчас думаешь? О чем ты сейчас думаешь? О чем ты сейчас думаешь?\",\n      answers,\n      disabled: true,\n      currStageId,\n      isHiding: false,\n      dDelay: 2000,\n      isLoaded: false\n    };\n  }\n  getStageData(stageId) {\n    const interf = this.loc.getInterfaceStage(stageId);\n    const { answers, replic } = interf;\n    const { phrase } = replic;\n\n    return {\n      cPhrase: phrase,\n      answers\n    };\n  }\n  update(stuffId) {\n    const newStageId = this.loc.calcStuff(stuffId);\n    const pPhrase = this.loc.getCorrectPhrase(stuffId);\n    const { cPhrase, answers } = this.getStageData(newStageId);\n\n    this.setState({\n      isHiding: true,\n      disabled: true\n    });\n\n    setTimeout(() => {\n      this.setState({\n        pPhrase,\n        cPhrase,\n        currStageId: newStageId,\n        answers,\n        isHiding: false,\n        dDelay: 500 //ДОБАВИТЬ ЗАВИСИМОСТЬ ОТ ПОТРЯСЕНИЯ\n      });\n    }, 500);\n  }\n\n  writingFinish() {\n    this.setState({ disabled: false });\n  }\n  render() {\n    const {\n      pPhrase,\n      cPhrase,\n      currStageId,\n      answers,\n      disabled,\n      isHiding,\n      dDelay,\n      isLoaded\n    } = this.state;\n    const answersItems = answers.map(answer => {\n      return (\n        <AnswerI\n          key={answer.id}\n          text={answer.generalPhrase}\n          disabled={disabled}\n          isHiding={isHiding}\n          click={() => {\n            this.update(answer.id);\n          }}\n        />\n      );\n    });\n\n    const { width, height, landSizes } = this.props;\n\n    const gameUI = isLoaded ? (\n      <div>\n        <div className=\"answers\">{answersItems}</div>\n        <DialogBox\n          hiding={isHiding}\n          key={currStageId}\n          pPhrase={pPhrase}\n          cPhrase={cPhrase}\n          dDelay={dDelay}\n          writingFinish={() => {\n            this.writingFinish();\n          }}\n        />\n      </div>\n    ) : null;\n\n    const loadingAnim = !isLoaded ? <Loading /> : null;\n\n    return (\n      <div>\n        <Visual\n          params={this.loc.params}\n          width={width}\n          height={height}\n          isLoaded={isLoaded}\n          loadFinished={() => this.setState({ isLoaded: true })}\n          landSizes={landSizes}\n        />\n        {gameUI}\n\n        {loadingAnim}\n      </div>\n    );\n  }\n}\n\n/*\n <Params\n          params={this.loc.params}\n          lim={this.loc.lim}\n          edit={(paramName, term) => {\n            this.loc._editParams([this.loc.cChange(paramName, term)]);\n            this.forceUpdate();\n          }}\n          grads={this.loc.grads}\n          checkGrad={this.loc.checkGrad}\n        />\n*/\n","import React from \"react\";\n\nexport default class FullScreen extends React.Component {\n  fullScreenOn() {\n    const screenDom = document.getElementById(\"screenDom\");\n    screenDom.requestFullscreen();\n  }\n  render = () => {\n    return (\n      <button\n        onClick={() => {\n          this.fullScreenOn();\n        }}\n      >\n        Full Screen\n      </button>\n    );\n  };\n}\n","import React from \"react\";\nimport FullScreen from \"./FullScreen\";\n\nexport default class Settings extends React.Component {\n  render() {\n    return (\n      <div className=\"settings\">\n        <FullScreen />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Settings from \"./Settings/Settiings\";\nimport \"./Settings/style.css\";\n\nexport default class Screen extends React.Component {\n  render() {\n    const { width, height } = this.props;\n    const style = {\n      width,\n      height,\n      display: \"inline-block\",\n      backgroundColor: \"black\",\n\n      marginLeft: `calc(50% - ${width / 2}px)`,\n      position: \"absolute\"\n      //overflow: \"hidden\"\n    };\n    return (\n      <div id=\"screenDom\">\n        <div style={style}>\n          {this.props.children}\n          <Settings />\n        </div>\n      </div>\n    );\n  }\n}\n","export default class Graduation {\n  constructor(name, rangesNames) {\n    this.name = name;\n    this.rangesNames = rangesNames;\n  }\n}\n","export default class Parameter {\n  constructor(name, value, isAchiev = false) {\n    this.name = name;\n    this.value = value;\n    this.isAchiev = isAchiev;\n  }\n}\n","export default class Phrase {\n  constructor(rangeName, text, isGeneral, id) {\n    this.rangeName = rangeName;\n    this.text = text;\n    this.isGeneral = isGeneral;\n    this.id = id;\n  }\n  stuff_id = null;\n}\n","export default class Range {\n  constructor(name, paramName, min, max) {\n    this.name = name;\n    this.paramName = paramName;\n    this.min = min;\n    this.max = max;\n  }\n}\n","export default class Stage {\n  constructor(isStart, id) {\n    this.id = id;\n    this.isStart = isStart\n  }\n  isBeen = false;\n  topic_id = null;\n}\n","export default class Stuff {\n  constructor(next_stage_id, changes = [], isA = false, id) {\n    this.next_stage_id = next_stage_id;\n    this.changes = changes;\n    this.isA = isA;\n    this.id = id;\n  }\n  stage_id = null;\n}\n","export default class Topic {\n  constructor(name, graduation, isFin, isStart, id) {\n    this.name = name;\n    this.graduation = graduation;\n    this.isFin = isFin;\n    this.isStart = isStart;\n    this.id = id;\n  }\n}\n","export default class Change {\n  constructor(paramName, term) {\n    this.paramName = paramName;\n    this.term = term;\n  }\n}\n","export default class Interf {\n  constructor(generalPhrase, phrase, id) {\n    this.generalPhrase = generalPhrase;\n    this.phrase = phrase;\n    this.id = id;\n  }\n}\n","import { Loc } from \"./../mlpa_engine\";\n\nimport {\n  PARAM_EQUILIBRIUM,\n  PARAM_DETERMINATION,\n  PARAM_DOG\n} from \"./parameters\";\n\nimport {\n  RANGE_PANIC,\n  RANGE_TENSION,\n  RANGE_STABILITY,\n  RANGE_APATHY,\n  RANGE_UNCERTAINTY,\n  RANGE_CONFIDENCE,\n  RANGE_DOG\n} from \"./ranges\";\n\nimport {\n  GRAD_PAN_APA,\n  GRAD_PAN_UNC,\n  GRAD_PAN_CON,\n  GRAD_TEN_APA,\n  GRAD_TEN_UNC,\n  GRAD_TEN_CON,\n  GRAD_STAB_APA,\n  GRAD_STAB_UNC,\n  GRAD_STAB_CON,\n  GRAD_DOG\n} from \"./grads\";\n\nconst locE = new Loc();\nlocE.addParams(\n  locE.cParam(PARAM_DETERMINATION, 2),\n  locE.cParam(PARAM_EQUILIBRIUM, 4),\n\n  locE.cParam(PARAM_DOG, false, true)\n);\n\nlocE.addRanges(\n  locE.cRange(RANGE_PANIC, 1, 5, PARAM_EQUILIBRIUM),\n  locE.cRange(RANGE_TENSION, 6, 10, PARAM_EQUILIBRIUM),\n  locE.cRange(RANGE_STABILITY, 11, 15, PARAM_EQUILIBRIUM),\n\n  locE.cRange(RANGE_APATHY, 1, 5, PARAM_DETERMINATION),\n  locE.cRange(RANGE_UNCERTAINTY, 6, 10, PARAM_DETERMINATION),\n  locE.cRange(RANGE_CONFIDENCE, 11, 15, PARAM_DETERMINATION),\n\n  locE.cRange(RANGE_DOG, true, true, PARAM_DOG)\n);\nlocE.addGrads(\n  locE.cGrad(GRAD_PAN_APA, RANGE_PANIC, RANGE_APATHY),\n  locE.cGrad(GRAD_PAN_UNC, RANGE_PANIC, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_PAN_CON, RANGE_PANIC, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_TEN_APA, RANGE_TENSION, RANGE_APATHY),\n  locE.cGrad(GRAD_TEN_UNC, RANGE_TENSION, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_TEN_CON, RANGE_TENSION, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_STAB_APA, RANGE_STABILITY, RANGE_APATHY),\n  locE.cGrad(GRAD_STAB_UNC, RANGE_STABILITY, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_STAB_CON, RANGE_STABILITY, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_DOG, RANGE_DOG)\n);\n\nexport default locE;\n","import Parameter from \"./parameter\";\nimport Range from \"./range\";\nimport Graduation from \"./graduation\";\nimport Phrase from \"./phrase\";\nimport Stuff from \"./stuff\";\nimport Change from \"./change\";\nimport Stage from \"./stage\";\nimport Topic from \"./topic\";\nimport Interf from \"./interf\";\n\nexport default class Loc {\n  params = [];\n  ranges = [];\n  grads = [];\n  topics = [];\n\n  stuffs = [];\n  stages = [];\n  phrases = [];\n\n  lim = 15;\n\n  cParam(name, value, isAchiev) {\n    return new Parameter(name, value, isAchiev);\n  }\n  addParams(...params) {\n    this.params = this.params.concat(params);\n  }\n\n  cRange(name, min, max, paramName) {\n    return new Range(name, paramName, min, max);\n  }\n  addRanges(...ranges) {\n    this.ranges = this.ranges.concat(ranges);\n  }\n\n  cGrad(name, ...rangesNames) {\n    return new Graduation(name, rangesNames);\n  }\n  addGrads(...grads) {\n    this.grads = this.grads.concat(grads);\n  }\n\n  cTopic(name, gradName, isFin, isStart, ...stages) {\n    const topicId = this.getId(\"topics\");\n    this.addTopics(new Topic(name, gradName, isFin, isStart, topicId));\n    this.addStages(topicId, ...stages);\n  }\n\n  addTopics(...topics) {\n    this.topics = this.topics.concat(topics);\n  }\n\n  cStage(isStart, ...answers) {\n    const stageId = this.getId(\"stages\");\n    this.addStuffs(stageId, ...answers);\n    return new Stage(isStart, stageId);\n  }\n\n  addStages = (topicId, ...stages) => {\n    if (this._getTopic(topicId)) {\n      const newStages = stages.map(stage => {\n        return { ...stage, topic_id: topicId };\n      });\n      this.stages = this.stages.concat(newStages);\n    } else console.error(`Topic ${topicId} not found!`);\n  };\n\n  cStuff(props, ...phrases) {\n    const { id: nextStageId, changes = [], isA } = props ? props : {};\n    const stuffId = this.getId(\"stuffs\");\n\n    this.addPhrases(stuffId, phrases);\n    return new Stuff(\n      nextStageId,\n      !isA ? changes.filter(c => c.term) : [],\n      isA,\n      stuffId\n    );\n  }\n\n  addStuffs(stageId, ...stuffs) {\n    const newStuffs = stuffs.map(stuff => ({ ...stuff, stage_id: stageId }));\n    this.stuffs = this.stuffs.concat(newStuffs);\n  }\n\n  addPhrases(stuffId, phrases) {\n    const newPhrases = phrases.map(phrase => ({\n      ...phrase,\n      stuff_id: stuffId\n    }));\n\n    this.phrases = this.phrases.concat(newPhrases);\n  }\n\n  cPhrase(text, isGeneral = false, rangeName) {\n    const phraseId = this.getId(\"phrases\");\n    return new Phrase(rangeName, text, isGeneral, phraseId);\n  }\n\n  cChange(paramName, term) {\n    return new Change(paramName, term);\n  }\n\n  _getTopic(id) {\n    return this.topics.find(topic => topic.id === id);\n  }\n  _getStages = topicId => {\n    return this.stages.filter(stage => stage.topic_id === topicId);\n  };\n\n  _getStuffs = stageId => {\n    return this.stuffs.filter(stuff => stuff.stage_id === stageId);\n  };\n\n  _getPhrases = stuffId => {\n    return this.phrases.filter(phrase => phrase.stuff_id === stuffId);\n  };\n\n  _getParam = name => {\n    return this.params.find(param => param.name === name);\n  };\n\n  _getRange(name) {\n    return this.ranges.find(range => range.name === name);\n  }\n\n  _getGrad(name) {\n    return this.grads.find(grad => grad.name === name);\n  }\n\n  _editParams(changes) {\n    changes.forEach(change => {\n      const param = this._getParam(change.paramName);\n\n      if (param.isAchiev) {\n        param.value = true;\n      } else {\n        const newValue = param.value + change.term;\n        if (newValue > this.lim) {\n          param.value = this.lim;\n        } else if (newValue < 1) {\n          param.value = 1;\n        } else param.value = newValue;\n      }\n    });\n  }\n\n  checkStageFinal = stageId => {\n    const stuffs = this._getStuffs(stageId);\n    return !stuffs.find(s => !s.isA);\n  };\n\n  checkRange(rangeName) {\n    const range = this._getRange(rangeName);\n    const param = this._getParam(range.paramName);\n    const res = param.isAchiev\n      ? param.value === range.max\n      : param.value >= range.min && param.value <= range.max;\n    return res;\n  }\n\n  checkGrad = gradName => {\n    const grad = this._getGrad(gradName);\n    const ranges = grad.rangesNames.map(rName => this._getRange(rName));\n    const params = [];\n    ranges.forEach(range => {\n      if (!params[range.paramName]) {\n        params[range.paramName] = this.checkRange(range.name);\n      }\n    });\n    for (let key in params) {\n      if (!params[key]) return false;\n    }\n    return true;\n  };\n\n  idState = {};\n  getId = type => {\n    if (!this.idState[type]) this.idState[type] = 0;\n    this.idState[type]++;\n    return this.idState[type];\n  };\n\n  getStartId = () => {\n    const startTopic = this.topics.find(topic => topic.isStart);\n    const stages = this._getStages(startTopic.id);\n    const startStage = stages.find(stage => stage.isStart);\n    return startStage ? startStage.id : null;\n  };\n\n  calcStuff = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n\n    this._editParams(stuff.changes);\n    return stuff.next_stage_id;\n  };\n\n  getGeneralPhrase = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n    const phrases = this._getPhrases(stuff.id);\n    const generalPhrase = phrases.find(phrase => phrase.isGeneral);\n    return generalPhrase?.text;\n  };\n\n  getCorrectPhrase = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n    const phrases = this._getPhrases(stuff.id);\n    const neutralPhrase = phrases.find(phrase => !phrase.rangeName);\n    for (let i in phrases) {\n      const phrase = phrases[i];\n      if (phrase.rangeName && this.checkRange(phrase.rangeName))\n        return phrase.text;\n    }\n\n    return neutralPhrase.text;\n  };\n\n  _getCorrectStuffs(id) {\n    //НЕОБХОДИМОЕ ЧИСЛО ОТВЕТОВ\n    const necessity = 3;\n    const stuffs = this._getStuffs(id);\n\n    //ОГРАНИЧЕНИЕ ПО *БЫЛ ЗДЕСЬ*\n    const answersAll = stuffs.filter(stuff => {\n      if (stuff.isA) return false;\n      else {\n        const stage = this.stages.find(s => s.id === stuff.next_stage_id);\n        return !stage.isBeen;\n      }\n    });\n\n    const correctNeutAchiev = [];\n    const correctFinal = [];\n    const incrrectNeutral = [];\n\n    answersAll.forEach(stuff => {\n      const nextStage = this.stages.find(\n        stage => stage.id === stuff.next_stage_id\n      );\n      const topic = this._getTopic(nextStage.topic_id);\n      const grad = this._getGrad(topic.graduation);\n      const ranges = grad.rangesNames(rName => this._getRange(rName));\n      const params = ranges.rangesNames(r => this._getParam(r.paramName));\n\n      const isAchiev = params.find(p => p.isAchiev);\n      const correct = this.checkGrad(grad.name);\n      const { isFin } = topic;\n\n      if (correct) {\n        //подходящее по градации\n        //если не финал\n        if (!isFin) correctNeutAchiev.push(stuff);\n        //если финал\n        else correctFinal.push(stuff);\n      } else if (!isAchiev && !isFin) {\n        //неподходящие если не ачивный и не финальный\n        incrrectNeutral.push(stuff);\n      }\n    });\n\n    let resultStuffs = correctNeutAchiev.concat(incrrectNeutral);\n    //если пришло время для финалочек\n    if (false) resultStuffs = resultStuffs.concat(correctFinal);\n    return resultStuffs.slice(0, necessity);\n  }\n\n  checkAnswToGrad = stuff => {\n    const nextStage = this.stages.find(\n      stage => stage.id === stuff.next_stage_id\n    );\n    const topic = this._getTopic(nextStage.topic_id);\n    return this.checkGrad(topic.graduation);\n  };\n\n  //ДОБАВИТЬ БЕЗУСЛОВНЫЕ ОГРАНИЧЕНИЯ ДЛЯ ТЕМ ЗАВИСИМЫХ ОТ АЧИВОК\n  getInterfaceStage = id => {\n    //ДОБАВИТЬ ПОДКЛЮЧЕНИЕ ФИНАЛОЧЕК КОГДА НАДО\n\n    const stage = this.stages.find(s => s.id === id);\n    stage.isBeen = true;\n\n    const stuffs = this._getStuffs(id);\n\n    const replicStuff = stuffs.find(stuff => stuff.isA);\n    const replic = new Interf(null, this.getCorrectPhrase(replicStuff.id));\n\n    //ОГРАНИЧЕНИЯ ПО *БЫЛ ТУТ*\n    const answersAll = stuffs.filter(stuff => {\n      return !stuff.isA;\n    });\n\n    //РЕЗУЛЬТАТ\n    const resAnswers = answersAll;\n\n    const interf = {\n      answers: resAnswers.map(stuff => {\n        return new Interf(\n          this.getGeneralPhrase(stuff.id),\n          this.getCorrectPhrase(stuff.id),\n          stuff.id\n        );\n      }),\n      replic\n    };\n\n    return interf;\n  };\n\n  ssign = data => {\n    for (let key in data) {\n      if (![\"params\", \"grads\", \"ranges\"].find(k => k === key)) {\n        this[key] = data[key];\n      }\n    }\n  };\n}\n","export const RANGE_PANIC = \"ПАНИКА\";\nexport const RANGE_TENSION = \"НАПРЯЖЕННОСТЬ\";\nexport const RANGE_STABILITY = \"СТАБИЛЬНОСТЬ\";\n\nexport const RANGE_APATHY = \"АПАТИЯ\";\nexport const RANGE_UNCERTAINTY = \"НЕУВЕРЕННОСТЬ\";\nexport const RANGE_CONFIDENCE = \"УВЕРЕННОСТЬ\";\n\nexport const RANGE_DOG = \"ЗНАЕТ ПРО СОБАКУ\";\n","export const GRAD_PAN_APA = \"ПАН АПАТ\";\nexport const GRAD_PAN_UNC = \"ПАН НЕУВ\";\nexport const GRAD_PAN_CON = \"ПАН УВ\";\n\nexport const GRAD_TEN_APA = \"НАПР АПАТ\";\nexport const GRAD_TEN_UNC = \"НАПР НЕУВ\";\nexport const GRAD_TEN_CON = \"НАПР УВ\";\n\nexport const GRAD_STAB_APA = \"СТАБ АПАТ\";\nexport const GRAD_STAB_UNC = \"СТАБ НЕУВ\";\nexport const GRAD_STAB_CON = \"СТАБ УВ\";\n\nexport const GRAD_DOG = \"ЗНАЕТ ПРО СОБАКУ\";\n","import React from \"react\";\nimport UI from \"./UI\";\nimport Screen from \"./Screen\";\nimport locE from \"../../game/loc_example\";\nimport mlpaState from \"../../mlpa_state\";\n\nexport default class Game extends React.Component {\n  constructor() {\n    super();\n\n    this.landWidth = 1920;\n    this.landHeight = 1080;\n\n    this.loc = locE;\n    this.loc.ssign(mlpaState);\n    this.defaultParams();\n  }\n  defaultParams() {\n    this.loc.params.forEach(p => {\n      if (!p.isAchiev) p.value = 7;\n    });\n  }\n  getSizes() {\n    const { width, height } = window.screen;\n\n    const max = Math.max(width, height);\n    const min = Math.min(width, height);\n\n    let newWidth = max;\n\n    const factorW = newWidth / this.landWidth;\n    let newHeight = this.landHeight * factorW;\n    if (newHeight > min) {\n      newHeight = min;\n      const factorH = newHeight / this.landHeight;\n      newWidth = this.landWidth * factorH;\n    }\n    return { newWidth, newHeight };\n  }\n  render() {\n    const { newWidth, newHeight } = this.getSizes();\n    return (\n      <Screen width={newWidth} height={newHeight}>\n        <UI\n          loc={this.loc}\n          width={newWidth}\n          height={newHeight}\n          landSizes={{ landWidth: this.landWidth, landHeight: this.landHeight }}\n        />\n      </Screen>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class TopicItem extends React.Component {\n  render() {\n    const { topic, isSelect, click } = this.props;\n\n    const border = topic.isStart\n      ? \"solid 0.3rem red\"\n      : topic.isFin\n      ? \"solid 0.3rem aqua\"\n      : \"none\";\n\n    const style = {\n      backgroundColor: isSelect ? \"green\" : \"gray\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      cursor: \"pointer\",\n      color: \"white\",\n      border\n    };\n    return (\n      <div\n        style={style}\n        onClick={() => {\n          click(topic.id);\n        }}\n      >\n        {topic.name}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class StageItem extends React.Component {\n  render() {\n    const { stage, click, isSelect, stuffText, methods } = this.props;\n\n    const isFinal = methods.checkStageFinal(stage.id);\n    const border = stage.isStart\n      ? \"solid 0.3rem red\"\n      : isFinal\n      ? \"solid 0.3rem aqua\"\n      : \"none\";\n\n    const style = {\n      backgroundColor: isSelect ? \"blue\" : \"gray\",\n      cursor: \"pointer\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      color: \"white\",\n      border\n    };\n    return (\n      <div\n        onClick={() => {\n          click(stage.id);\n        }}\n        style={style}\n      >\n        {stuffText(stage.id)}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class StuffItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const nextStage = props.allStages.find(\n      s => s.id === props.stuff.next_stage_id\n    );\n    const currentTopic = nextStage?.topic_id;\n\n    this.state = {\n      currentTopic,\n      viewAchievs: false\n    };\n  }\n  render() {\n    const {\n      stuff,\n      methods,\n      range,\n      stat,\n      goStage,\n      allStages,\n      stuffText,\n      allTopics\n    } = this.props;\n\n    const phrase = methods.getPhrases(stuff.id).find(p => {\n      return (\n        p.rangeName === range ||\n        (range === \"none\" && !p.rangeName) ||\n        (range === \"GENERAL\" && p.isGeneral)\n      );\n    });\n\n    const { changes } = stuff;\n    const { currentTopic, viewAchievs } = this.state;\n\n    const changesItems = !stuff.isA\n      ? stat.params.map(p => {\n          const c = changes.find(change => change.paramName === p.name);\n\n          const term = c ? c.term : p.isAchiev ? false : 0;\n\n          const inputElem = p.isAchiev ? (\n            <input\n              type=\"checkbox\"\n              checked={term}\n              onChange={e => {\n                methods.updateStuff(stuff.id, stuff.next_stage_id, {\n                  paramName: p.name,\n                  term: Boolean(e.target.checked)\n                });\n              }}\n            />\n          ) : (\n            <input\n              type=\"number\"\n              style={{ width: \"40px\" }}\n              value={term}\n              onChange={e => {\n                methods.updateStuff(stuff.id, stuff.next_stage_id, {\n                  paramName: p.name,\n                  term: Number(e.target.value)\n                });\n              }}\n            />\n          );\n\n          if (!viewAchievs && p.isAchiev) return null;\n          return (\n            <span\n              style={{\n                display: \"inline-block\",\n                padding: \"0.5rem\",\n                backgroundColor: \"#ffccff\",\n                marginRight: \"0.5rem\"\n              }}\n              key={p.name}\n            >\n              {p.name}:{inputElem}\n            </span>\n          );\n        })\n      : null;\n\n    const style = {\n      backgroundColor: stuff.isA ? \"#ccffff\" : \"#D3D3D3\",\n      cursor: \"pointer\",\n      margin: \"0.2rem\",\n\n      paddingTop: stuff.isA ? \"1rem\" : \"0.5rem\",\n      paddingBottom: stuff.isA ? \"1rem\" : \"0.5rem\",\n\n      display: \"inline-block\",\n      width: \"40%\"\n    };\n\n    const text = phrase ? phrase.text : \"\";\n\n    const linkItems = methods.getStages(this.state.currentTopic).map(s => {\n      return (\n        <option value={s.id} key={s.id}>\n          {stuffText(s.id)}\n        </option>\n      );\n    });\n\n    if (!allStages.find(s => s.id === stuff.next_stage_id)) {\n      linkItems.unshift(\n        <option value={\"error\"} key=\"0\">\n          {stuff.next_stage_id} NOT FOUND\n        </option>\n      );\n    }\n\n    const linkThemesItems = allTopics.map(t => {\n      return (\n        <option value={t.id} key={t.id}>\n          {t.name}\n        </option>\n      );\n    });\n\n    const next = !stuff.isA ? (\n      <div style={{ display: \"inline-block\", marginRight: \"0.5rem\" }}>\n        <div\n          style={{\n            display: \"inline-block\",\n            backgroundColor: \"red\",\n            cursor: \"pointer\",\n            color: \"white\"\n          }}\n          onClick={() => {\n            goStage(stuff.next_stage_id);\n          }}\n        >\n          ===>\n        </div>\n        {currentTopic}\n\n        <select\n          value={this.state.currentTopic}\n          onChange={e => {\n            const newCurrTopic = Number(e.target.value);\n            this.setState({ currentTopic: newCurrTopic });\n            const topicStages = methods.getStages(newCurrTopic);\n\n            if (\n              topicStages.length &&\n              !topicStages.find(s => s.id === stuff.next_stage_id)\n            )\n              methods.updateStuff(stuff.id, topicStages[0].id);\n          }}\n        >\n          {linkThemesItems}\n        </select>\n\n        <select\n          value={stuff.next_stage_id}\n          onChange={e => {\n            methods.updateStuff(stuff.id, Number(e.target.value));\n          }}\n        >\n          {linkItems}\n        </select>\n      </div>\n    ) : null;\n\n    const removeButton = !stuff.isA ? (\n      <button onClick={() => methods.removeStuff(stuff.id)}>X</button>\n    ) : null;\n\n    const viewBox = stuff.isA ? null : (\n      <input\n        type=\"checkbox\"\n        checked={viewAchievs}\n        onChange={e => {\n          this.setState({ viewAchievs: e.target.checked });\n        }}\n      />\n    );\n\n    return (\n      <div>\n        {removeButton}\n        <div style={style}>\n          ({stuff.id}){\" \"}\n          <input\n            value={text}\n            style={{ width: \"90%\" }}\n            onChange={e => {\n              methods.updatePhrase(\n                stuff.id,\n                range === \"none\" ? null : range,\n                phrase ? phrase.id : null,\n                e.target.value\n              );\n            }}\n          />\n        </div>\n        {next}\n        {changesItems}\n        {viewBox}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class RangeItem extends React.Component {\n  render() {\n    const { range, isSelect, click } = this.props;\n\n    const style = {\n      backgroundColor: isSelect ? \"orange\" : \"gray\",\n      cursor: \"pointer\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      color: \"white\"\n    };\n    return (\n      <div\n        style={style}\n        onClick={() => {\n          click(range.name);\n        }}\n      >\n        {range.name}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class AddStuff extends React.Component {\n  render() {\n    const { methods, stageId, topic } = this.props;\n\n    const nextStageId = methods.getStages(topic.id)[0].id;\n\n    return (\n      <div>\n        <button\n          onClick={() => {\n            methods.addStuff(stageId, false, nextStageId, []);\n          }}\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport StuffItem from \"../Stuffs/StuffItem\";\nimport RangeItem from \"../Ranges/RangeItem\";\nimport AddStuff from \"../Stuffs/AddStuff\";\n\nexport default class Stage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { currentRange: \"none\", acheivs: false };\n  }\n\n  click = name => {\n    this.setState({ currentRange: name });\n  };\n  splitStuffs(stuffs) {\n    const answer = stuffs.find(stuff => stuff.isA);\n    const pAnswers = stuffs.filter(stuff => !stuff.isA);\n    return { answer, pAnswers };\n  }\n  render() {\n    const {\n      stage,\n      methods,\n      stat,\n      changeStage,\n      allStages,\n      stuffText,\n      topic,\n      allTopics\n    } = this.props;\n\n    const stuffs = methods.getStuffs(stage.id);\n\n    const { answer, pAnswers } = this.splitStuffs(stuffs);\n\n    const stuffsItems = [answer, ...pAnswers].map(stuff => {\n      const res = stuff ? (\n        <StuffItem\n          stat={stat}\n          range={this.state.currentRange}\n          methods={methods}\n          key={stuff.id}\n          stuff={stuff}\n          goStage={changeStage}\n          allStages={allStages}\n          allTopics={allTopics}\n          stuffText={stuffText}\n        />\n      ) : null;\n\n      return res;\n    });\n\n    if (\"GENERAL\" === this.state.currentRange) {\n      stuffsItems.shift();\n    }\n\n    const { ranges } = stat;\n\n    const generStuff = (\n      <RangeItem\n        isSelect={\"GENERAL\" === this.state.currentRange}\n        range={{ name: \"GENERAL\" }}\n        click={this.click}\n      />\n    );\n\n    const noRanges = (\n      <RangeItem\n        isSelect={\"none\" === this.state.currentRange}\n        range={{ name: \"none\" }}\n        click={this.click}\n      />\n    );\n\n    const rangesItems = ranges\n      .filter(r => {\n        const param = methods.getParam(r.paramName);\n        return this.state.acheivs || !param.isAchiev;\n      })\n      .map(range => (\n        <RangeItem\n          isSelect={range.name === this.state.currentRange}\n          key={range.name}\n          range={range}\n          click={this.click}\n        />\n      ));\n\n    return (\n      <div>\n        <h2 align=\"center\">\n          {stuffText(stage.id)}{\" \"}\n          <button\n            onClick={() => {\n              methods.removeStage(stage.id);\n            }}\n          >\n            X\n          </button>{\" \"}\n          <input\n            type=\"checkbox\"\n            checked={stage.isStart}\n            onChange={e => {\n              methods.updateStage(stage.id, e.target.checked);\n            }}\n          />\n        </h2>\n        {generStuff}\n        {noRanges}\n        {rangesItems}\n        <input\n          type=\"checkbox\"\n          checked={this.state.acheivs}\n          onChange={e => {\n            this.setState({ acheivs: e.target.checked });\n          }}\n        />\n        {stuffsItems}\n        <AddStuff topic={topic} methods={methods} stageId={stage.id} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport StageItem from \"../Stages/StageItem\";\nimport Stage from \"../Stages/Stage\";\n\nexport default class Topic extends React.Component {\n  constructor() {\n    super();\n    this.state = { newStageStart: false };\n  }\n  stuffText = id => {\n    if (id) {\n      const { methods } = this.props;\n\n      const nextStuff = methods.getStuffs(id).find(stuff => stuff.isA);\n\n      if (nextStuff) {\n        const nextPhrases = methods.getPhrases(nextStuff.id);\n        const nextPhrase = nextPhrases.find(p => !p.rangeName);\n\n        if (nextPhrase) {\n          return `(${id}) ${nextPhrase.text.slice(0, 7)}...`;\n        } else return `(${id}) NOT PHRASE...`;\n      } else return \"NOT FOUND\";\n    }\n    return null;\n  };\n  render() {\n    const {\n      topic,\n      stat,\n      methods,\n      currentStage,\n      click,\n      changeStage,\n      allStages,\n      allTopics\n    } = this.props;\n\n    const { grads } = stat;\n    const { graduation } = topic;\n\n    const stages = methods.getStages(topic.id);\n    const stagesItems = stages.map(stage => {\n      const isSelect = stage.id === currentStage;\n\n      return (\n        <StageItem\n          methods={methods}\n          stuffText={this.stuffText}\n          key={stage.id}\n          stage={stage}\n          isSelect={isSelect}\n          click={click}\n        />\n      );\n    });\n\n    const optItems = grads.map(grad => {\n      return (\n        <option value={grad.name} key={grad.name}>\n          {grad.name}\n        </option>\n      );\n    });\n\n    const curStage = stages.find(stage => stage.id === currentStage);\n\n    const stageView = currentStage ? (\n      <Stage\n        stage={curStage}\n        methods={methods}\n        stat={stat}\n        allStages={allStages}\n        allTopics={allTopics}\n        changeStage={changeStage}\n        stuffText={this.stuffText}\n        topic={topic}\n      />\n    ) : null;\n\n    return (\n      <div>\n        <h1 align=\"center\">\n          Topic{\" \"}\n          <input\n            value={topic.name}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                e.target.value,\n                topic.graduation,\n                topic.isFin,\n                topic.isStart\n              );\n            }}\n          />\n          , grad:\n          <select\n            value={graduation}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                e.target.value,\n                topic.isFin,\n                topic.isStart\n              );\n            }}\n          >\n            {optItems}\n          </select>\n          Start:\n          <input\n            type=\"checkbox\"\n            checked={topic.isStart}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                topic.graduation,\n                topic.isFin,\n                e.target.checked\n              );\n            }}\n          />\n          Final:\n          <input\n            type=\"checkbox\"\n            checked={topic.isFin}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                topic.graduation,\n                e.target.checked,\n                topic.isStart\n              );\n            }}\n          />\n          <button\n            onClick={() => {\n              methods.removeTopic(topic.id);\n            }}\n            style={{ marginLeft: \"1rem\" }}\n          >\n            X\n          </button>\n        </h1>\n\n        <br />\n        <div>\n          <input\n            type=\"checkbox\"\n            checked={this.state.newStageStart}\n            onChange={e => {\n              this.setState({ newStageStart: e.target.checked });\n            }}\n          />\n          <button\n            onClick={() => {\n              methods.addStage(topic.id, this.state.newStageStart);\n            }}\n          >\n            +\n          </button>\n        </div>\n        {stagesItems}\n        <br />\n        {stageView}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class AddTopic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graduation: props.stat.grads[0].name,\n      name: \"\",\n      isFin: false,\n      isStart: false\n    };\n  }\n\n  render() {\n    const { graduation, name, isFin, isStart } = this.state;\n    const { stat, methods } = this.props;\n    const { grads } = stat;\n    const optItems = grads.map(grad => (\n      <option value={grad.name} key={grad.name}>\n        {grad.name}\n      </option>\n    ));\n\n    return (\n      <div>\n        <input\n          value={name}\n          onChange={e => {\n            this.setState({ name: e.target.value });\n          }}\n        />\n        <select\n          value={graduation}\n          onChange={e => {\n            this.setState({ graduation: e.target.value });\n          }}\n        >\n          {optItems}\n        </select>\n        Start:\n        <input\n          type=\"checkbox\"\n          checked={isStart}\n          onChange={e => {\n            this.setState({ isStart: e.target.checked });\n          }}\n        />\n        Final:\n        <input\n          type=\"checkbox\"\n          checked={isFin}\n          onChange={e => {\n            this.setState({ isFin: e.target.checked });\n          }}\n        />\n        <button\n          onClick={() => {\n            methods.addTopic(name, graduation, isFin, isStart);\n          }}\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport locE from \"../../game/loc_example\";\n//import locE from \"./../../game/loc_example\";\nimport TopicItem from \"./Topics/TopicItem\";\nimport Topic from \"./Topics/Topic\";\nimport AddTopic from \"./Topics/AddTopic\";\nimport exportFromJSON from \"export-from-json\";\nimport mlpaState from \"../../mlpa_state\";\n\nexport default class Editor extends React.Component {\n  constructor() {\n    super();\n    this.myStorage = window.localStorage;\n    this.loc = {};\n    this.import(true);\n    const { topicId, stageId } = this.getTopStag();\n    this.state = { currentTopic: topicId, currentStage: stageId };\n  }\n\n  import(firstTime) {\n    this.loc = locE;\n\n    this.loc.ssign({ ...mlpaState });\n    if (!firstTime) this.forceUpdate();\n  }\n\n  getTopStag() {\n    const topicId = this.loc.topics[0] ? this.loc.topics[0].id : null;\n    const stageId = this.loc._getStages(topicId)[0]\n      ? this.loc._getStages(topicId)[0].id\n      : null;\n    return { topicId, stageId };\n  }\n\n  exportFile() {\n    const data = this.loc;\n    const fileName = \"mlpa_state\";\n    const exportType = \"json\";\n\n    exportFromJSON({ data, fileName, exportType });\n  }\n\n  saveLoc() {\n    const locData = JSON.stringify(this.loc);\n    this.myStorage.setItem(\"locData\", locData);\n  }\n\n  addTopic = (name, gradName, isFin, isStart) => {\n    this.loc.cTopic(name, gradName, isFin, isStart);\n    this.forceUpdate();\n  };\n\n  addStage = (topicId, isStart) => {\n    this.loc.addStages(\n      topicId,\n      this.loc.cStage(\n        isStart,\n        this.loc.cStuff({ isA: true }, this.loc.cPhrase(\"space\"))\n      )\n    );\n    this.forceUpdate();\n  };\n  updateStage = (id, isStart) => {\n    const stage = this.loc.stages.find(s => s.id === id);\n    stage.isStart = isStart;\n    this.forceUpdate();\n  };\n  updateTopic = (topicId, name, gradName, isFin, isStart) => {\n    const topic = this.loc._getTopic(topicId);\n    topic.name = name;\n    topic.graduation = gradName;\n    topic.isFin = isFin;\n    topic.isStart = isStart;\n    this.forceUpdate();\n  };\n  addPhrase = (stuffId, range, text, isGeneral) => {\n    this.loc.addPhrases(stuffId, [this.loc.cPhrase(text, isGeneral, range)]);\n    this.forceUpdate();\n  };\n\n  updatePhrase = (stuffId, range, id, newText) => {\n    const phrase = this.loc.phrases.find(p => p.id === id);\n    if (phrase) {\n      phrase.text = newText;\n      if (!newText && !phrase.isGeneral && phrase.rangeName)\n        this.removePhrase(phrase.id);\n    } else {\n      this.addPhrase(stuffId, range, newText);\n    }\n    this.forceUpdate();\n  };\n\n  addStuff = (stageId, isA, nextStageId, changes = []) => {\n    const newStaff = this.loc.cStuff(\n      {\n        isA,\n        id: nextStageId\n      },\n      this.loc.cPhrase(\"space\"),\n      this.loc.cPhrase(\"generalSpace\", true)\n    );\n\n    this.loc.addStuffs(stageId, newStaff);\n\n    this.forceUpdate();\n  };\n  updateStuff = (id, nextStageId, ...changes) => {\n    const stuff = this.loc.stuffs.find(s => s.id === id);\n    stuff.next_stage_id = nextStageId;\n    changes.forEach(change => {\n      const changeIndex = stuff.changes.findIndex(\n        c => c.paramName === change.paramName\n      );\n      const thisStuffCh = stuff.changes[changeIndex];\n\n      const changeTerm = change.term;\n\n      if (!thisStuffCh) {\n        stuff.changes.push(this.loc.cChange(change.paramName, changeTerm));\n      } else {\n        if (changeTerm) thisStuffCh.term = changeTerm;\n        else stuff.changes.splice(changeIndex, 1);\n        console.log(thisStuffCh);\n      }\n    });\n    this.forceUpdate();\n  };\n\n  removeTopic = id => {\n    const index = this.loc.topics.findIndex(t => t.id === id);\n    this.loc.topics.splice(index, 1);\n    const stages = this.loc._getStages(id);\n    stages.forEach(s => {\n      this.removeStage(s.id);\n    });\n\n    this.setState({ currentTopic: null, currentStage: null });\n    this.forceUpdate();\n  };\n  removeStage = id => {\n    const index = this.loc.stages.findIndex(s => s.id === id);\n    this.loc.stages.splice(index, 1);\n    const stuffs = this.loc._getStuffs(id);\n    stuffs.forEach(s => {\n      if (s.next_stage_id === id) {\n        s.next_stage_id = null;\n      }\n      this.removeStuff(s.id);\n    });\n    this.setState({ currentStage: null });\n    this.forceUpdate();\n  };\n  removeStuff = id => {\n    const index = this.loc.stuffs.findIndex(s => s.id === id);\n    this.loc.stuffs.splice(index, 1);\n    const phrases = this.loc._getPhrases(id);\n    phrases.forEach(p => {\n      this.removePhrase(p.id);\n    });\n    this.forceUpdate();\n  };\n  removePhrase = id => {\n    const index = this.loc.phrases.findIndex(p => p.id === id);\n    this.loc.phrases.splice(index, 1);\n    this.forceUpdate();\n  };\n\n  click = id => {\n    const firstStage = this.loc._getStages(id)[0];\n    if (firstStage) this.changeStage(firstStage.id);\n    else this.setState({ currentTopic: id, currentStage: null });\n    this.forceUpdate();\n  };\n  changeStage = id => {\n    const stage = this.loc.stages.find(s => s.id === id);\n    if (stage) {\n      this.setState({ currentTopic: stage.topic_id, currentStage: id });\n    }\n\n    this.forceUpdate();\n  };\n\n  render() {\n    const { topics, grads, params, ranges } = this.loc;\n    const stat = {\n      grads,\n      params,\n      ranges\n    };\n\n    const { currentStage, currentTopic } = this.state;\n\n    const methods = {\n      addTopic: this.addTopic,\n      addStage: this.addStage,\n      updateStage: this.updateStage,\n      updateTopic: this.updateTopic,\n      removeTopic: this.removeTopic,\n      removeStage: this.removeStage,\n      updateStuff: this.updateStuff,\n      removeStuff: this.removeStuff,\n      getStages: this.loc._getStages,\n      getStuffs: this.loc._getStuffs,\n      getPhrases: this.loc._getPhrases,\n      addStuff: this.addStuff,\n      updatePhrase: this.updatePhrase,\n      addPhrase: this.addPhrase,\n      removePhrase: this.removePhrase,\n      getParam: this.loc._getParam,\n      checkStageFinal: this.loc.checkStageFinal\n    };\n\n    const topicItems = topics.map(topic => {\n      const isSelect = topic.id === currentTopic;\n      return (\n        <TopicItem\n          key={topic.id}\n          topic={topic}\n          methods={methods}\n          isSelect={isSelect}\n          click={this.click}\n        />\n      );\n    });\n\n    const topicView = currentTopic ? (\n      <Topic\n        allTopics={this.loc.topics}\n        allStages={this.loc.stages}\n        currentStage={currentStage}\n        topic={topics.find(topic => topic.id === this.state.currentTopic)}\n        stat={stat}\n        methods={methods}\n        goTopic={this.click}\n        click={this.changeStage}\n        changeStage={this.changeStage}\n      />\n    ) : null;\n\n    console.log(this.loc);\n    return (\n      <div>\n        <button onClick={() => this.import()}>import</button>\n        <button onClick={() => this.exportFile()}>export</button>\n        <br />\n        <AddTopic methods={methods} stat={stat} />\n        {topicItems}\n        {topicView}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Game from \"./components/Game/Game\";\nimport Editor from \"./components/Editor/Editor\";\n\nfunction App() {\n  return (\n    <div>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}