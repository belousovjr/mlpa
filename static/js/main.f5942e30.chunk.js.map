{"version":3,"sources":["components/Game/Params.js","components/Game/AnswerI/AnswerI.js","components/Game/DialogBox/PhraseText.js","components/Game/DialogBox/DialogBox.js","components/Game/Visual/img-object.js","components/Game/Visual/scene-object.js","components/Game/Visual/Visual.js","game/parameters.js","components/Game/Loading/Loading.js","components/Game/UI.js","components/Game/Settings/FullScreen.js","components/Game/Settings/Settiings.js","components/Game/Screen.js","mlpa_engine/graduation.js","mlpa_engine/parameter.js","mlpa_engine/phrase.js","mlpa_engine/range.js","mlpa_engine/stage.js","mlpa_engine/stuff.js","mlpa_engine/topic.js","mlpa_engine/change.js","mlpa_engine/interf.js","game/loc_example.js","mlpa_engine/loc.js","game/ranges.js","game/grads.js","components/Game/Game.js","components/Editor/Topics/TopicItem.js","components/Editor/Stages/StageItem.js","components/Editor/Stuffs/StuffItem.js","components/Editor/Ranges/RangeItem.js","components/Editor/Stuffs/AddStuff.js","components/Editor/Stages/Stage.js","components/Editor/Topics/Topic.js","components/Editor/Topics/AddTopic.js","components/Editor/Editor.js","App.js","serviceWorker.js","index.js"],"names":["Params","this","props","grads","checkGrad","filter","g","name","params","lim","edit","correctGradsItems","correctGrads","map","key","style","color","paramItems","param","isAchiev","type","disabled","checked","value","onClick","display","height","width","backgroundColor","position","top","React","Component","AnswerI","text","click","isHiding","disClass","className","toUpperCase","PhraseText","state","isStart","curText","balText","pAnsswerd","writingFinish","isPlayer","curLen","length","newText","slice","setTimeout","setState","nextLetterLoop","title","titleClass","DialogBox","dDelay","isPAnsserd","pPhrase","cPhrase","hidingClass","hiding","cAnswer","ImgObject","image","slot","min","max","SceneObject","x","y","imgName","Visual","drawImg","obj","ctx","img","images","find","locFactor","drawImage","drawSceneLopp","isStarted","newCanvas","document","createElement","landWidth","landHeight","newCtx","getContext","scene","getCorrImgName","window","requestAnimationFrame","c","objects","back","legs","body","head","landSizes","progress","refs","myCanvas","loaderLoop","forEach","object","loadImage","sceneObject","Image","url","src","location","href","onload","event","target","push","loadFinished","slotName","corrImages","corrImg","p","isLoaded","console","log","ref","Loading","UI","loc","currStageId","getStartId","getStageData","answers","stageId","interf","getInterfaceStage","replic","phrase","stuffId","newStageId","calcStuff","getCorrectPhrase","answersItems","answer","id","generalPhrase","update","gameUI","paramName","term","_editParams","cChange","forceUpdate","loadingAnim","FullScreen","render","fullScreenOn","getElementById","requestFullscreen","Settings","Screen","marginLeft","children","Graduation","rangesNames","Parameter","Phrase","rangeName","isGeneral","stuff_id","Range","Stage","isBeen","topic_id","Stuff","next_stage_id","changes","isA","stage_id","Topic","graduation","isFin","Change","Interf","locE","ranges","topics","stuffs","stages","phrases","addStages","topicId","_getTopic","newStages","stage","concat","error","_getStages","_getStuffs","stuff","_getPhrases","_getParam","checkStageFinal","s","gradName","_getGrad","rName","_getRange","range","checkRange","idState","getId","startTopic","topic","startStage","getGeneralPhrase","neutralPhrase","i","checkAnswToGrad","nextStage","replicStuff","ssign","data","k","addTopics","addStuffs","nextStageId","addPhrases","newStuffs","newPhrases","phraseId","grad","change","newValue","answersAll","correctNeutAchiev","correctFinal","incrrectNeutral","r","correct","addParams","cParam","addRanges","cRange","addGrads","cGrad","Game","mlpaState","defaultParams","screen","Math","newWidth","factorW","newHeight","factorH","getSizes","TopicItem","isSelect","margin","padding","cursor","border","StageItem","stuffText","isFinal","methods","StuffItem","allStages","currentTopic","viewAchievs","stat","goStage","allTopics","getPhrases","changesItems","inputElem","onChange","e","updateStuff","Boolean","Number","marginRight","paddingTop","paddingBottom","linkItems","getStages","unshift","linkThemesItems","t","next","newCurrTopic","topicStages","removeButton","removeStuff","viewBox","updatePhrase","RangeItem","AddStuff","addStuff","currentRange","acheivs","pAnswers","changeStage","getStuffs","splitStuffs","stuffsItems","shift","generStuff","noRanges","rangesItems","getParam","align","removeStage","updateStage","nextStuff","nextPhrase","newStageStart","currentStage","stagesItems","optItems","curStage","stageView","updateTopic","removeTopic","addStage","AddTopic","addTopic","App","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f5942e30.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Params extends React.Component {\n  /* constructor() {\n    super();\n\n  }*/\n\n  correctGrads() {\n    const { grads, checkGrad } = this.props;\n    const corrGrads = grads.filter(g => checkGrad(g.name));\n\n    return corrGrads;\n  }\n  render() {\n    const { params, lim, edit } = this.props;\n\n    const correctGrads = this.correctGrads();\n    const correctGradsItems = correctGrads.map(g => (\n      <div key={g.name}>\n        \n        <span style={{ color: \"white\" }}>{g.name}</span>\n      </div>\n    ));\n\n    const paramItems = params.map(param => {\n      return param.isAchiev ? (\n        <div key={param.name}>\n          <input type=\"checkbox\" disabled checked={param.value} />{\" \"}\n          <span style={{ color: \"white\" }}>{param.name}</span>\n        </div>\n      ) : (\n        <div key={param.name}>\n          <div>\n            <button\n              onClick={() => {\n                edit(param.name, -1);\n              }}\n            >\n              -\n            </button>\n            <div\n              style={{\n                display: \"inline-block\",\n                height: \"15px\",\n                width: `${param.value * 10}px`,\n                backgroundColor: \"red\"\n              }}\n            ></div>\n            <div\n              style={{\n                display: \"inline-block\",\n                height: \"15px\",\n                width: `${(lim - param.value) * 10}px`,\n                backgroundColor: \"gray\"\n              }}\n            ></div>\n\n            <button\n              onClick={() => {\n                edit(param.name, 1);\n              }}\n            >\n              +\n            </button>\n            <span style={{ color: \"white\" }}>{param.name}</span>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div style={{position: 'absolute', top: '0'}}>\n        {paramItems}\n        {correctGradsItems}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default class AnswerI extends React.Component {\n  render() {\n    const { text, click, disabled, isHiding } = this.props;\n    const disClass = disabled ? (isHiding ? \"disabled\" : \"\") : \"undisabled\";\n    return (\n        <div>\n      <div\n        className={`answer ${disClass}`}\n        onClick={() => {\n          if (!disabled) click();\n        }}\n      >\n        {text.toUpperCase()}\n      </div>\n        </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default class PhraseText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isStart: true, curText: \"\", balText: \"\" };\n  }\n  nextLetterLoop() {\n    const { text, pAnsswerd, writingFinish, isPlayer } = this.props;\n\n    const { curText } = this.state;\n    if (text !== curText) {\n      const curLen = curText.length;\n      const newText = text.slice(0, curLen + 1);\n\n      const balText = text.slice(curLen + 1);\n\n      setTimeout(() => {\n        this.setState({ curText: newText, isStart: false, balText });\n        this.nextLetterLoop();\n      }, 20);\n    } else isPlayer ? pAnsswerd() : writingFinish();\n  }\n  render() {\n    const { isPlayer } = this.props;\n    const { isStart, curText, balText } = this.state;\n    if (isStart) this.nextLetterLoop();\n    const title = isPlayer ? \"Я\" : \"Она\";\n    const titleClass = isPlayer ? \"text-p\" : \"text-c\";\n    return (\n      <div className=\"phrase-text\">\n        <span className={titleClass}>{title}/</span> {curText}\n        <span className=\"bal-text\">{balText}</span>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport PhraseText from \"./PhraseText\";\n\nexport default class DialogBox extends React.Component {\n  constructor() {\n    super();\n    this.state = { isPAnsserd: false };\n  }\n\n  pAnsswerd = () => {\n    const { dDelay } = this.props;\n    setTimeout(() => {\n      this.setState({ isPAnsserd: true });\n    }, dDelay);\n  };\n  render() {\n    const { pPhrase, cPhrase, writingFinish, hiding } = this.props;\n    const { isPAnsserd } = this.state;\n\n    const hidingClass = hiding ? \"phrase-hiding\" : \"\";\n\n    const cAnswer = isPAnsserd ? (\n      <PhraseText text={cPhrase} writingFinish={writingFinish} />\n    ) : null;\n\n    return (\n      <div className=\"dialog-box\">\n        <div className={`phrase-interface ${hidingClass}`}>\n          <div className=\"phrase-content\">\n            <PhraseText text={pPhrase} isPlayer pAnsswerd={this.pAnsswerd} />\n            {cAnswer}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export default class ImgObject {\n  constructor(image, slot = \"\", min, max, param = null) {\n    this.image = image;\n    this.slot = slot;\n    this.min = min;\n    this.max = max;\n    this.param = param;\n  }\n}\n","export default class SceneObject {\n  constructor(x = 0, y = 0, imgName, width) {\n    this.x = x;\n    this.y = y;\n    this.imgName = imgName;\n    this.width = width\n  }\n}\n","import React from \"react\";\nimport ImgObject from \"./img-object\";\nimport SceneObject from \"./scene-object\";\nimport \"./style.css\";\n\nimport {\n  PARAM_EQUILIBRIUM,\n  PARAM_DETERMINATION\n} from \"../../../game/parameters\";\n\nexport default class Visual extends React.Component {\n  constructor(props) {\n    super(props);\n    this.c = null;\n    this.ctx = null;\n    this.objects = [\n      new ImgObject(\"road\", \"back\"),\n      new ImgObject(\"legs\", \"legs\"),\n      new ImgObject(\"doubt\", \"body\", 1, 5, PARAM_DETERMINATION),\n      new ImgObject(\"uncertainty\", \"body\", 6, 10, PARAM_DETERMINATION),\n      new ImgObject(\"readiness\", \"body\", 11, 15, PARAM_DETERMINATION),\n      //new ImgObject(\"tension\", \"body\"),\n      new ImgObject(\"squinted\", \"head\", 1, 5, PARAM_EQUILIBRIUM),\n      new ImgObject(\"fear\", \"head\", 6, 10, PARAM_EQUILIBRIUM),\n      new ImgObject(\"horror\", \"head\", 11, 15, PARAM_EQUILIBRIUM),\n     /* new ImgObject(\"apathy\", \"head\"),\n      new ImgObject(\"trembling\", \"head\")*/\n    ];\n\n    const girlX = 800;\n    const girlY = 385;\n    this.scene = {\n      back: new SceneObject(0, -200, \"road\", 1920),\n      legs: new SceneObject(girlX, girlY, \"legs\", 200),\n      body: new SceneObject(girlX, girlY, \"doubt\", 200),\n      head: new SceneObject(girlX, girlY, \"horror\", 200)\n    };\n    this.images = [];\n\n    const { landWidth, landHeight } = this.props.landSizes;\n\n    this.landWidth = landWidth;\n    this.landHeight = landHeight;\n    /*\n    this.startCam = {\n      zoom: 23,\n      x: -872,\n      y: -400\n    };\n\n    this.endCam = {\n      zoom: 1,\n      x: 0,\n      y: 0\n    };*/\n\n    this.progress = 1;\n\n    this.state = { isStarted: false };\n  }\n  async componentDidMount() {\n    if (!this.c && this.refs.myCanvas) {\n      this.c = this.refs.myCanvas;\n      this.ctx = this.c.getContext(\"2d\");\n\n      this.loaderLoop();\n    }\n  }\n\n  loaderLoop() {\n    this.objects.forEach(object => {\n      this.loadImage(object);\n    });\n  }\n\n  loadImage(sceneObject) {\n    const { slot, image } = sceneObject;\n    let img = new Image();\n    let url = slot ? `${slot}/` : \"\";\n    url += image;\n    img.src = `${window.location.href}/img/${url}.png`;\n    img.onload = event => {\n      const { target } = event;\n      this.images.push({ name: image, img: target });\n      if (this.images.length === this.objects.length) {\n        const { loadFinished } = this.props;\n        loadFinished();\n      }\n    };\n  }\n\n  getCorrImgName(slotName) {\n    const { params } = this.props;\n    const corrImages = this.objects.filter(obj => obj.slot === slotName);\n    let corrImg = corrImages.find(obj => {\n      if (obj.param) {\n        const param = params.find(p => p.name === obj.param);\n\n        return param.value <= obj.max && param.value >= obj.min;\n      } else return false;\n    });\n\n    if (!corrImg) {\n      corrImg = corrImages.find(img => !img.param);\n    }\n    return corrImg.image;\n  }\n\n  drawImg = (obj, ctx) => {\n    const { img } = this.images.find(image => image.name === obj.imgName);\n    const { width, x, y } = obj;\n\n    const locFactor = width / img.width;\n    const height = img.height * locFactor;\n\n    const camZoom = 3\n    const camX = -560\n    const camY = -260\n\n    ctx.drawImage(img, (x + camX) * camZoom, (y + camY) * camZoom, width * camZoom, height * camZoom);\n  };\n\n  drawSceneLopp = () => {\n    const { isStarted } = this.state;\n    if (!isStarted) this.setState({ isStarted: true });\n\n    const newCanvas = document.createElement(\"CANVAS\");\n    newCanvas.width = this.landWidth;\n    newCanvas.height = this.landHeight;\n    const newCtx = newCanvas.getContext(\"2d\");\n\n    for (let key in this.scene) {\n      const obj = this.scene[key];\n      obj.imgName = this.getCorrImgName(key);\n      this.drawImg(obj, newCtx);\n    }\n\n    this.ctx.drawImage(newCanvas, 0, 0);\n\n    window.requestAnimationFrame(this.drawSceneLopp);\n  };\n\n  render() {\n    const { width, height, isLoaded } = this.props;\n    const { isStarted } = this.state;\n\n    if (isLoaded && !isStarted) {\n      console.log(\"STARTED\");\n      window.requestAnimationFrame(this.drawSceneLopp);\n    }\n\n    const className = isLoaded ? \"loaded\" : \"\";\n\n    return (\n      <div>\n        <canvas\n          className={className}\n          ref=\"myCanvas\"\n          width={this.landWidth}\n          height={this.landHeight}\n          style={{ width, height }}\n        ></canvas>\n      </div>\n    );\n  }\n}\n","export const PARAM_DETERMINATION = \"РЕШИМОСТЬ\";\nexport const PARAM_EQUILIBRIUM = \"УРАВНОВЕШЕННОСТЬ\";\n\nexport const PARAM_DOG = \"УЗНАЛ СОБ МЕРТВА\";\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default class Loading extends React.Component {\n  render() {\n    return <div className=\"lds-dual-ring\"></div>;\n  }\n}\n","import React from \"react\";\n\nimport Params from \"./Params\";\nimport AnswerI from \"./AnswerI/AnswerI\";\nimport DialogBox from \"./DialogBox/DialogBox\";\nimport \"./style.css\";\nimport Visual from \"./Visual/Visual\";\nimport Loading from \"./Loading/Loading\";\n\nexport default class UI extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loc = props.loc;\n    const currStageId = this.loc.getStartId();\n    const { cPhrase, answers } = this.getStageData(currStageId);\n    this.state = {\n      cPhrase,\n      pPhrase: \"О чем ты сейчас думаешь? О чем ты сейчас думаешь? О чем ты сейчас думаешь? О чем ты сейчас думаешь? О чем ты сейчас думаешь? О чем ты сейчас думаешь?\",\n      answers,\n      disabled: true,\n      currStageId,\n      isHiding: false,\n      dDelay: 2000,\n      isLoaded: false\n    };\n  }\n  getStageData(stageId) {\n    const interf = this.loc.getInterfaceStage(stageId);\n    const { answers, replic } = interf;\n    const { phrase } = replic;\n\n    return {\n      cPhrase: phrase,\n      answers\n    };\n  }\n  update(stuffId) {\n    const newStageId = this.loc.calcStuff(stuffId);\n    const pPhrase = this.loc.getCorrectPhrase(stuffId);\n    const { cPhrase, answers } = this.getStageData(newStageId);\n\n    this.setState({\n      isHiding: true,\n      disabled: true\n    });\n\n    setTimeout(() => {\n      this.setState({\n        pPhrase,\n        cPhrase,\n        currStageId: newStageId,\n        answers,\n        isHiding: false,\n        dDelay: 500 //ДОБАВИТЬ ЗАВИСИМОСТЬ ОТ ПОТРЯСЕНИЯ\n      });\n    }, 500);\n  }\n\n  writingFinish() {\n    this.setState({ disabled: false });\n  }\n  render() {\n    const {\n      pPhrase,\n      cPhrase,\n      currStageId,\n      answers,\n      disabled,\n      isHiding,\n      dDelay,\n      isLoaded\n    } = this.state;\n    const answersItems = answers.map(answer => {\n      return (\n        <AnswerI\n          key={answer.id}\n          text={answer.generalPhrase}\n          disabled={disabled}\n          isHiding={isHiding}\n          click={() => {\n            this.update(answer.id);\n          }}\n        />\n      );\n    });\n\n    const { width, height, landSizes } = this.props;\n\n    const gameUI = isLoaded ? (\n      <div>\n        <Params\n            params={this.loc.params}\n            lim={this.loc.lim}\n            edit={(paramName, term) => {\n              this.loc._editParams([this.loc.cChange(paramName, term)]);\n              this.forceUpdate();\n            }}\n            grads={this.loc.grads}\n            checkGrad={this.loc.checkGrad}\n        />\n        <div className=\"answers\">{answersItems}</div>\n        <DialogBox\n          hiding={isHiding}\n          key={currStageId}\n          pPhrase={pPhrase}\n          cPhrase={cPhrase}\n          dDelay={dDelay}\n          writingFinish={() => {\n            this.writingFinish();\n          }}\n        />\n      </div>\n    ) : null;\n\n    const loadingAnim = !isLoaded ? <Loading /> : null;\n\n    return (\n      <div>\n        <Visual\n            params={this.loc.params}\n          width={width}\n          height={height}\n          isLoaded={isLoaded}\n          loadFinished={() => this.setState({ isLoaded: true })}\n          landSizes={landSizes}\n        />\n        {gameUI}\n\n        {loadingAnim}\n      </div>\n    );\n  }\n}\n\n/*\n <Params\n          params={this.loc.params}\n          lim={this.loc.lim}\n          edit={(paramName, term) => {\n            this.loc._editParams([this.loc.cChange(paramName, term)]);\n            this.forceUpdate();\n          }}\n          grads={this.loc.grads}\n          checkGrad={this.loc.checkGrad}\n        />\n*/\n","import React from \"react\";\n\nexport default class FullScreen extends React.Component {\n  fullScreenOn() {\n    const screenDom = document.getElementById(\"screenDom\");\n    screenDom.requestFullscreen();\n  }\n  render = () => {\n    return (\n      <button\n        onClick={() => {\n          this.fullScreenOn();\n        }}\n      >\n        Full Screen\n      </button>\n    );\n  };\n}\n","import React from \"react\";\nimport FullScreen from \"./FullScreen\";\n\nexport default class Settings extends React.Component {\n  render() {\n    return (\n      <div className=\"settings\">\n        <FullScreen />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Settings from \"./Settings/Settiings\";\nimport \"./Settings/style.css\";\n\nexport default class Screen extends React.Component {\n  render() {\n    const { width, height } = this.props;\n    const style = {\n      width,\n      height,\n      display: \"inline-block\",\n      backgroundColor: \"black\",\n\n      marginLeft: `calc(50% - ${width / 2}px)`,\n      position: \"absolute\"\n      //overflow: \"hidden\"\n    };\n    return (\n      <div id=\"screenDom\">\n        <div style={style}>\n          {this.props.children}\n          <Settings />\n        </div>\n      </div>\n    );\n  }\n}\n","export default class Graduation {\n  constructor(name, rangesNames) {\n    this.name = name;\n    this.rangesNames = rangesNames;\n  }\n}\n","export default class Parameter {\n  constructor(name, value, isAchiev = false) {\n    this.name = name;\n    this.value = value;\n    this.isAchiev = isAchiev;\n  }\n}\n","export default class Phrase {\n  constructor(rangeName, text, isGeneral, id) {\n    this.rangeName = rangeName;\n    this.text = text;\n    this.isGeneral = isGeneral;\n    this.id = id;\n  }\n  stuff_id = null;\n}\n","export default class Range {\n  constructor(name, paramName, min, max) {\n    this.name = name;\n    this.paramName = paramName;\n    this.min = min;\n    this.max = max;\n  }\n}\n","export default class Stage {\n  constructor(isStart, id) {\n    this.id = id;\n    this.isStart = isStart\n  }\n  isBeen = false;\n  topic_id = null;\n}\n","export default class Stuff {\n  constructor(next_stage_id, changes = [], isA = false, id) {\n    this.next_stage_id = next_stage_id;\n    this.changes = changes;\n    this.isA = isA;\n    this.id = id;\n  }\n  stage_id = null;\n}\n","export default class Topic {\n  constructor(name, graduation, isFin, isStart, id) {\n    this.name = name;\n    this.graduation = graduation;\n    this.isFin = isFin;\n    this.isStart = isStart;\n    this.id = id;\n  }\n}\n","export default class Change {\n  constructor(paramName, term) {\n    this.paramName = paramName;\n    this.term = term;\n  }\n}\n","export default class Interf {\n  constructor(generalPhrase, phrase, id) {\n    this.generalPhrase = generalPhrase;\n    this.phrase = phrase;\n    this.id = id;\n  }\n}\n","import { Loc } from \"./../mlpa_engine\";\n\nimport {\n  PARAM_EQUILIBRIUM,\n  PARAM_DETERMINATION,\n  PARAM_DOG\n} from \"./parameters\";\n\nimport {\n  RANGE_PANIC,\n  RANGE_TENSION,\n  RANGE_STABILITY,\n  RANGE_APATHY,\n  RANGE_UNCERTAINTY,\n  RANGE_CONFIDENCE,\n  RANGE_DOG\n} from \"./ranges\";\n\nimport {\n  GRAD_PAN_APA,\n  GRAD_PAN_UNC,\n  GRAD_PAN_CON,\n  GRAD_TEN_APA,\n  GRAD_TEN_UNC,\n  GRAD_TEN_CON,\n  GRAD_STAB_APA,\n  GRAD_STAB_UNC,\n  GRAD_STAB_CON,\n  GRAD_DOG\n} from \"./grads\";\n\nconst locE = new Loc();\nlocE.addParams(\n  locE.cParam(PARAM_DETERMINATION, 2),\n  locE.cParam(PARAM_EQUILIBRIUM, 4),\n\n  locE.cParam(PARAM_DOG, false, true)\n);\n\nlocE.addRanges(\n  locE.cRange(RANGE_PANIC, 1, 5, PARAM_EQUILIBRIUM),\n  locE.cRange(RANGE_TENSION, 6, 10, PARAM_EQUILIBRIUM),\n  locE.cRange(RANGE_STABILITY, 11, 15, PARAM_EQUILIBRIUM),\n\n  locE.cRange(RANGE_APATHY, 1, 5, PARAM_DETERMINATION),\n  locE.cRange(RANGE_UNCERTAINTY, 6, 10, PARAM_DETERMINATION),\n  locE.cRange(RANGE_CONFIDENCE, 11, 15, PARAM_DETERMINATION),\n\n  locE.cRange(RANGE_DOG, true, true, PARAM_DOG)\n);\nlocE.addGrads(\n  locE.cGrad(GRAD_PAN_APA, RANGE_PANIC, RANGE_APATHY),\n  locE.cGrad(GRAD_PAN_UNC, RANGE_PANIC, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_PAN_CON, RANGE_PANIC, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_TEN_APA, RANGE_TENSION, RANGE_APATHY),\n  locE.cGrad(GRAD_TEN_UNC, RANGE_TENSION, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_TEN_CON, RANGE_TENSION, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_STAB_APA, RANGE_STABILITY, RANGE_APATHY),\n  locE.cGrad(GRAD_STAB_UNC, RANGE_STABILITY, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_STAB_CON, RANGE_STABILITY, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_DOG, RANGE_DOG)\n);\n\nexport default locE;\n","import Parameter from \"./parameter\";\nimport Range from \"./range\";\nimport Graduation from \"./graduation\";\nimport Phrase from \"./phrase\";\nimport Stuff from \"./stuff\";\nimport Change from \"./change\";\nimport Stage from \"./stage\";\nimport Topic from \"./topic\";\nimport Interf from \"./interf\";\n\nexport default class Loc {\n  params = [];\n  ranges = [];\n  grads = [];\n  topics = [];\n\n  stuffs = [];\n  stages = [];\n  phrases = [];\n\n  lim = 15;\n\n  cParam(name, value, isAchiev) {\n    return new Parameter(name, value, isAchiev);\n  }\n  addParams(...params) {\n    this.params = this.params.concat(params);\n  }\n\n  cRange(name, min, max, paramName) {\n    return new Range(name, paramName, min, max);\n  }\n  addRanges(...ranges) {\n    this.ranges = this.ranges.concat(ranges);\n  }\n\n  cGrad(name, ...rangesNames) {\n    return new Graduation(name, rangesNames);\n  }\n  addGrads(...grads) {\n    this.grads = this.grads.concat(grads);\n  }\n\n  cTopic(name, gradName, isFin, isStart, ...stages) {\n    const topicId = this.getId(\"topics\");\n    this.addTopics(new Topic(name, gradName, isFin, isStart, topicId));\n    this.addStages(topicId, ...stages);\n  }\n\n  addTopics(...topics) {\n    this.topics = this.topics.concat(topics);\n  }\n\n  cStage(isStart, ...answers) {\n    const stageId = this.getId(\"stages\");\n    this.addStuffs(stageId, ...answers);\n    return new Stage(isStart, stageId);\n  }\n\n  addStages = (topicId, ...stages) => {\n    if (this._getTopic(topicId)) {\n      const newStages = stages.map(stage => {\n        return { ...stage, topic_id: topicId };\n      });\n      this.stages = this.stages.concat(newStages);\n    } else console.error(`Topic ${topicId} not found!`);\n  };\n\n  cStuff(props, ...phrases) {\n    const { id: nextStageId, changes = [], isA } = props ? props : {};\n    const stuffId = this.getId(\"stuffs\");\n\n    this.addPhrases(stuffId, phrases);\n    return new Stuff(\n      nextStageId,\n      !isA ? changes.filter(c => c.term) : [],\n      isA,\n      stuffId\n    );\n  }\n\n  addStuffs(stageId, ...stuffs) {\n    const newStuffs = stuffs.map(stuff => ({ ...stuff, stage_id: stageId }));\n    this.stuffs = this.stuffs.concat(newStuffs);\n  }\n\n  addPhrases(stuffId, phrases) {\n    const newPhrases = phrases.map(phrase => ({\n      ...phrase,\n      stuff_id: stuffId\n    }));\n\n    this.phrases = this.phrases.concat(newPhrases);\n  }\n\n  cPhrase(text, isGeneral = false, rangeName) {\n    const phraseId = this.getId(\"phrases\");\n    return new Phrase(rangeName, text, isGeneral, phraseId);\n  }\n\n  cChange(paramName, term) {\n    return new Change(paramName, term);\n  }\n\n  _getTopic(id) {\n    return this.topics.find(topic => topic.id === id);\n  }\n  _getStages = topicId => {\n    return this.stages.filter(stage => stage.topic_id === topicId);\n  };\n\n  _getStuffs = stageId => {\n    return this.stuffs.filter(stuff => stuff.stage_id === stageId);\n  };\n\n  _getPhrases = stuffId => {\n    return this.phrases.filter(phrase => phrase.stuff_id === stuffId);\n  };\n\n  _getParam = name => {\n    return this.params.find(param => param.name === name);\n  };\n\n  _getRange(name) {\n    return this.ranges.find(range => range.name === name);\n  }\n\n  _getGrad(name) {\n    return this.grads.find(grad => grad.name === name);\n  }\n\n  _editParams(changes) {\n    changes.forEach(change => {\n      const param = this._getParam(change.paramName);\n\n      if (param.isAchiev) {\n        param.value = true;\n      } else {\n        const newValue = param.value + change.term;\n        if (newValue > this.lim) {\n          param.value = this.lim;\n        } else if (newValue < 1) {\n          param.value = 1;\n        } else param.value = newValue;\n      }\n    });\n  }\n\n  checkStageFinal = stageId => {\n    const stuffs = this._getStuffs(stageId);\n    return !stuffs.find(s => !s.isA);\n  };\n\n  checkRange(rangeName) {\n    const range = this._getRange(rangeName);\n    const param = this._getParam(range.paramName);\n    const res = param.isAchiev\n      ? param.value === range.max\n      : param.value >= range.min && param.value <= range.max;\n    return res;\n  }\n\n  checkGrad = gradName => {\n    const grad = this._getGrad(gradName);\n    const ranges = grad.rangesNames.map(rName => this._getRange(rName));\n    const params = [];\n    ranges.forEach(range => {\n      if (!params[range.paramName]) {\n        params[range.paramName] = this.checkRange(range.name);\n      }\n    });\n    for (let key in params) {\n      if (!params[key]) return false;\n    }\n    return true;\n  };\n\n  idState = {};\n  getId = type => {\n    if (!this.idState[type]) this.idState[type] = 0;\n    this.idState[type]++;\n    return this.idState[type];\n  };\n\n  getStartId = () => {\n    const startTopic = this.topics.find(topic => topic.isStart);\n    const stages = this._getStages(startTopic.id);\n    const startStage = stages.find(stage => stage.isStart);\n    return startStage ? startStage.id : null;\n  };\n\n  calcStuff = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n\n    this._editParams(stuff.changes);\n    return stuff.next_stage_id;\n  };\n\n  getGeneralPhrase = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n    const phrases = this._getPhrases(stuff.id);\n    const generalPhrase = phrases.find(phrase => phrase.isGeneral);\n    return generalPhrase?.text;\n  };\n\n  getCorrectPhrase = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n    const phrases = this._getPhrases(stuff.id);\n    const neutralPhrase = phrases.find(phrase => !phrase.rangeName);\n    for (let i in phrases) {\n      const phrase = phrases[i];\n      if (phrase.rangeName && this.checkRange(phrase.rangeName))\n        return phrase.text;\n    }\n\n    return neutralPhrase.text;\n  };\n\n  _getCorrectStuffs(id) {\n    //НЕОБХОДИМОЕ ЧИСЛО ОТВЕТОВ\n    const necessity = 3;\n    const stuffs = this._getStuffs(id);\n\n    //ОГРАНИЧЕНИЕ ПО *БЫЛ ЗДЕСЬ*\n    const answersAll = stuffs.filter(stuff => {\n      if (stuff.isA) return false;\n      else {\n        const stage = this.stages.find(s => s.id === stuff.next_stage_id);\n        return !stage.isBeen;\n      }\n    });\n\n    const correctNeutAchiev = [];\n    const correctFinal = [];\n    const incrrectNeutral = [];\n\n    answersAll.forEach(stuff => {\n      const nextStage = this.stages.find(\n        stage => stage.id === stuff.next_stage_id\n      );\n      const topic = this._getTopic(nextStage.topic_id);\n      const grad = this._getGrad(topic.graduation);\n      const ranges = grad.rangesNames(rName => this._getRange(rName));\n      const params = ranges.rangesNames(r => this._getParam(r.paramName));\n\n      const isAchiev = params.find(p => p.isAchiev);\n      const correct = this.checkGrad(grad.name);\n      const { isFin } = topic;\n\n      if (correct) {\n        //подходящее по градации\n        //если не финал\n        if (!isFin) correctNeutAchiev.push(stuff);\n        //если финал\n        else correctFinal.push(stuff);\n      } else if (!isAchiev && !isFin) {\n        //неподходящие если не ачивный и не финальный\n        incrrectNeutral.push(stuff);\n      }\n    });\n\n    let resultStuffs = correctNeutAchiev.concat(incrrectNeutral);\n    //если пришло время для финалочек\n    if (false) resultStuffs = resultStuffs.concat(correctFinal);\n    return resultStuffs.slice(0, necessity);\n  }\n\n  checkAnswToGrad = stuff => {\n    const nextStage = this.stages.find(\n      stage => stage.id === stuff.next_stage_id\n    );\n    const topic = this._getTopic(nextStage.topic_id);\n    return this.checkGrad(topic.graduation);\n  };\n\n  //ДОБАВИТЬ БЕЗУСЛОВНЫЕ ОГРАНИЧЕНИЯ ДЛЯ ТЕМ ЗАВИСИМЫХ ОТ АЧИВОК\n  getInterfaceStage = id => {\n    //ДОБАВИТЬ ПОДКЛЮЧЕНИЕ ФИНАЛОЧЕК КОГДА НАДО\n\n    const stage = this.stages.find(s => s.id === id);\n    stage.isBeen = true;\n\n    const stuffs = this._getStuffs(id);\n\n    const replicStuff = stuffs.find(stuff => stuff.isA);\n    const replic = new Interf(null, this.getCorrectPhrase(replicStuff.id));\n\n    //ОГРАНИЧЕНИЯ ПО *БЫЛ ТУТ*\n    const answersAll = stuffs.filter(stuff => {\n      return !stuff.isA;\n    });\n\n    //РЕЗУЛЬТАТ\n    const resAnswers = answersAll;\n\n    const interf = {\n      answers: resAnswers.map(stuff => {\n        return new Interf(\n          this.getGeneralPhrase(stuff.id),\n          this.getCorrectPhrase(stuff.id),\n          stuff.id\n        );\n      }),\n      replic\n    };\n\n    return interf;\n  };\n\n  ssign = data => {\n    for (let key in data) {\n      if (![\"params\", \"grads\", \"ranges\"].find(k => k === key)) {\n        this[key] = data[key];\n      }\n    }\n  };\n}\n","export const RANGE_PANIC = \"ПАНИКА\";\nexport const RANGE_TENSION = \"НАПРЯЖЕННОСТЬ\";\nexport const RANGE_STABILITY = \"СТАБИЛЬНОСТЬ\";\n\nexport const RANGE_APATHY = \"АПАТИЯ\";\nexport const RANGE_UNCERTAINTY = \"НЕУВЕРЕННОСТЬ\";\nexport const RANGE_CONFIDENCE = \"УВЕРЕННОСТЬ\";\n\nexport const RANGE_DOG = \"ЗНАЕТ ПРО СОБАКУ\";\n","export const GRAD_PAN_APA = \"ПАН АПАТ\";\nexport const GRAD_PAN_UNC = \"ПАН НЕУВ\";\nexport const GRAD_PAN_CON = \"ПАН УВ\";\n\nexport const GRAD_TEN_APA = \"НАПР АПАТ\";\nexport const GRAD_TEN_UNC = \"НАПР НЕУВ\";\nexport const GRAD_TEN_CON = \"НАПР УВ\";\n\nexport const GRAD_STAB_APA = \"СТАБ АПАТ\";\nexport const GRAD_STAB_UNC = \"СТАБ НЕУВ\";\nexport const GRAD_STAB_CON = \"СТАБ УВ\";\n\nexport const GRAD_DOG = \"ЗНАЕТ ПРО СОБАКУ\";\n","import React from \"react\";\nimport UI from \"./UI\";\nimport Screen from \"./Screen\";\nimport locE from \"../../game/loc_example\";\nimport mlpaState from \"../../mlpa_state\";\n\nexport default class Game extends React.Component {\n  constructor() {\n    super();\n\n    this.landWidth = 1920;\n    this.landHeight = 1080;\n\n    this.loc = locE;\n    this.loc.ssign(mlpaState);\n    this.defaultParams();\n  }\n  defaultParams() {\n    this.loc.params.forEach(p => {\n      if (!p.isAchiev) p.value = 7;\n    });\n  }\n  getSizes() {\n    const { width, height } = window.screen;\n\n    const max = Math.max(width, height);\n    const min = Math.min(width, height);\n\n    let newWidth = max;\n\n    const factorW = newWidth / this.landWidth;\n    let newHeight = this.landHeight * factorW;\n    if (newHeight > min) {\n      newHeight = min;\n      const factorH = newHeight / this.landHeight;\n      newWidth = this.landWidth * factorH;\n    }\n    return { newWidth, newHeight };\n  }\n  render() {\n    const { newWidth, newHeight } = this.getSizes();\n    return (\n      <Screen width={newWidth} height={newHeight}>\n        <UI\n          loc={this.loc}\n          width={newWidth}\n          height={newHeight}\n          landSizes={{ landWidth: this.landWidth, landHeight: this.landHeight }}\n        />\n      </Screen>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class TopicItem extends React.Component {\n  render() {\n    const { topic, isSelect, click } = this.props;\n\n    const border = topic.isStart\n      ? \"solid 0.3rem red\"\n      : topic.isFin\n      ? \"solid 0.3rem aqua\"\n      : \"none\";\n\n    const style = {\n      backgroundColor: isSelect ? \"green\" : \"gray\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      cursor: \"pointer\",\n      color: \"white\",\n      border\n    };\n    return (\n      <div\n        style={style}\n        onClick={() => {\n          click(topic.id);\n        }}\n      >\n        {topic.name}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class StageItem extends React.Component {\n  render() {\n    const { stage, click, isSelect, stuffText, methods } = this.props;\n\n    const isFinal = methods.checkStageFinal(stage.id);\n    const border = stage.isStart\n      ? \"solid 0.3rem red\"\n      : isFinal\n      ? \"solid 0.3rem aqua\"\n      : \"none\";\n\n    const style = {\n      backgroundColor: isSelect ? \"blue\" : \"gray\",\n      cursor: \"pointer\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      color: \"white\",\n      border\n    };\n    return (\n      <div\n        onClick={() => {\n          click(stage.id);\n        }}\n        style={style}\n      >\n        {stuffText(stage.id)}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class StuffItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const nextStage = props.allStages.find(\n      s => s.id === props.stuff.next_stage_id\n    );\n    const currentTopic = nextStage?.topic_id;\n\n    this.state = {\n      currentTopic,\n      viewAchievs: false\n    };\n  }\n  render() {\n    const {\n      stuff,\n      methods,\n      range,\n      stat,\n      goStage,\n      allStages,\n      stuffText,\n      allTopics\n    } = this.props;\n\n    const phrase = methods.getPhrases(stuff.id).find(p => {\n      return (\n        p.rangeName === range ||\n        (range === \"none\" && !p.rangeName) ||\n        (range === \"GENERAL\" && p.isGeneral)\n      );\n    });\n\n    const { changes } = stuff;\n    const { currentTopic, viewAchievs } = this.state;\n\n    const changesItems = !stuff.isA\n      ? stat.params.map(p => {\n          const c = changes.find(change => change.paramName === p.name);\n\n          const term = c ? c.term : p.isAchiev ? false : 0;\n\n          const inputElem = p.isAchiev ? (\n            <input\n              type=\"checkbox\"\n              checked={term}\n              onChange={e => {\n                methods.updateStuff(stuff.id, stuff.next_stage_id, {\n                  paramName: p.name,\n                  term: Boolean(e.target.checked)\n                });\n              }}\n            />\n          ) : (\n            <input\n              type=\"number\"\n              style={{ width: \"40px\" }}\n              value={term}\n              onChange={e => {\n                methods.updateStuff(stuff.id, stuff.next_stage_id, {\n                  paramName: p.name,\n                  term: Number(e.target.value)\n                });\n              }}\n            />\n          );\n\n          if (!viewAchievs && p.isAchiev) return null;\n          return (\n            <span\n              style={{\n                display: \"inline-block\",\n                padding: \"0.5rem\",\n                backgroundColor: \"#ffccff\",\n                marginRight: \"0.5rem\"\n              }}\n              key={p.name}\n            >\n              {p.name}:{inputElem}\n            </span>\n          );\n        })\n      : null;\n\n    const style = {\n      backgroundColor: stuff.isA ? \"#ccffff\" : \"#D3D3D3\",\n      cursor: \"pointer\",\n      margin: \"0.2rem\",\n\n      paddingTop: stuff.isA ? \"1rem\" : \"0.5rem\",\n      paddingBottom: stuff.isA ? \"1rem\" : \"0.5rem\",\n\n      display: \"inline-block\",\n      width: \"40%\"\n    };\n\n    const text = phrase ? phrase.text : \"\";\n\n    const linkItems = methods.getStages(this.state.currentTopic).map(s => {\n      return (\n        <option value={s.id} key={s.id}>\n          {stuffText(s.id)}\n        </option>\n      );\n    });\n\n    if (!allStages.find(s => s.id === stuff.next_stage_id)) {\n      linkItems.unshift(\n        <option value={\"error\"} key=\"0\">\n          {stuff.next_stage_id} NOT FOUND\n        </option>\n      );\n    }\n\n    const linkThemesItems = allTopics.map(t => {\n      return (\n        <option value={t.id} key={t.id}>\n          {t.name}\n        </option>\n      );\n    });\n\n    const next = !stuff.isA ? (\n      <div style={{ display: \"inline-block\", marginRight: \"0.5rem\" }}>\n        <div\n          style={{\n            display: \"inline-block\",\n            backgroundColor: \"red\",\n            cursor: \"pointer\",\n            color: \"white\"\n          }}\n          onClick={() => {\n            goStage(stuff.next_stage_id);\n          }}\n        >\n          ===>\n        </div>\n        {currentTopic}\n\n        <select\n          value={this.state.currentTopic}\n          onChange={e => {\n            const newCurrTopic = Number(e.target.value);\n            this.setState({ currentTopic: newCurrTopic });\n            const topicStages = methods.getStages(newCurrTopic);\n\n            if (\n              topicStages.length &&\n              !topicStages.find(s => s.id === stuff.next_stage_id)\n            )\n              methods.updateStuff(stuff.id, topicStages[0].id);\n          }}\n        >\n          {linkThemesItems}\n        </select>\n\n        <select\n          value={stuff.next_stage_id}\n          onChange={e => {\n            methods.updateStuff(stuff.id, Number(e.target.value));\n          }}\n        >\n          {linkItems}\n        </select>\n      </div>\n    ) : null;\n\n    const removeButton = !stuff.isA ? (\n      <button onClick={() => methods.removeStuff(stuff.id)}>X</button>\n    ) : null;\n\n    const viewBox = stuff.isA ? null : (\n      <input\n        type=\"checkbox\"\n        checked={viewAchievs}\n        onChange={e => {\n          this.setState({ viewAchievs: e.target.checked });\n        }}\n      />\n    );\n\n    return (\n      <div>\n        {removeButton}\n        <div style={style}>\n          ({stuff.id}){\" \"}\n          <input\n            value={text}\n            style={{ width: \"90%\" }}\n            onChange={e => {\n              methods.updatePhrase(\n                stuff.id,\n                range === \"none\" ? null : range,\n                phrase ? phrase.id : null,\n                e.target.value\n              );\n            }}\n          />\n        </div>\n        {next}\n        {changesItems}\n        {viewBox}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class RangeItem extends React.Component {\n  render() {\n    const { range, isSelect, click } = this.props;\n\n    const style = {\n      backgroundColor: isSelect ? \"orange\" : \"gray\",\n      cursor: \"pointer\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      color: \"white\"\n    };\n    return (\n      <div\n        style={style}\n        onClick={() => {\n          click(range.name);\n        }}\n      >\n        {range.name}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class AddStuff extends React.Component {\n  render() {\n    const { methods, stageId, topic } = this.props;\n\n    const nextStageId = methods.getStages(topic.id)[0].id;\n\n    return (\n      <div>\n        <button\n          onClick={() => {\n            methods.addStuff(stageId, false, nextStageId, []);\n          }}\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport StuffItem from \"../Stuffs/StuffItem\";\nimport RangeItem from \"../Ranges/RangeItem\";\nimport AddStuff from \"../Stuffs/AddStuff\";\n\nexport default class Stage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { currentRange: \"none\", acheivs: false };\n  }\n\n  click = name => {\n    this.setState({ currentRange: name });\n  };\n  splitStuffs(stuffs) {\n    const answer = stuffs.find(stuff => stuff.isA);\n    const pAnswers = stuffs.filter(stuff => !stuff.isA);\n    return { answer, pAnswers };\n  }\n  render() {\n    const {\n      stage,\n      methods,\n      stat,\n      changeStage,\n      allStages,\n      stuffText,\n      topic,\n      allTopics\n    } = this.props;\n\n    const stuffs = methods.getStuffs(stage.id);\n\n    const { answer, pAnswers } = this.splitStuffs(stuffs);\n\n    const stuffsItems = [answer, ...pAnswers].map(stuff => {\n      const res = stuff ? (\n        <StuffItem\n          stat={stat}\n          range={this.state.currentRange}\n          methods={methods}\n          key={stuff.id}\n          stuff={stuff}\n          goStage={changeStage}\n          allStages={allStages}\n          allTopics={allTopics}\n          stuffText={stuffText}\n        />\n      ) : null;\n\n      return res;\n    });\n\n    if (\"GENERAL\" === this.state.currentRange) {\n      stuffsItems.shift();\n    }\n\n    const { ranges } = stat;\n\n    const generStuff = (\n      <RangeItem\n        isSelect={\"GENERAL\" === this.state.currentRange}\n        range={{ name: \"GENERAL\" }}\n        click={this.click}\n      />\n    );\n\n    const noRanges = (\n      <RangeItem\n        isSelect={\"none\" === this.state.currentRange}\n        range={{ name: \"none\" }}\n        click={this.click}\n      />\n    );\n\n    const rangesItems = ranges\n      .filter(r => {\n        const param = methods.getParam(r.paramName);\n        return this.state.acheivs || !param.isAchiev;\n      })\n      .map(range => (\n        <RangeItem\n          isSelect={range.name === this.state.currentRange}\n          key={range.name}\n          range={range}\n          click={this.click}\n        />\n      ));\n\n    return (\n      <div>\n        <h2 align=\"center\">\n          {stuffText(stage.id)}{\" \"}\n          <button\n            onClick={() => {\n              methods.removeStage(stage.id);\n            }}\n          >\n            X\n          </button>{\" \"}\n          <input\n            type=\"checkbox\"\n            checked={stage.isStart}\n            onChange={e => {\n              methods.updateStage(stage.id, e.target.checked);\n            }}\n          />\n        </h2>\n        {generStuff}\n        {noRanges}\n        {rangesItems}\n        <input\n          type=\"checkbox\"\n          checked={this.state.acheivs}\n          onChange={e => {\n            this.setState({ acheivs: e.target.checked });\n          }}\n        />\n        {stuffsItems}\n        <AddStuff topic={topic} methods={methods} stageId={stage.id} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport StageItem from \"../Stages/StageItem\";\nimport Stage from \"../Stages/Stage\";\n\nexport default class Topic extends React.Component {\n  constructor() {\n    super();\n    this.state = { newStageStart: false };\n  }\n  stuffText = id => {\n    if (id) {\n      const { methods } = this.props;\n\n      const nextStuff = methods.getStuffs(id).find(stuff => stuff.isA);\n\n      if (nextStuff) {\n        const nextPhrases = methods.getPhrases(nextStuff.id);\n        const nextPhrase = nextPhrases.find(p => !p.rangeName);\n\n        if (nextPhrase) {\n          return `(${id}) ${nextPhrase.text.slice(0, 7)}...`;\n        } else return `(${id}) NOT PHRASE...`;\n      } else return \"NOT FOUND\";\n    }\n    return null;\n  };\n  render() {\n    const {\n      topic,\n      stat,\n      methods,\n      currentStage,\n      click,\n      changeStage,\n      allStages,\n      allTopics\n    } = this.props;\n\n    const { grads } = stat;\n    const { graduation } = topic;\n\n    const stages = methods.getStages(topic.id);\n    const stagesItems = stages.map(stage => {\n      const isSelect = stage.id === currentStage;\n\n      return (\n        <StageItem\n          methods={methods}\n          stuffText={this.stuffText}\n          key={stage.id}\n          stage={stage}\n          isSelect={isSelect}\n          click={click}\n        />\n      );\n    });\n\n    const optItems = grads.map(grad => {\n      return (\n        <option value={grad.name} key={grad.name}>\n          {grad.name}\n        </option>\n      );\n    });\n\n    const curStage = stages.find(stage => stage.id === currentStage);\n\n    const stageView = currentStage ? (\n      <Stage\n        stage={curStage}\n        methods={methods}\n        stat={stat}\n        allStages={allStages}\n        allTopics={allTopics}\n        changeStage={changeStage}\n        stuffText={this.stuffText}\n        topic={topic}\n      />\n    ) : null;\n\n    return (\n      <div>\n        <h1 align=\"center\">\n          Topic{\" \"}\n          <input\n            value={topic.name}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                e.target.value,\n                topic.graduation,\n                topic.isFin,\n                topic.isStart\n              );\n            }}\n          />\n          , grad:\n          <select\n            value={graduation}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                e.target.value,\n                topic.isFin,\n                topic.isStart\n              );\n            }}\n          >\n            {optItems}\n          </select>\n          Start:\n          <input\n            type=\"checkbox\"\n            checked={topic.isStart}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                topic.graduation,\n                topic.isFin,\n                e.target.checked\n              );\n            }}\n          />\n          Final:\n          <input\n            type=\"checkbox\"\n            checked={topic.isFin}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                topic.graduation,\n                e.target.checked,\n                topic.isStart\n              );\n            }}\n          />\n          <button\n            onClick={() => {\n              methods.removeTopic(topic.id);\n            }}\n            style={{ marginLeft: \"1rem\" }}\n          >\n            X\n          </button>\n        </h1>\n\n        <br />\n        <div>\n          <input\n            type=\"checkbox\"\n            checked={this.state.newStageStart}\n            onChange={e => {\n              this.setState({ newStageStart: e.target.checked });\n            }}\n          />\n          <button\n            onClick={() => {\n              methods.addStage(topic.id, this.state.newStageStart);\n            }}\n          >\n            +\n          </button>\n        </div>\n        {stagesItems}\n        <br />\n        {stageView}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class AddTopic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graduation: props.stat.grads[0].name,\n      name: \"\",\n      isFin: false,\n      isStart: false\n    };\n  }\n\n  render() {\n    const { graduation, name, isFin, isStart } = this.state;\n    const { stat, methods } = this.props;\n    const { grads } = stat;\n    const optItems = grads.map(grad => (\n      <option value={grad.name} key={grad.name}>\n        {grad.name}\n      </option>\n    ));\n\n    return (\n      <div>\n        <input\n          value={name}\n          onChange={e => {\n            this.setState({ name: e.target.value });\n          }}\n        />\n        <select\n          value={graduation}\n          onChange={e => {\n            this.setState({ graduation: e.target.value });\n          }}\n        >\n          {optItems}\n        </select>\n        Start:\n        <input\n          type=\"checkbox\"\n          checked={isStart}\n          onChange={e => {\n            this.setState({ isStart: e.target.checked });\n          }}\n        />\n        Final:\n        <input\n          type=\"checkbox\"\n          checked={isFin}\n          onChange={e => {\n            this.setState({ isFin: e.target.checked });\n          }}\n        />\n        <button\n          onClick={() => {\n            methods.addTopic(name, graduation, isFin, isStart);\n          }}\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport locE from \"../../game/loc_example\";\n//import locE from \"./../../game/loc_example\";\nimport TopicItem from \"./Topics/TopicItem\";\nimport Topic from \"./Topics/Topic\";\nimport AddTopic from \"./Topics/AddTopic\";\nimport exportFromJSON from \"export-from-json\";\nimport mlpaState from \"../../mlpa_state\";\n\nexport default class Editor extends React.Component {\n  constructor() {\n    super();\n    this.myStorage = window.localStorage;\n    this.loc = {};\n    this.import(true);\n    const { topicId, stageId } = this.getTopStag();\n    this.state = { currentTopic: topicId, currentStage: stageId };\n  }\n\n  import(firstTime) {\n    this.loc = locE;\n\n    this.loc.ssign({ ...mlpaState });\n    if (!firstTime) this.forceUpdate();\n  }\n\n  getTopStag() {\n    const topicId = this.loc.topics[0] ? this.loc.topics[0].id : null;\n    const stageId = this.loc._getStages(topicId)[0]\n      ? this.loc._getStages(topicId)[0].id\n      : null;\n    return { topicId, stageId };\n  }\n\n  exportFile() {\n    const data = this.loc;\n    const fileName = \"mlpa_state\";\n    const exportType = \"json\";\n\n    exportFromJSON({ data, fileName, exportType });\n  }\n\n  saveLoc() {\n    const locData = JSON.stringify(this.loc);\n    this.myStorage.setItem(\"locData\", locData);\n  }\n\n  addTopic = (name, gradName, isFin, isStart) => {\n    this.loc.cTopic(name, gradName, isFin, isStart);\n    this.forceUpdate();\n  };\n\n  addStage = (topicId, isStart) => {\n    this.loc.addStages(\n      topicId,\n      this.loc.cStage(\n        isStart,\n        this.loc.cStuff({ isA: true }, this.loc.cPhrase(\"space\"))\n      )\n    );\n    this.forceUpdate();\n  };\n  updateStage = (id, isStart) => {\n    const stage = this.loc.stages.find(s => s.id === id);\n    stage.isStart = isStart;\n    this.forceUpdate();\n  };\n  updateTopic = (topicId, name, gradName, isFin, isStart) => {\n    const topic = this.loc._getTopic(topicId);\n    topic.name = name;\n    topic.graduation = gradName;\n    topic.isFin = isFin;\n    topic.isStart = isStart;\n    this.forceUpdate();\n  };\n  addPhrase = (stuffId, range, text, isGeneral) => {\n    this.loc.addPhrases(stuffId, [this.loc.cPhrase(text, isGeneral, range)]);\n    this.forceUpdate();\n  };\n\n  updatePhrase = (stuffId, range, id, newText) => {\n    const phrase = this.loc.phrases.find(p => p.id === id);\n    if (phrase) {\n      phrase.text = newText;\n      if (!newText && !phrase.isGeneral && phrase.rangeName)\n        this.removePhrase(phrase.id);\n    } else {\n      this.addPhrase(stuffId, range, newText);\n    }\n    this.forceUpdate();\n  };\n\n  addStuff = (stageId, isA, nextStageId, changes = []) => {\n    const newStaff = this.loc.cStuff(\n      {\n        isA,\n        id: nextStageId\n      },\n      this.loc.cPhrase(\"space\"),\n      this.loc.cPhrase(\"generalSpace\", true)\n    );\n\n    this.loc.addStuffs(stageId, newStaff);\n\n    this.forceUpdate();\n  };\n  updateStuff = (id, nextStageId, ...changes) => {\n    const stuff = this.loc.stuffs.find(s => s.id === id);\n    stuff.next_stage_id = nextStageId;\n    changes.forEach(change => {\n      const changeIndex = stuff.changes.findIndex(\n        c => c.paramName === change.paramName\n      );\n      const thisStuffCh = stuff.changes[changeIndex];\n\n      const changeTerm = change.term;\n\n      if (!thisStuffCh) {\n        stuff.changes.push(this.loc.cChange(change.paramName, changeTerm));\n      } else {\n        if (changeTerm) thisStuffCh.term = changeTerm;\n        else stuff.changes.splice(changeIndex, 1);\n        console.log(thisStuffCh);\n      }\n    });\n    this.forceUpdate();\n  };\n\n  removeTopic = id => {\n    const index = this.loc.topics.findIndex(t => t.id === id);\n    this.loc.topics.splice(index, 1);\n    const stages = this.loc._getStages(id);\n    stages.forEach(s => {\n      this.removeStage(s.id);\n    });\n\n    this.setState({ currentTopic: null, currentStage: null });\n    this.forceUpdate();\n  };\n  removeStage = id => {\n    const index = this.loc.stages.findIndex(s => s.id === id);\n    this.loc.stages.splice(index, 1);\n    const stuffs = this.loc._getStuffs(id);\n    stuffs.forEach(s => {\n      if (s.next_stage_id === id) {\n        s.next_stage_id = null;\n      }\n      this.removeStuff(s.id);\n    });\n    this.setState({ currentStage: null });\n    this.forceUpdate();\n  };\n  removeStuff = id => {\n    const index = this.loc.stuffs.findIndex(s => s.id === id);\n    this.loc.stuffs.splice(index, 1);\n    const phrases = this.loc._getPhrases(id);\n    phrases.forEach(p => {\n      this.removePhrase(p.id);\n    });\n    this.forceUpdate();\n  };\n  removePhrase = id => {\n    const index = this.loc.phrases.findIndex(p => p.id === id);\n    this.loc.phrases.splice(index, 1);\n    this.forceUpdate();\n  };\n\n  click = id => {\n    const firstStage = this.loc._getStages(id)[0];\n    if (firstStage) this.changeStage(firstStage.id);\n    else this.setState({ currentTopic: id, currentStage: null });\n    this.forceUpdate();\n  };\n  changeStage = id => {\n    const stage = this.loc.stages.find(s => s.id === id);\n    if (stage) {\n      this.setState({ currentTopic: stage.topic_id, currentStage: id });\n    }\n\n    this.forceUpdate();\n  };\n\n  render() {\n    const { topics, grads, params, ranges } = this.loc;\n    const stat = {\n      grads,\n      params,\n      ranges\n    };\n\n    const { currentStage, currentTopic } = this.state;\n\n    const methods = {\n      addTopic: this.addTopic,\n      addStage: this.addStage,\n      updateStage: this.updateStage,\n      updateTopic: this.updateTopic,\n      removeTopic: this.removeTopic,\n      removeStage: this.removeStage,\n      updateStuff: this.updateStuff,\n      removeStuff: this.removeStuff,\n      getStages: this.loc._getStages,\n      getStuffs: this.loc._getStuffs,\n      getPhrases: this.loc._getPhrases,\n      addStuff: this.addStuff,\n      updatePhrase: this.updatePhrase,\n      addPhrase: this.addPhrase,\n      removePhrase: this.removePhrase,\n      getParam: this.loc._getParam,\n      checkStageFinal: this.loc.checkStageFinal\n    };\n\n    const topicItems = topics.map(topic => {\n      const isSelect = topic.id === currentTopic;\n      return (\n        <TopicItem\n          key={topic.id}\n          topic={topic}\n          methods={methods}\n          isSelect={isSelect}\n          click={this.click}\n        />\n      );\n    });\n\n    const topicView = currentTopic ? (\n      <Topic\n        allTopics={this.loc.topics}\n        allStages={this.loc.stages}\n        currentStage={currentStage}\n        topic={topics.find(topic => topic.id === this.state.currentTopic)}\n        stat={stat}\n        methods={methods}\n        goTopic={this.click}\n        click={this.changeStage}\n        changeStage={this.changeStage}\n      />\n    ) : null;\n\n    console.log(this.loc);\n    return (\n      <div>\n        <button onClick={() => this.import()}>import</button>\n        <button onClick={() => this.exportFile()}>export</button>\n        <br />\n        <AddTopic methods={methods} stat={stat} />\n        {topicItems}\n        {topicView}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Game from \"./components/Game/Game\";\nimport Editor from \"./components/Editor/Editor\";\n\nfunction App() {\n  return (\n    <div>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}