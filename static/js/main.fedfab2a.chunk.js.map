{"version":3,"sources":["components/Game/Params.js","components/Game/AnswerI/AnswerI.js","components/Game/DialogBox/PhraseText.js","components/Game/DialogBox/DialogBox.js","components/Game/Visual/img-object.js","components/Game/Visual/scene-object.js","components/Game/Visual/Visual.js","game/parameters.js","components/Game/Loading/Loading.js","components/Game/UI.js","components/Game/Settings/FullScreen.js","components/Game/Settings/Settiings.js","components/Game/Screen.js","mlpa_engine/graduation.js","mlpa_engine/parameter.js","mlpa_engine/phrase.js","mlpa_engine/range.js","mlpa_engine/stage.js","mlpa_engine/stuff.js","mlpa_engine/topic.js","mlpa_engine/change.js","mlpa_engine/interf.js","game/loc_example.js","mlpa_engine/loc.js","game/ranges.js","game/grads.js","components/Game/Game.js","components/Editor/Topics/TopicItem.js","components/Editor/Stages/StageItem.js","components/Editor/Stuffs/StuffItem.js","components/Editor/Ranges/RangeItem.js","components/Editor/Stuffs/AddStuff.js","components/Editor/Stages/Stage.js","components/Editor/Topics/Topic.js","components/Editor/Topics/AddTopic.js","components/Editor/Editor.js","App.js","serviceWorker.js","index.js"],"names":["Params","this","props","grads","checkGrad","filter","g","name","params","lim","edit","correctGradsItems","correctGrads","map","key","style","color","paramItems","param","isAchiev","type","disabled","checked","value","onClick","display","height","width","backgroundColor","position","top","React","Component","AnswerI","text","click","isHiding","disClass","className","toUpperCase","PhraseText","state","isStart","curText","balText","pAnsswerd","writingFinish","isPlayer","curLen","length","newText","slice","setTimeout","setState","nextLetterLoop","title","titleClass","DialogBox","dDelay","isPAnsserd","pPhrase","cPhrase","hidingClass","hiding","cAnswer","ImgObject","image","slot","min","max","SceneObject","x","y","imgName","Visual","drawImg","obj","ctx","img","images","find","locFactor","getPosition","camZoom","camX","camY","progress","maxProg","screenWidth","landWidth","screenHeight","landHeight","drawImage","drawSceneLopp","isStarted","newCanvas","document","createElement","newCtx","getContext","scene","getCorrImgName","window","requestAnimationFrame","c","objects","positions","prog","back","legs","body","head","landSizes","index","pos","first","last","factor","refs","myCanvas","loaderLoop","forEach","object","loadImage","sceneObject","Image","url","src","location","href","onload","event","target","push","loadFinished","slotName","corrImages","corrImg","p","isLoaded","ref","Loading","UI","loc","currStageId","getStartId","getStageData","answers","stageId","interf","getInterfaceStage","replic","phrase","stuffId","newStageId","calcStuff","getCorrectPhrase","answersItems","answer","id","generalPhrase","update","gameUI","paramName","term","_editParams","cChange","forceUpdate","loadingAnim","FullScreen","render","fullScreenOn","getElementById","requestFullscreen","Settings","Screen","marginLeft","children","Graduation","rangesNames","Parameter","Phrase","rangeName","isGeneral","stuff_id","Range","Stage","isBeen","topic_id","Stuff","next_stage_id","changes","isA","stage_id","Topic","graduation","isFin","Change","Interf","locE","ranges","topics","stuffs","stages","phrases","addStages","topicId","_getTopic","newStages","stage","concat","console","error","_getStages","_getStuffs","stuff","_getPhrases","_getParam","checkStageFinal","s","gradName","_getGrad","rName","_getRange","range","checkRange","idState","getId","startTopic","topic","startStage","getGeneralPhrase","neutralPhrase","i","checkAnswToGrad","nextStage","replicStuff","ssign","data","k","addTopics","addStuffs","nextStageId","addPhrases","newStuffs","newPhrases","phraseId","grad","change","newValue","answersAll","correctNeutAchiev","correctFinal","incrrectNeutral","r","correct","addParams","cParam","addRanges","cRange","addGrads","cGrad","Game","mlpaState","defaultParams","screen","Math","newWidth","factorW","newHeight","factorH","getSizes","TopicItem","isSelect","margin","padding","cursor","border","StageItem","stuffText","isFinal","methods","StuffItem","allStages","currentTopic","viewAchievs","stat","goStage","allTopics","getPhrases","changesItems","inputElem","onChange","e","updateStuff","Boolean","Number","marginRight","paddingTop","paddingBottom","linkItems","getStages","unshift","linkThemesItems","t","next","newCurrTopic","topicStages","removeButton","removeStuff","viewBox","updatePhrase","RangeItem","AddStuff","addStuff","currentRange","acheivs","pAnswers","changeStage","getStuffs","splitStuffs","stuffsItems","shift","generStuff","noRanges","rangesItems","getParam","align","removeStage","updateStage","nextStuff","nextPhrase","newStageStart","currentStage","stagesItems","optItems","curStage","stageView","updateTopic","removeTopic","addStage","AddTopic","addTopic","App","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"2jiIAEqBA,E,uLAMH,IAAD,EACgBC,KAAKC,MAA1BC,EADK,EACLA,MAAOC,EADF,EACEA,UAGf,OAFkBD,EAAME,QAAO,SAAAC,GAAC,OAAIF,EAAUE,EAAEC,W,+BAIxC,IAAD,EACuBN,KAAKC,MAA3BM,EADD,EACCA,OAAQC,EADT,EACSA,IAAKC,EADd,EACcA,KAGfC,EADeV,KAAKW,eACaC,KAAI,SAAAP,GAAC,OAC1C,yBAAKQ,IAAKR,EAAEC,MAEV,0BAAMQ,MAAO,CAAEC,MAAO,UAAYV,EAAEC,UAIlCU,EAAaT,EAAOK,KAAI,SAAAK,GAC5B,OAAOA,EAAMC,SACX,yBAAKL,IAAKI,EAAMX,MACd,2BAAOa,KAAK,WAAWC,UAAQ,EAACC,QAASJ,EAAMK,QAAU,IACzD,0BAAMR,MAAO,CAAEC,MAAO,UAAYE,EAAMX,OAG1C,yBAAKO,IAAKI,EAAMX,MACd,6BACE,4BACEiB,QAAS,WACPd,EAAKQ,EAAMX,MAAO,KAFtB,KAOA,yBACEQ,MAAO,CACLU,QAAS,eACTC,OAAQ,OACRC,MAAM,GAAD,OAAmB,GAAdT,EAAMK,MAAX,MACLK,gBAAiB,SAGrB,yBACEb,MAAO,CACLU,QAAS,eACTC,OAAQ,OACRC,MAAM,GAAD,OAA2B,IAArBlB,EAAMS,EAAMK,OAAlB,MACLK,gBAAiB,UAIrB,4BACEJ,QAAS,WACPd,EAAKQ,EAAMX,KAAM,KAFrB,KAOA,0BAAMQ,MAAO,CAAEC,MAAO,UAAYE,EAAMX,WAMhD,OACE,yBAAKQ,MAAO,CAACc,SAAU,WAAYC,IAAK,MACrCb,EACAN,O,GAxE2BoB,IAAMC,WCCrBC,G,uLACT,IAAD,EACqChC,KAAKC,MAAzCgC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOd,EADd,EACcA,SAAUe,EADxB,EACwBA,SACzBC,EAAWhB,EAAYe,EAAW,WAAa,GAAM,aAC3D,OACI,6BACF,yBACEE,UAAS,iBAAYD,GACrBb,QAAS,WACFH,GAAUc,MAGhBD,EAAKK,oB,GAZuBR,IAAMC,YCAtBQ,G,kBACnB,WAAYtC,GAAQ,IAAD,8BACjB,4CAAMA,KACDuC,MAAQ,CAAEC,SAAS,EAAMC,QAAS,GAAIC,QAAS,IAFnC,E,8EAID,IAAD,SACsC3C,KAAKC,MAAlDgC,EADO,EACPA,KAAMW,EADC,EACDA,UAAWC,EADV,EACUA,cAAeC,EADzB,EACyBA,SAEhCJ,EAAY1C,KAAKwC,MAAjBE,QACR,GAAIT,IAASS,EAAS,CACpB,IAAMK,EAASL,EAAQM,OACjBC,EAAUhB,EAAKiB,MAAM,EAAGH,EAAS,GAEjCJ,EAAUV,EAAKiB,MAAMH,EAAS,GAEpCI,YAAW,WACT,EAAKC,SAAS,CAAEV,QAASO,EAASR,SAAS,EAAOE,YAClD,EAAKU,mBACJ,SACEP,EAAWF,IAAcC,M,+BAExB,IACAC,EAAa9C,KAAKC,MAAlB6C,SADD,EAE+B9C,KAAKwC,MAAnCC,EAFD,EAECA,QAASC,EAFV,EAEUA,QAASC,EAFnB,EAEmBA,QACtBF,GAASzC,KAAKqD,iBAClB,IAAMC,EAAQR,EAAW,SAAM,qBACzBS,EAAaT,EAAW,SAAW,SACzC,OACE,yBAAKT,UAAU,eACb,0BAAMA,UAAWkB,GAAaD,EAA9B,KADF,IACgDZ,EAC9C,0BAAML,UAAU,YAAYM,Q,GA9BIb,IAAMC,YCCzByB,E,YACnB,aAAe,IAAD,8BACZ,+CAIFZ,UAAY,WAAO,IACTa,EAAW,EAAKxD,MAAhBwD,OACRN,YAAW,WACT,EAAKC,SAAS,CAAEM,YAAY,MAC3BD,IAPH,EAAKjB,MAAQ,CAAEkB,YAAY,GAFf,E,sEAWJ,IAAD,EAC6C1D,KAAKC,MAAjD0D,EADD,EACCA,QAASC,EADV,EACUA,QAASf,EADnB,EACmBA,cAGpBgB,EAJC,EACkCC,OAGZ,gBAAkB,GAEzCC,EAJiB/D,KAAKwC,MAApBkB,WAKN,kBAAC,EAAD,CAAYzB,KAAM2B,EAASf,cAAeA,IACxC,KAEJ,OACE,yBAAKR,UAAU,cACb,yBAAKA,UAAS,2BAAsBwB,IAClC,yBAAKxB,UAAU,kBACb,kBAAC,EAAD,CAAYJ,KAAM0B,EAASb,UAAQ,EAACF,UAAW5C,KAAK4C,YACnDmB,S,GA3B0BjC,IAAMC,W,gCCJxBiC,EACnB,WAAYC,GAA2C,IAApCC,EAAmC,uDAA5B,GAAIC,EAAwB,uCAAnBC,EAAmB,uCAAdnD,EAAc,uDAAN,KAAM,oBACpDjB,KAAKiE,MAAQA,EACbjE,KAAKkE,KAAOA,EACZlE,KAAKmE,IAAMA,EACXnE,KAAKoE,IAAMA,EACXpE,KAAKiB,MAAQA,GCNIoD,EACnB,aAA2C,IAA/BC,EAA8B,uDAA1B,EAAGC,EAAuB,uDAAnB,EAAGC,EAAgB,uCAAP9C,EAAO,2DACxC1B,KAAKsE,EAAIA,EACTtE,KAAKuE,EAAIA,EACTvE,KAAKwE,QAAUA,EACfxE,KAAK0B,MAAQA,GCKI+C,G,kBACnB,WAAYxE,GAAQ,IAAD,uBACjB,4CAAMA,KAmERyE,QAAU,SAACC,EAAKC,GAAS,IACfC,EAAQ,EAAKC,OAAOC,MAAK,SAAAd,GAAK,OAAIA,EAAM3D,OAASqE,EAAIH,WAArDK,IACAnD,EAAgBiD,EAAhBjD,MAAO4C,EAASK,EAATL,EAAGC,EAAMI,EAANJ,EAEZS,EAAYtD,EAAQmD,EAAInD,MACxBD,EAASoD,EAAIpD,OAASuD,EALN,EAOU,EAAKC,cAA7BC,EAPc,EAOdA,QAASC,EAPK,EAOLA,KAAMC,EAPD,EAOCA,KACnB,EAAKC,SAAW,EAAKC,UAAS,EAAKD,UAAY,IAEnD,IAAME,EAAc,EAAKC,UAAY,EAC/BC,EAAe,EAAKC,WAAa,EAEvCd,EAAIe,UACFd,GACCP,EAAIa,GAAQD,EAAUK,GACtBhB,EAAIa,GAAQF,EAAUO,EACvB/D,EAAQwD,EACRzD,EAASyD,IAtFM,EAyInBU,cAAgB,WACQ,EAAKpD,MAAnBqD,WACQ,EAAKzC,SAAS,CAAEyC,WAAW,IAE3C,IAAMC,EAAYC,SAASC,cAAc,UACzCF,EAAUpE,MAAQ,EAAK8D,UACvBM,EAAUrE,OAAS,EAAKiE,WACxB,IAAMO,EAASH,EAAUI,WAAW,MAEpC,IAAK,IAAIrF,KAAO,EAAKsF,MAAO,CAC1B,IAAMxB,EAAM,EAAKwB,MAAMtF,GACvB8D,EAAIH,QAAU,EAAK4B,eAAevF,GAClC,EAAK6D,QAAQC,EAAKsB,GAGpB,EAAKrB,IAAIe,UAAUG,EAAW,EAAG,GAEjCO,OAAOC,sBAAsB,EAAKV,gBAxJlC,EAAKW,EAAI,KACT,EAAK3B,IAAM,KACX,EAAK4B,QAAU,CACb,IAAIxC,EAAU,OAAQ,QACtB,IAAIA,EAAU,OAAQ,QACtB,IAAIA,EAAU,QAAS,OAAQ,EAAG,EClBL,0DDmB7B,IAAIA,EAAU,cAAe,OAAQ,EAAG,GCnBX,0DDoB7B,IAAIA,EAAU,YAAa,OAAQ,GAAI,GCpBV,0DDsB7B,IAAIA,EAAU,WAAY,OAAQ,EAAG,ECrBV,oGDsB3B,IAAIA,EAAU,SAAU,OAAQ,EAAG,GCtBR,oGDuB3B,IAAIA,EAAU,OAAQ,OAAQ,GAAI,GCvBP,qGD4B7B,EAAKqB,SAAW,EAChB,EAAKC,QAAU,IAEf,EAAKmB,UAAY,CACf,CAAEC,KAAM,EAAGvB,KAAM,IAAKC,KAAM,IAAKF,QAAS,IAC1C,CAAEwB,KAAM,IAAKvB,KAAM,IAAKC,KAAM,IAAKF,QAAS,OAC5C,CAAEwB,KAAM,IAAKvB,KAAM,IAAKC,KAAM,IAAKF,QAAS,MAE5C,CAAEwB,KAAM,IAAKvB,KAAM,IAAKC,KAAM,IAAKF,QAAS,MAC5C,CAAEwB,KAAM,IAAKvB,KAAM,IAAKC,KAAM,IAAKF,QAAS,MAC5C,CAAEwB,KAAM,IAAMvB,KAAM,IAAKC,KAAM,IAAKF,QAAS,IAK/C,EAAKiB,MAAQ,CACXQ,KAAM,IAAItC,EAAY,EAAG,EAAG,OAAQ,MACpCuC,KAAM,IAAIvC,EAJE,IACA,IAGwB,OAAQ,KAC5CwC,KAAM,IAAIxC,EALE,IACA,IAIwB,QAAS,KAC7CyC,KAAM,IAAIzC,EANE,IACA,IAKwB,SAAU,MAEhD,EAAKS,OAAS,GAvCG,MAyCiB,EAAK7E,MAAM8G,UAArCvB,EAzCS,EAyCTA,UAAWE,EAzCF,EAyCEA,WAzCF,OA2CjB,EAAKF,UAAYA,EACjB,EAAKE,WAAaA,EAElB,EAAKlD,MAAQ,CAAEqD,WAAW,GA9CT,E,2EAkDjB,GAA8B,IAA1B7F,KAAKyG,UAAUzD,OAAc,OAAOhD,KAAKyG,UAAU,GACvD,IAAK,IAAIO,EAAQ,EAAGA,EAAQhH,KAAKyG,UAAUzD,OAAQgE,IAAS,CAC1D,IAAMC,EAAMjH,KAAKyG,UAAUO,GAC3B,GAAIhH,KAAKqF,SAAW4B,EAAIP,KAAM,CAC5B,IAAMQ,EAAQlH,KAAKyG,UAAUO,EAAQ,GAC/BG,EAAOF,EACPG,GAAUpH,KAAKqF,SAAW6B,EAAMR,OAASS,EAAKT,KAAOQ,EAAMR,MAIjE,MAAO,CAAExB,QAHOgC,EAAMhC,SAAWiC,EAAKjC,QAAUgC,EAAMhC,SAAWkC,EAG/CjC,KAFL+B,EAAM/B,MAAQgC,EAAKhC,KAAO+B,EAAM/B,MAAQiC,EAE7BhC,KADX8B,EAAM9B,MAAQ+B,EAAK/B,KAAO8B,EAAM9B,MAAQgC,GAEhD,GAAIJ,IAAUhH,KAAKyG,UAAUzD,OAAS,EAE3C,OAAOiE,K,qJA2BNjH,KAAKuG,GAAKvG,KAAKqH,KAAKC,WACvBtH,KAAKuG,EAAIvG,KAAKqH,KAAKC,SACnBtH,KAAK4E,IAAM5E,KAAKuG,EAAEL,WAAW,MAE7BlG,KAAKuH,c,yIAIK,IAAD,OACXvH,KAAKwG,QAAQgB,SAAQ,SAAAC,GACnB,EAAKC,UAAUD,Q,gCAITE,GAAc,IAAD,OACbzD,EAAgByD,EAAhBzD,KAAMD,EAAU0D,EAAV1D,MACVY,EAAM,IAAI+C,MACVC,EAAM3D,EAAI,UAAMA,EAAN,KAAgB,GAC9B2D,GAAO5D,EACPY,EAAIiD,IAAJ,UAAazB,OAAO0B,SAASC,KAA7B,gBAAyCH,EAAzC,QACAhD,EAAIoD,OAAS,SAAAC,GAAU,IACbC,EAAWD,EAAXC,QACR,EAAKrD,OAAOsD,KAAK,CAAE9H,KAAM2D,EAAOY,IAAKsD,IACjC,EAAKrD,OAAO9B,SAAW,EAAKwD,QAAQxD,UAEtCqF,EADyB,EAAKpI,MAAtBoI,mB,qCAMCC,GAAW,IAChB/H,EAAWP,KAAKC,MAAhBM,OACFgI,EAAavI,KAAKwG,QAAQpG,QAAO,SAAAuE,GAAG,OAAIA,EAAIT,OAASoE,KACvDE,EAAUD,EAAWxD,MAAK,SAAAJ,GAC5B,GAAIA,EAAI1D,MAAO,CACb,IAAMA,EAAQV,EAAOwE,MAAK,SAAA0D,GAAC,OAAIA,EAAEnI,OAASqE,EAAI1D,SAE9C,OAAOA,EAAMK,OAASqD,EAAIP,KAAOnD,EAAMK,OAASqD,EAAIR,IAC/C,OAAO,KAMhB,OAHKqE,IACHA,EAAUD,EAAWxD,MAAK,SAAAF,GAAG,OAAKA,EAAI5D,UAEjCuH,EAAQvE,Q,+BAuBP,IAAD,EAC6BjE,KAAKC,MAAjCyB,EADD,EACCA,MAAOD,EADR,EACQA,OAAQiH,EADhB,EACgBA,SACf7C,EAAc7F,KAAKwC,MAAnBqD,UAEJ6C,IAAa7C,GACfQ,OAAOC,sBAAsBtG,KAAK4F,eAGpC,IAAMvD,EAAYqG,EAAW,SAAW,GAExC,OACE,6BACE,4BACErG,UAAWA,EACXsG,IAAI,WACJjH,MAAO1B,KAAKwF,UACZ/D,OAAQzB,KAAK0F,WACb5E,MAAO,CAAEY,QAAOD,iB,GA/KUK,IAAMC,YEPrB6G,G,uLAEjB,OAAO,yBAAKvG,UAAU,sB,GAFWP,IAAMC,YCMtB8G,E,YACnB,WAAY5I,GAAQ,IAAD,uBACjB,4CAAMA,KAED6I,IAAM7I,EAAM6I,IACjB,IAAMC,EAAc,EAAKD,IAAIE,aAJZ,EAKY,EAAKC,aAAaF,GAAvCnF,EALS,EAKTA,QAASsF,EALA,EAKAA,QALA,OAMjB,EAAK1G,MAAQ,CACXoB,UACAD,QAAS,0HACTuF,UACA9H,UAAU,EACV2H,cACA5G,UAAU,EACVsB,OAAQ,IACRiF,UAAU,GAdK,E,0EAiBNS,GACX,IAAMC,EAASpJ,KAAK8I,IAAIO,kBAAkBF,GAClCD,EAAoBE,EAApBF,QAGR,MAAO,CACLtF,QAJ0BwF,EAAXE,OACTC,OAINL,a,6BAGGM,GAAU,IAAD,OACRC,EAAazJ,KAAK8I,IAAIY,UAAUF,GAChC7F,EAAU3D,KAAK8I,IAAIa,iBAAiBH,GAF5B,EAGexJ,KAAKiJ,aAAaQ,GAAvC7F,EAHM,EAGNA,QAASsF,EAHH,EAGGA,QAEjBlJ,KAAKoD,SAAS,CACZjB,UAAU,EACVf,UAAU,IAGZ+B,YAAW,WACT,EAAKC,SAAS,CACZO,UACAC,UACAmF,YAAaU,EACbP,UACA/G,UAAU,EACVsB,OAAQ,QAET,O,sCAIHzD,KAAKoD,SAAS,CAAEhC,UAAU,M,+BAElB,IAAD,SAUHpB,KAAKwC,MARPmB,EAFK,EAELA,QACAC,EAHK,EAGLA,QACAmF,EAJK,EAILA,YACAG,EALK,EAKLA,QACA9H,EANK,EAMLA,SACAe,EAPK,EAOLA,SACAsB,EARK,EAQLA,OACAiF,EATK,EASLA,SAEIkB,EAAeV,EAAQtI,KAAI,SAAAiJ,GAC/B,OACE,kBAAC,EAAD,CACEhJ,IAAKgJ,EAAOC,GACZ7H,KAAM4H,EAAOE,cACb3I,SAAUA,EACVe,SAAUA,EACVD,MAAO,WACL,EAAK8H,OAAOH,EAAOC,UAnBpB,EAyB8B9J,KAAKC,MAAlCyB,EAzBD,EAyBCA,MAAOD,EAzBR,EAyBQA,OAAQsF,EAzBhB,EAyBgBA,UAEjBkD,EAASvB,EACb,6BACE,kBAAC,EAAD,CACInI,OAAQP,KAAK8I,IAAIvI,OACjBC,IAAKR,KAAK8I,IAAItI,IACdC,KAAM,SAACyJ,EAAWC,GAChB,EAAKrB,IAAIsB,YAAY,CAAC,EAAKtB,IAAIuB,QAAQH,EAAWC,KAClD,EAAKG,eAEPpK,MAAOF,KAAK8I,IAAI5I,MAChBC,UAAWH,KAAK8I,IAAI3I,YAExB,yBAAKkC,UAAU,WAAWuH,GAC1B,kBAAC,EAAD,CACE9F,OAAQ3B,EACRtB,IAAKkI,EACLpF,QAASA,EACTC,QAASA,EACTH,OAAQA,EACRZ,cAAe,WACb,EAAKA,oBAIT,KAEE0H,EAAe7B,EAAyB,KAAd,kBAAC,EAAD,MAEhC,OACE,6BACE,kBAAC,EAAD,CACInI,OAAQP,KAAK8I,IAAIvI,OACnBmB,MAAOA,EACPD,OAAQA,EACRiH,SAAUA,EACVL,aAAc,kBAAM,EAAKjF,SAAS,CAAEsF,UAAU,KAC9C3B,UAAWA,IAEZkD,EAEAM,O,GAxHuBzI,IAAMC,WCPjByI,E,2MAKnBC,OAAS,WACP,OACE,4BACElJ,QAAS,WACP,EAAKmJ,iBAFT,gB,8EALgB3E,SAAS4E,eAAe,aAChCC,wB,GAH0B9I,IAAMC,WCCzB8I,E,iLAEjB,OACE,yBAAKxI,UAAU,YACb,kBAAC,EAAD,W,GAJ8BP,IAAMC,WCCvB+I,G,uLACT,IAAD,EACmB9K,KAAKC,MAAvByB,EADD,EACCA,MACFZ,EAAQ,CACZY,QACAD,OAJK,EACQA,OAIbD,QAAS,eACTG,gBAAiB,QAEjBoJ,WAAW,cAAD,OAAgBrJ,EAAQ,EAAxB,OACVE,SAAU,YAGZ,OACE,yBAAKkI,GAAG,aACN,yBAAKhJ,MAAOA,GACTd,KAAKC,MAAM+K,SACZ,kBAAC,EAAD,Y,GAjB0BlJ,IAAMC,YCJrBkJ,EACnB,WAAY3K,EAAM4K,GAAc,oBAC9BlL,KAAKM,KAAOA,EACZN,KAAKkL,YAAcA,GCHFC,EACnB,WAAY7K,EAAMgB,GAA0B,IAAnBJ,EAAkB,4EACzClB,KAAKM,KAAOA,EACZN,KAAKsB,MAAQA,EACbtB,KAAKkB,SAAWA,GCJCkK,EACnB,WAAYC,EAAWpJ,EAAMqJ,EAAWxB,GAAK,yBAM7CyB,SAAW,KALTvL,KAAKqL,UAAYA,EACjBrL,KAAKiC,KAAOA,EACZjC,KAAKsL,UAAYA,EACjBtL,KAAK8J,GAAKA,GCLO0B,EACnB,WAAYlL,EAAM4J,EAAW/F,EAAKC,GAAM,oBACtCpE,KAAKM,KAAOA,EACZN,KAAKkK,UAAYA,EACjBlK,KAAKmE,IAAMA,EACXnE,KAAKoE,IAAMA,GCLMqH,EACnB,WAAYhJ,EAASqH,GAAK,yBAI1B4B,QAAS,EAJgB,KAKzBC,SAAW,KAJT3L,KAAK8J,GAAKA,EACV9J,KAAKyC,QAAUA,GCHEmJ,EACnB,WAAYC,GAA+C,IAAhCC,EAA+B,uDAArB,GAAIC,EAAiB,wDAAJjC,EAAI,gEAM1DkC,SAAW,KALThM,KAAK6L,cAAgBA,EACrB7L,KAAK8L,QAAUA,EACf9L,KAAK+L,IAAMA,EACX/L,KAAK8J,GAAKA,GCLOmC,EACnB,WAAY3L,EAAM4L,EAAYC,EAAO1J,EAASqH,GAAK,oBACjD9J,KAAKM,KAAOA,EACZN,KAAKkM,WAAaA,EAClBlM,KAAKmM,MAAQA,EACbnM,KAAKyC,QAAUA,EACfzC,KAAK8J,GAAKA,GCNOsC,EACnB,WAAYlC,EAAWC,GAAO,oBAC5BnK,KAAKkK,UAAYA,EACjBlK,KAAKmK,KAAOA,GCHKkC,EACnB,WAAYtC,EAAeR,EAAQO,GAAK,oBACtC9J,KAAK+J,cAAgBA,EACrB/J,KAAKuJ,OAASA,EACdvJ,KAAK8J,GAAKA,G,OC2BRwC,EAAO,I,4DCpBX/L,OAAS,G,KACTgM,OAAS,G,KACTrM,MAAQ,G,KACRsM,OAAS,G,KAETC,OAAS,G,KACTC,OAAS,G,KACTC,QAAU,G,KAEVnM,IAAM,G,KAuCNoM,UAAY,SAACC,GACX,GAAI,EAAKC,UAAUD,GAAU,CAAC,IAAD,uBADNH,EACM,iCADNA,EACM,kBAC3B,IAAMK,EAAYL,EAAO9L,KAAI,SAAAoM,GAC3B,OAAO,eAAKA,EAAZ,CAAmBrB,SAAUkB,OAE/B,EAAKH,OAAS,EAAKA,OAAOO,OAAOF,QAC5BG,QAAQC,MAAR,gBAAuBN,EAAvB,iB,KA0CTO,WAAa,SAAAP,GACX,OAAO,EAAKH,OAAOtM,QAAO,SAAA4M,GAAK,OAAIA,EAAMrB,WAAakB,M,KAGxDQ,WAAa,SAAAlE,GACX,OAAO,EAAKsD,OAAOrM,QAAO,SAAAkN,GAAK,OAAIA,EAAMtB,WAAa7C,M,KAGxDoE,YAAc,SAAA/D,GACZ,OAAO,EAAKmD,QAAQvM,QAAO,SAAAmJ,GAAM,OAAIA,EAAOgC,WAAa/B,M,KAG3DgE,UAAY,SAAAlN,GACV,OAAO,EAAKC,OAAOwE,MAAK,SAAA9D,GAAK,OAAIA,EAAMX,OAASA,M,KA4BlDmN,gBAAkB,SAAAtE,GAEhB,OADe,EAAKkE,WAAWlE,GAChBpE,MAAK,SAAA2I,GAAC,OAAKA,EAAE3B,Q,KAY9B5L,UAAY,SAAAwN,GACV,IACMpB,EADO,EAAKqB,SAASD,GACPzC,YAAYtK,KAAI,SAAAiN,GAAK,OAAI,EAAKC,UAAUD,MACtDtN,EAAS,GAMf,IAAK,IAAIM,KALT0L,EAAO/E,SAAQ,SAAAuG,GACRxN,EAAOwN,EAAM7D,aAChB3J,EAAOwN,EAAM7D,WAAa,EAAK8D,WAAWD,EAAMzN,UAGpCC,EACd,IAAKA,EAAOM,GAAM,OAAO,EAE3B,OAAO,G,KAGToN,QAAU,G,KACVC,MAAQ,SAAA/M,GAGN,OAFK,EAAK8M,QAAQ9M,KAAO,EAAK8M,QAAQ9M,GAAQ,GAC9C,EAAK8M,QAAQ9M,KACN,EAAK8M,QAAQ9M,I,KAGtB6H,WAAa,WACX,IAAMmF,EAAa,EAAK3B,OAAOzH,MAAK,SAAAqJ,GAAK,OAAIA,EAAM3L,WAE7C4L,EADS,EAAKjB,WAAWe,EAAWrE,IAChB/E,MAAK,SAAAiI,GAAK,OAAIA,EAAMvK,WAC9C,OAAO4L,EAAaA,EAAWvE,GAAK,M,KAGtCJ,UAAY,SAAAF,GACV,IAAM8D,EAAQ,EAAKb,OAAO1H,MAAK,SAAA2I,GAAC,OAAIA,EAAE5D,KAAON,KAG7C,OADA,EAAKY,YAAYkD,EAAMxB,SAChBwB,EAAMzB,e,KAGfyC,iBAAmB,SAAA9E,GACjB,IAAM8D,EAAQ,EAAKb,OAAO1H,MAAK,SAAA2I,GAAC,OAAIA,EAAE5D,KAAON,KAEvCO,EADU,EAAKwD,YAAYD,EAAMxD,IACT/E,MAAK,SAAAwE,GAAM,OAAIA,EAAO+B,aACpD,cAAOvB,QAAP,IAAOA,OAAP,EAAOA,EAAe9H,M,KAGxB0H,iBAAmB,SAAAH,GACjB,IAAM8D,EAAQ,EAAKb,OAAO1H,MAAK,SAAA2I,GAAC,OAAIA,EAAE5D,KAAON,KACvCmD,EAAU,EAAKY,YAAYD,EAAMxD,IACjCyE,EAAgB5B,EAAQ5H,MAAK,SAAAwE,GAAM,OAAKA,EAAO8B,aACrD,IAAK,IAAImD,KAAK7B,EAAS,CACrB,IAAMpD,EAASoD,EAAQ6B,GACvB,GAAIjF,EAAO8B,WAAa,EAAK2C,WAAWzE,EAAO8B,WAC7C,OAAO9B,EAAOtH,KAGlB,OAAOsM,EAActM,M,KAoDvBwM,gBAAkB,SAAAnB,GAChB,IAAMoB,EAAY,EAAKhC,OAAO3H,MAC5B,SAAAiI,GAAK,OAAIA,EAAMlD,KAAOwD,EAAMzB,iBAExBuC,EAAQ,EAAKtB,UAAU4B,EAAU/C,UACvC,OAAO,EAAKxL,UAAUiO,EAAMlC,a,KAI9B7C,kBAAoB,SAAAS,GAGJ,EAAK4C,OAAO3H,MAAK,SAAA2I,GAAC,OAAIA,EAAE5D,KAAOA,KACvC4B,QAAS,EAEf,IAAMe,EAAS,EAAKY,WAAWvD,GAEzB6E,EAAclC,EAAO1H,MAAK,SAAAuI,GAAK,OAAIA,EAAMvB,OACzCzC,EAAS,IAAI+C,EAAO,KAAM,EAAK1C,iBAAiBgF,EAAY7E,KAqBlE,MAXe,CACbZ,QARiBuD,EAAOrM,QAAO,SAAAkN,GAC/B,OAAQA,EAAMvB,OAOMnL,KAAI,SAAA0M,GACtB,OAAO,IAAIjB,EACT,EAAKiC,iBAAiBhB,EAAMxD,IAC5B,EAAKH,iBAAiB2D,EAAMxD,IAC5BwD,EAAMxD,OAGVR,W,KAMJsF,MAAQ,SAAAC,GAAS,IAAD,WACLhO,GACF,CAAC,SAAU,QAAS,UAAUkE,MAAK,SAAA+J,GAAC,OAAIA,IAAMjO,OACjD,EAAKA,GAAOgO,EAAKhO,KAFrB,IAAK,IAAIA,KAAOgO,EAAO,EAAdhO,I,mDAhSJP,EAAMgB,EAAOJ,GAClB,OAAO,IAAIiK,EAAU7K,EAAMgB,EAAOJ,K,kCAEd,IAAD,uBAARX,EAAQ,yBAARA,EAAQ,gBACnBP,KAAKO,OAASP,KAAKO,OAAO0M,OAAO1M,K,6BAG5BD,EAAM6D,EAAKC,EAAK8F,GACrB,OAAO,IAAIsB,EAAMlL,EAAM4J,EAAW/F,EAAKC,K,kCAEnB,IAAD,uBAARmI,EAAQ,yBAARA,EAAQ,gBACnBvM,KAAKuM,OAASvM,KAAKuM,OAAOU,OAAOV,K,4BAG7BjM,GAAuB,IAAD,uBAAb4K,EAAa,iCAAbA,EAAa,kBAC1B,OAAO,IAAID,EAAW3K,EAAM4K,K,iCAEV,IAAD,uBAAPhL,EAAO,yBAAPA,EAAO,gBACjBF,KAAKE,MAAQF,KAAKE,MAAM+M,OAAO/M,K,6BAG1BI,EAAMqN,EAAUxB,EAAO1J,GAC5B,IAAMoK,EAAU7M,KAAKkO,MAAM,UAC3BlO,KAAK+O,UAAU,IAAI9C,EAAM3L,EAAMqN,EAAUxB,EAAO1J,EAASoK,IAFT,2BAARH,EAAQ,iCAARA,EAAQ,kBAGhD1M,KAAK4M,UAAL,MAAA5M,KAAA,CAAe6M,GAAf,OAA2BH,M,kCAGP,IAAD,uBAARF,EAAQ,yBAARA,EAAQ,gBACnBxM,KAAKwM,OAASxM,KAAKwM,OAAOS,OAAOT,K,6BAG5B/J,GAAqB,IAC1B,IAAM0G,EAAUnJ,KAAKkO,MAAM,UADD,mBAAThF,EAAS,iCAATA,EAAS,kBAG1B,OADAlJ,KAAKgP,UAAL,MAAAhP,KAAA,CAAemJ,GAAf,OAA2BD,IACpB,IAAIuC,EAAMhJ,EAAS0G,K,6BAYrBlJ,GAAmB,IAAC,IAAD,EACuBA,GAAgB,GAAnDgP,EADY,EAChBnF,GADgB,IACCgC,eADD,MACW,GADX,EACeC,EADf,EACeA,IACjCvC,EAAUxJ,KAAKkO,MAAM,UAFH,mBAATvB,EAAS,iCAATA,EAAS,kBAKxB,OADA3M,KAAKkP,WAAW1F,EAASmD,GAClB,IAAIf,EACTqD,EACClD,EAAoC,GAA9BD,EAAQ1L,QAAO,SAAAmG,GAAC,OAAIA,EAAE4D,QAC7B4B,EACAvC,K,gCAIML,GAAqB,IAAD,uBAARsD,EAAQ,iCAARA,EAAQ,kBAC5B,IAAM0C,EAAY1C,EAAO7L,KAAI,SAAA0M,GAAK,sBAAUA,EAAV,CAAiBtB,SAAU7C,OAC7DnJ,KAAKyM,OAASzM,KAAKyM,OAAOQ,OAAOkC,K,iCAGxB3F,EAASmD,GAClB,IAAMyC,EAAazC,EAAQ/L,KAAI,SAAA2I,GAAM,sBAChCA,EADgC,CAEnCgC,SAAU/B,OAGZxJ,KAAK2M,QAAU3M,KAAK2M,QAAQM,OAAOmC,K,8BAG7BnN,GAAqC,IAA/BqJ,EAA8B,wDAAXD,EAAW,uCACpCgE,EAAWrP,KAAKkO,MAAM,WAC5B,OAAO,IAAI9C,EAAOC,EAAWpJ,EAAMqJ,EAAW+D,K,8BAGxCnF,EAAWC,GACjB,OAAO,IAAIiC,EAAOlC,EAAWC,K,gCAGrBL,GACR,OAAO9J,KAAKwM,OAAOzH,MAAK,SAAAqJ,GAAK,OAAIA,EAAMtE,KAAOA,O,gCAkBtCxJ,GACR,OAAON,KAAKuM,OAAOxH,MAAK,SAAAgJ,GAAK,OAAIA,EAAMzN,OAASA,O,+BAGzCA,GACP,OAAON,KAAKE,MAAM6E,MAAK,SAAAuK,GAAI,OAAIA,EAAKhP,OAASA,O,kCAGnCwL,GAAU,IAAD,OACnBA,EAAQtE,SAAQ,SAAA+H,GACd,IAAMtO,EAAQ,EAAKuM,UAAU+B,EAAOrF,WAEpC,GAAIjJ,EAAMC,SACRD,EAAMK,OAAQ,MACT,CACL,IAAMkO,EAAWvO,EAAMK,MAAQiO,EAAOpF,KAClCqF,EAAW,EAAKhP,IAClBS,EAAMK,MAAQ,EAAKd,IAEnBS,EAAMK,MADGkO,EAAW,EACN,EACKA,Q,iCAUhBnE,GACT,IAAM0C,EAAQ/N,KAAK8N,UAAUzC,GACvBpK,EAAQjB,KAAKwN,UAAUO,EAAM7D,WAInC,OAHYjJ,EAAMC,SACdD,EAAMK,QAAUyM,EAAM3J,IACtBnD,EAAMK,OAASyM,EAAM5J,KAAOlD,EAAMK,OAASyM,EAAM3J,M,wCA4DrC0F,GAAK,IAAD,OAMd2F,EAHSzP,KAAKqN,WAAWvD,GAGL1J,QAAO,SAAAkN,GAC/B,OAAIA,EAAMvB,MAEM,EAAKW,OAAO3H,MAAK,SAAA2I,GAAC,OAAIA,EAAE5D,KAAOwD,EAAMzB,iBACrCH,UAIZgE,EAAoB,GACpBC,EAAe,GACfC,EAAkB,GA8BxB,OA5BAH,EAAWjI,SAAQ,SAAA8F,GACjB,IAAMoB,EAAY,EAAKhC,OAAO3H,MAC5B,SAAAiI,GAAK,OAAIA,EAAMlD,KAAOwD,EAAMzB,iBAExBuC,EAAQ,EAAKtB,UAAU4B,EAAU/C,UACjC2D,EAAO,EAAK1B,SAASQ,EAAMlC,YAI3BhL,EAHSoO,EAAKpE,aAAY,SAAA2C,GAAK,OAAI,EAAKC,UAAUD,MAClC3C,aAAY,SAAA2E,GAAC,OAAI,EAAKrC,UAAUqC,EAAE3F,cAEhCnF,MAAK,SAAA0D,GAAC,OAAIA,EAAEvH,YAC9B4O,EAAU,EAAK3P,UAAUmP,EAAKhP,MAC5B6L,EAAUiC,EAAVjC,MAEJ2D,EAGG3D,EAEAwD,EAAavH,KAAKkF,GAFXoC,EAAkBtH,KAAKkF,GAGzBpM,GAAaiL,GAEvByD,EAAgBxH,KAAKkF,MAINoC,EAAkBzC,OAAO2C,GAGxB1M,MAAM,EA5CR,O,MD5LtBoJ,EAAKyD,UACHzD,EAAK0D,OfjC4B,yDeiCA,GACjC1D,EAAK0D,OfjC0B,mGeiCA,GAE/B1D,EAAK0D,OfjCkB,0FeiCA,GAAO,IAGhC1D,EAAK2D,UACH3D,EAAK4D,OExCoB,uCFwCA,EAAG,EfvCG,oGewC/B5D,EAAK4D,OExCsB,iFFwCA,EAAG,GfxCC,oGeyC/B5D,EAAK4D,OExCwB,2EFwCA,GAAI,GfzCF,oGe2C/B5D,EAAK4D,OExCqB,uCFwCA,EAAG,Ef5CI,0De6CjC5D,EAAK4D,OExC0B,iFFwCA,EAAG,Gf7CD,0De8CjC5D,EAAK4D,OExCyB,qEFwCA,GAAI,Gf9CD,0DegDjC5D,EAAK4D,OExCkB,0FFwCA,GAAM,Ef7CN,2Fe+CzB5D,EAAK6D,SACH7D,EAAK8D,MGnDqB,8CDAD,uCAIC,wCFgD1B9D,EAAK8D,MGnDqB,8CDDD,uCAKM,kFFgD/B9D,EAAK8D,MGnDqB,kCDFD,uCAMK,sEFiD9B9D,EAAK8D,MGnDqB,oDDHC,iFAGD,wCFoD1B9D,EAAK8D,MGnDqB,oDDJC,iFAII,kFFoD/B9D,EAAK8D,MGnDqB,wCDLC,iFAKG,sEFqD9B9D,EAAK8D,MGnDsB,oDDNE,2EAEH,wCFwD1B9D,EAAK8D,MGnDsB,oDDPE,2EAGE,kFFwD/B9D,EAAK8D,MGnDsB,wCDRE,2EAIC,sEFyD9B9D,EAAK8D,MGnDiB,yFDJC,2FF0DV9D,Q,OI5DM+D,E,YACnB,aAAe,IAAD,8BACZ,+CAEK7K,UAAY,KACjB,EAAKE,WAAa,KAElB,EAAKoD,IAAMwD,EACX,EAAKxD,IAAI8F,MAAM0B,GACf,EAAKC,gBARO,E,6EAWZvQ,KAAK8I,IAAIvI,OAAOiH,SAAQ,SAAAiB,GACjBA,EAAEvH,WAAUuH,EAAEnH,MAAQ,Q,iCAGnB,IAAD,EACiB+E,OAAOmK,OAAzB9O,EADC,EACDA,MAAOD,EADN,EACMA,OAET2C,EAAMqM,KAAKrM,IAAI1C,EAAOD,GACtB0C,EAAMsM,KAAKtM,IAAIzC,EAAOD,GAExBiP,EAAWtM,EAETuM,EAAUD,EAAW1Q,KAAKwF,UAC5BoL,EAAY5Q,KAAK0F,WAAaiL,EAClC,GAAIC,EAAYzM,EAAK,CAEnB,IAAM0M,GADND,EAAYzM,GACgBnE,KAAK0F,WACjCgL,EAAW1Q,KAAKwF,UAAYqL,EAE9B,MAAO,CAAEH,WAAUE,e,+BAEX,IAAD,EACyB5Q,KAAK8Q,WAA7BJ,EADD,EACCA,SAAUE,EADX,EACWA,UAClB,OACE,kBAAC,EAAD,CAAQlP,MAAOgP,EAAUjP,OAAQmP,GAC/B,kBAAC,EAAD,CACE9H,IAAK9I,KAAK8I,IACVpH,MAAOgP,EACPjP,OAAQmP,EACR7J,UAAW,CAAEvB,UAAWxF,KAAKwF,UAAWE,WAAY1F,KAAK0F,mB,GAzCjC5D,IAAMC,WCJnBgP,E,iLACT,IAAD,EAC4B/Q,KAAKC,MAAhCmO,EADD,EACCA,MAAO4C,EADR,EACQA,SAAU9O,EADlB,EACkBA,MAQnBpB,EAAQ,CACZa,gBAAiBqP,EAAW,QAAU,OACtCxP,QAAS,eACTyP,OAAQ,SACRC,QAAS,SACTC,OAAQ,UACRpQ,MAAO,QACPqQ,OAbahD,EAAM3L,QACjB,mBACA2L,EAAMjC,MACN,oBACA,QAWJ,OACE,yBACErL,MAAOA,EACPS,QAAS,WACPW,EAAMkM,EAAMtE,MAGbsE,EAAM9N,U,GA1BwBwB,IAAMC,WCAxBsP,E,iLACT,IAAD,EACgDrR,KAAKC,MAApD+M,EADD,EACCA,MAAO9K,EADR,EACQA,MAAO8O,EADf,EACeA,SAAUM,EADzB,EACyBA,UAE1BC,EAHC,EACoCC,QAEnB/D,gBAAgBT,EAAMlD,IAOxChJ,EAAQ,CACZa,gBAAiBqP,EAAW,OAAS,OACrCG,OAAQ,UACR3P,QAAS,eACTyP,OAAQ,SACRC,QAAS,SACTnQ,MAAO,QACPqQ,OAbapE,EAAMvK,QACjB,mBACA8O,EACA,oBACA,QAWJ,OACE,yBACEhQ,QAAS,WACPW,EAAM8K,EAAMlD,KAEdhJ,MAAOA,GAENwQ,EAAUtE,EAAMlD,S,GA3BchI,IAAMC,W,QCAxB0P,E,YACnB,WAAYxR,GAAQ,IAAD,sBACjB,4CAAMA,IAEN,IAAMyO,EAAYzO,EAAMyR,UAAU3M,MAChC,SAAA2I,GAAC,OAAIA,EAAE5D,KAAO7J,EAAMqN,MAAMzB,iBAEtB8F,EAAY,OAAGjD,QAAH,IAAGA,OAAH,EAAGA,EAAW/C,SANf,OAQjB,EAAKnJ,MAAQ,CACXmP,eACAC,aAAa,GAVE,E,sEAaT,IAAD,SAUH5R,KAAKC,MARPqN,EAFK,EAELA,MACAkE,EAHK,EAGLA,QACAzD,EAJK,EAILA,MACA8D,EALK,EAKLA,KACAC,EANK,EAMLA,QACAJ,EAPK,EAOLA,UACAJ,EARK,EAQLA,UACAS,EATK,EASLA,UAGIxI,EAASiI,EAAQQ,WAAW1E,EAAMxD,IAAI/E,MAAK,SAAA0D,GAC/C,OACEA,EAAE4C,YAAc0C,GACL,SAAVA,IAAqBtF,EAAE4C,WACb,YAAV0C,GAAuBtF,EAAE6C,aAItBQ,EAAYwB,EAAZxB,QApBD,EAqB+B9L,KAAKwC,MAAnCmP,EArBD,EAqBCA,aAAcC,EArBf,EAqBeA,YAEhBK,EAAgB3E,EAAMvB,IA8CxB,KA7CA8F,EAAKtR,OAAOK,KAAI,SAAA6H,GACd,IAAMlC,EAAIuF,EAAQ/G,MAAK,SAAAwK,GAAM,OAAIA,EAAOrF,YAAczB,EAAEnI,QAElD6J,EAAO5D,EAAIA,EAAE4D,MAAO1B,EAAEvH,UAAmB,EAEzCgR,EAAYzJ,EAAEvH,SAClB,2BACEC,KAAK,WACLE,QAAS8I,EACTgI,SAAU,SAAAC,GACRZ,EAAQa,YAAY/E,EAAMxD,GAAIwD,EAAMzB,cAAe,CACjD3B,UAAWzB,EAAEnI,KACb6J,KAAMmI,QAAQF,EAAEjK,OAAO9G,cAK7B,2BACEF,KAAK,SACLL,MAAO,CAAEY,MAAO,QAChBJ,MAAO6I,EACPgI,SAAU,SAAAC,GACRZ,EAAQa,YAAY/E,EAAMxD,GAAIwD,EAAMzB,cAAe,CACjD3B,UAAWzB,EAAEnI,KACb6J,KAAMoI,OAAOH,EAAEjK,OAAO7G,YAM9B,OAAKsQ,GAAenJ,EAAEvH,SAAiB,KAErC,0BACEJ,MAAO,CACLU,QAAS,eACT0P,QAAS,SACTvP,gBAAiB,UACjB6Q,YAAa,UAEf3R,IAAK4H,EAAEnI,MAENmI,EAAEnI,KATL,IASY4R,MAMdpR,EAAQ,CACZa,gBAAiB2L,EAAMvB,IAAM,UAAY,UACzCoF,OAAQ,UACRF,OAAQ,SAERwB,WAAYnF,EAAMvB,IAAM,OAAS,SACjC2G,cAAepF,EAAMvB,IAAM,OAAS,SAEpCvK,QAAS,eACTE,MAAO,OAGHO,EAAOsH,EAASA,EAAOtH,KAAO,GAE9B0Q,EAAYnB,EAAQoB,UAAU5S,KAAKwC,MAAMmP,cAAc/Q,KAAI,SAAA8M,GAC/D,OACE,4BAAQpM,MAAOoM,EAAE5D,GAAIjJ,IAAK6M,EAAE5D,IACzBwH,EAAU5D,EAAE5D,QAKd4H,EAAU3M,MAAK,SAAA2I,GAAC,OAAIA,EAAE5D,KAAOwD,EAAMzB,kBACtC8G,EAAUE,QACR,4BAAQvR,MAAO,QAAST,IAAI,KACzByM,EAAMzB,cADT,eAMJ,IAAMiH,EAAkBf,EAAUnR,KAAI,SAAAmS,GACpC,OACE,4BAAQzR,MAAOyR,EAAEjJ,GAAIjJ,IAAKkS,EAAEjJ,IACzBiJ,EAAEzS,SAKH0S,EAAQ1F,EAAMvB,IA2ChB,KA1CF,yBAAKjL,MAAO,CAAEU,QAAS,eAAgBgR,YAAa,WAClD,yBACE1R,MAAO,CACLU,QAAS,eACTG,gBAAiB,MACjBwP,OAAQ,UACRpQ,MAAO,SAETQ,QAAS,WACPuQ,EAAQxE,EAAMzB,iBARlB,QAaC8F,EAED,4BACErQ,MAAOtB,KAAKwC,MAAMmP,aAClBQ,SAAU,SAAAC,GACR,IAAMa,EAAeV,OAAOH,EAAEjK,OAAO7G,OACrC,EAAK8B,SAAS,CAAEuO,aAAcsB,IAC9B,IAAMC,EAAc1B,EAAQoB,UAAUK,GAGpCC,EAAYlQ,SACXkQ,EAAYnO,MAAK,SAAA2I,GAAC,OAAIA,EAAE5D,KAAOwD,EAAMzB,kBAEtC2F,EAAQa,YAAY/E,EAAMxD,GAAIoJ,EAAY,GAAGpJ,MAGhDgJ,GAGH,4BACExR,MAAOgM,EAAMzB,cACbsG,SAAU,SAAAC,GACRZ,EAAQa,YAAY/E,EAAMxD,GAAIyI,OAAOH,EAAEjK,OAAO7G,UAG/CqR,IAKDQ,EAAgB7F,EAAMvB,IAExB,KADF,4BAAQxK,QAAS,kBAAMiQ,EAAQ4B,YAAY9F,EAAMxD,MAAjD,KAGIuJ,EAAU/F,EAAMvB,IAAM,KAC1B,2BACE5K,KAAK,WACLE,QAASuQ,EACTO,SAAU,SAAAC,GACR,EAAKhP,SAAS,CAAEwO,YAAaQ,EAAEjK,OAAO9G,aAK5C,OACE,6BACG8R,EACD,yBAAKrS,MAAOA,GAAZ,IACIwM,EAAMxD,GADV,IACe,IACb,2BACExI,MAAOW,EACPnB,MAAO,CAAEY,MAAO,OAChByQ,SAAU,SAAAC,GACRZ,EAAQ8B,aACNhG,EAAMxD,GACI,SAAViE,EAAmB,KAAOA,EAC1BxE,EAASA,EAAOO,GAAK,KACrBsI,EAAEjK,OAAO7G,WAKhB0R,EACAf,EACAoB,O,GA1M8BvR,IAAMC,WCAxBwR,E,iLACT,IAAD,EAC4BvT,KAAKC,MAAhC8N,EADD,EACCA,MAAOiD,EADR,EACQA,SAAU9O,EADlB,EACkBA,MAEnBpB,EAAQ,CACZa,gBAAiBqP,EAAW,SAAW,OACvCG,OAAQ,UACR3P,QAAS,eACTyP,OAAQ,SACRC,QAAS,SACTnQ,MAAO,SAET,OACE,yBACED,MAAOA,EACPS,QAAS,WACPW,EAAM6L,EAAMzN,QAGbyN,EAAMzN,U,GAnBwBwB,IAAMC,WCAxByR,E,iLACT,IAAD,EAC6BxT,KAAKC,MAAjCuR,EADD,EACCA,QAASrI,EADV,EACUA,QAASiF,EADnB,EACmBA,MAEpBa,EAAcuC,EAAQoB,UAAUxE,EAAMtE,IAAI,GAAGA,GAEnD,OACE,6BACE,4BACEvI,QAAS,WACPiQ,EAAQiC,SAAStK,GAAS,EAAO8F,EAAa,MAFlD,U,GAR8BnN,IAAMC,WCGvB0J,E,YACnB,WAAYxL,GAAQ,IAAD,8BACjB,4CAAMA,KAIRiC,MAAQ,SAAA5B,GACN,EAAK8C,SAAS,CAAEsQ,aAAcpT,KAJ9B,EAAKkC,MAAQ,CAAEkR,aAAc,OAAQC,SAAS,GAF7B,E,yEAQPlH,GAGV,MAAO,CAAE5C,OAFM4C,EAAO1H,MAAK,SAAAuI,GAAK,OAAIA,EAAMvB,OAEzB6H,SADAnH,EAAOrM,QAAO,SAAAkN,GAAK,OAAKA,EAAMvB,U,+BAGvC,IAAD,SAUH/L,KAAKC,MARP+M,EAFK,EAELA,MACAwE,EAHK,EAGLA,QACAK,EAJK,EAILA,KACAgC,EALK,EAKLA,YACAnC,EANK,EAMLA,UACAJ,EAPK,EAOLA,UACAlD,EARK,EAQLA,MACA2D,EATK,EASLA,UAGItF,EAAS+E,EAAQsC,UAAU9G,EAAMlD,IAZhC,EAcsB9J,KAAK+T,YAAYtH,GAAtC5C,EAdD,EAcCA,OAAQ+J,EAdT,EAcSA,SAEVI,EAAc,CAACnK,GAAD,mBAAY+J,IAAUhT,KAAI,SAAA0M,GAe5C,OAdYA,EACV,kBAAC,EAAD,CACEuE,KAAMA,EACN9D,MAAO,EAAKvL,MAAMkR,aAClBlC,QAASA,EACT3Q,IAAKyM,EAAMxD,GACXwD,MAAOA,EACPwE,QAAS+B,EACTnC,UAAWA,EACXK,UAAWA,EACXT,UAAWA,IAEX,QAKF,YAActR,KAAKwC,MAAMkR,cAC3BM,EAAYC,QAnCP,IAsCC1H,EAAWsF,EAAXtF,OAEF2H,EACJ,kBAAC,EAAD,CACElD,SAAU,YAAchR,KAAKwC,MAAMkR,aACnC3F,MAAO,CAAEzN,KAAM,WACf4B,MAAOlC,KAAKkC,QAIViS,EACJ,kBAAC,EAAD,CACEnD,SAAU,SAAWhR,KAAKwC,MAAMkR,aAChC3F,MAAO,CAAEzN,KAAM,QACf4B,MAAOlC,KAAKkC,QAIVkS,EAAc7H,EACjBnM,QAAO,SAAAyP,GACN,IAAM5O,EAAQuQ,EAAQ6C,SAASxE,EAAE3F,WACjC,OAAO,EAAK1H,MAAMmR,UAAY1S,EAAMC,YAErCN,KAAI,SAAAmN,GAAK,OACR,kBAAC,EAAD,CACEiD,SAAUjD,EAAMzN,OAAS,EAAKkC,MAAMkR,aACpC7S,IAAKkN,EAAMzN,KACXyN,MAAOA,EACP7L,MAAO,EAAKA,WAIlB,OACE,6BACE,wBAAIoS,MAAM,UACPhD,EAAUtE,EAAMlD,IAAK,IACtB,4BACEvI,QAAS,WACPiQ,EAAQ+C,YAAYvH,EAAMlD,MAF9B,KAMU,IACV,2BACE3I,KAAK,WACLE,QAAS2L,EAAMvK,QACf0P,SAAU,SAAAC,GACRZ,EAAQgD,YAAYxH,EAAMlD,GAAIsI,EAAEjK,OAAO9G,aAI5C6S,EACAC,EACAC,EACD,2BACEjT,KAAK,WACLE,QAASrB,KAAKwC,MAAMmR,QACpBxB,SAAU,SAAAC,GACR,EAAKhP,SAAS,CAAEuQ,QAASvB,EAAEjK,OAAO9G,aAGrC2S,EACD,kBAAC,EAAD,CAAU5F,MAAOA,EAAOoD,QAASA,EAASrI,QAAS6D,EAAMlD,U,GAlH9BhI,IAAMC,WCDpBkK,E,YACnB,aAAe,IAAD,8BACZ,+CAGFqF,UAAY,SAAAxH,GACV,GAAIA,EAAI,CAAC,IACC0H,EAAY,EAAKvR,MAAjBuR,QAEFiD,EAAYjD,EAAQsC,UAAUhK,GAAI/E,MAAK,SAAAuI,GAAK,OAAIA,EAAMvB,OAE5D,GAAI0I,EAAW,CACb,IACMC,EADclD,EAAQQ,WAAWyC,EAAU3K,IAClB/E,MAAK,SAAA0D,GAAC,OAAKA,EAAE4C,aAE5C,OAAIqJ,EACI,IAAN,OAAW5K,EAAX,aAAkB4K,EAAWzS,KAAKiB,MAAM,EAAG,GAA3C,OACK,WAAW4G,EAAX,mBACF,MAAO,YAEhB,OAAO,MAjBP,EAAKtH,MAAQ,CAAEmS,eAAe,GAFlB,E,sEAqBJ,IAAD,SAUH3U,KAAKC,MARPmO,EAFK,EAELA,MACAyD,EAHK,EAGLA,KACAL,EAJK,EAILA,QACAoD,EALK,EAKLA,aACA1S,EANK,EAMLA,MACA2R,EAPK,EAOLA,YACAnC,EARK,EAQLA,UACAK,EATK,EASLA,UAGM7R,EAAU2R,EAAV3R,MACAgM,EAAekC,EAAflC,WAEFQ,EAAS8E,EAAQoB,UAAUxE,EAAMtE,IACjC+K,EAAcnI,EAAO9L,KAAI,SAAAoM,GAC7B,IAAMgE,EAAWhE,EAAMlD,KAAO8K,EAE9B,OACE,kBAAC,EAAD,CACEpD,QAASA,EACTF,UAAW,EAAKA,UAChBzQ,IAAKmM,EAAMlD,GACXkD,MAAOA,EACPgE,SAAUA,EACV9O,MAAOA,OAKP4S,EAAW5U,EAAMU,KAAI,SAAA0O,GACzB,OACE,4BAAQhO,MAAOgO,EAAKhP,KAAMO,IAAKyO,EAAKhP,MACjCgP,EAAKhP,SAKNyU,EAAWrI,EAAO3H,MAAK,SAAAiI,GAAK,OAAIA,EAAMlD,KAAO8K,KAE7CI,EAAYJ,EAChB,kBAAC,EAAD,CACE5H,MAAO+H,EACPvD,QAASA,EACTK,KAAMA,EACNH,UAAWA,EACXK,UAAWA,EACX8B,YAAaA,EACbvC,UAAWtR,KAAKsR,UAChBlD,MAAOA,IAEP,KAEJ,OACE,6BACE,wBAAIkG,MAAM,UAAV,QACQ,IACN,2BACEhT,MAAO8M,EAAM9N,KACb6R,SAAU,SAAAC,GACRZ,EAAQyD,YACN7G,EAAMtE,GACNsI,EAAEjK,OAAO7G,MACT8M,EAAMlC,WACNkC,EAAMjC,MACNiC,EAAM3L,YAVd,UAeE,4BACEnB,MAAO4K,EACPiG,SAAU,SAAAC,GACRZ,EAAQyD,YACN7G,EAAMtE,GACNsE,EAAM9N,KACN8R,EAAEjK,OAAO7G,MACT8M,EAAMjC,MACNiC,EAAM3L,WAITqS,GA3BL,SA8BE,2BACE3T,KAAK,WACLE,QAAS+M,EAAM3L,QACf0P,SAAU,SAAAC,GACRZ,EAAQyD,YACN7G,EAAMtE,GACNsE,EAAM9N,KACN8N,EAAMlC,WACNkC,EAAMjC,MACNiG,EAAEjK,OAAO9G,YAvCjB,SA4CE,2BACEF,KAAK,WACLE,QAAS+M,EAAMjC,MACfgG,SAAU,SAAAC,GACRZ,EAAQyD,YACN7G,EAAMtE,GACNsE,EAAM9N,KACN8N,EAAMlC,WACNkG,EAAEjK,OAAO9G,QACT+M,EAAM3L,YAIZ,4BACElB,QAAS,WACPiQ,EAAQ0D,YAAY9G,EAAMtE,KAE5BhJ,MAAO,CAAEiK,WAAY,SAJvB,MAUF,6BACA,6BACE,2BACE5J,KAAK,WACLE,QAASrB,KAAKwC,MAAMmS,cACpBxC,SAAU,SAAAC,GACR,EAAKhP,SAAS,CAAEuR,cAAevC,EAAEjK,OAAO9G,aAG5C,4BACEE,QAAS,WACPiQ,EAAQ2D,SAAS/G,EAAMtE,GAAI,EAAKtH,MAAMmS,iBAF1C,MAQDE,EACD,6BACCG,O,GApK0BlT,IAAMC,WCFpBqT,E,YACnB,WAAYnV,GAAQ,IAAD,8BACjB,4CAAMA,KACDuC,MAAQ,CACX0J,WAAYjM,EAAM4R,KAAK3R,MAAM,GAAGI,KAChCA,KAAM,GACN6L,OAAO,EACP1J,SAAS,GANM,E,sEAUT,IAAD,SACsCzC,KAAKwC,MAA1C0J,EADD,EACCA,WAAY5L,EADb,EACaA,KAAM6L,EADnB,EACmBA,MAAO1J,EAD1B,EAC0BA,QAD1B,EAEmBzC,KAAKC,MAAvB4R,EAFD,EAECA,KAAML,EAFP,EAEOA,QAERsD,EADYjD,EAAV3R,MACeU,KAAI,SAAA0O,GAAI,OAC7B,4BAAQhO,MAAOgO,EAAKhP,KAAMO,IAAKyO,EAAKhP,MACjCgP,EAAKhP,SAIV,OACE,6BACE,2BACEgB,MAAOhB,EACP6R,SAAU,SAAAC,GACR,EAAKhP,SAAS,CAAE9C,KAAM8R,EAAEjK,OAAO7G,WAGnC,4BACEA,MAAO4K,EACPiG,SAAU,SAAAC,GACR,EAAKhP,SAAS,CAAE8I,WAAYkG,EAAEjK,OAAO7G,UAGtCwT,GAbL,SAgBE,2BACE3T,KAAK,WACLE,QAASoB,EACT0P,SAAU,SAAAC,GACR,EAAKhP,SAAS,CAAEX,QAAS2P,EAAEjK,OAAO9G,aApBxC,SAwBE,2BACEF,KAAK,WACLE,QAAS8K,EACTgG,SAAU,SAAAC,GACR,EAAKhP,SAAS,CAAE+I,MAAOiG,EAAEjK,OAAO9G,aAGpC,4BACEE,QAAS,WACPiQ,EAAQ6D,SAAS/U,EAAM4L,EAAYC,EAAO1J,KAF9C,U,GArD8BX,IAAMC,W,QCQRD,IAAMC,UCE3BuT,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCKchD,QACW,cAA7BjM,OAAO0B,SAASwN,UAEe,UAA7BlP,OAAO0B,SAASwN,UAEhBlP,OAAO0B,SAASwN,SAASC,MACvB,2DCZNC,IAAShL,OAAO,kBAAC,EAAD,MAAS1E,SAAS4E,eAAe,SD6H3C,kBAAmB+K,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA7I,GACLD,QAAQC,MAAMA,EAAM8I,c","file":"static/js/main.fedfab2a.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Params extends React.Component {\n  /* constructor() {\n    super();\n\n  }*/\n\n  correctGrads() {\n    const { grads, checkGrad } = this.props;\n    const corrGrads = grads.filter(g => checkGrad(g.name));\n\n    return corrGrads;\n  }\n  render() {\n    const { params, lim, edit } = this.props;\n\n    const correctGrads = this.correctGrads();\n    const correctGradsItems = correctGrads.map(g => (\n      <div key={g.name}>\n        \n        <span style={{ color: \"white\" }}>{g.name}</span>\n      </div>\n    ));\n\n    const paramItems = params.map(param => {\n      return param.isAchiev ? (\n        <div key={param.name}>\n          <input type=\"checkbox\" disabled checked={param.value} />{\" \"}\n          <span style={{ color: \"white\" }}>{param.name}</span>\n        </div>\n      ) : (\n        <div key={param.name}>\n          <div>\n            <button\n              onClick={() => {\n                edit(param.name, -1);\n              }}\n            >\n              -\n            </button>\n            <div\n              style={{\n                display: \"inline-block\",\n                height: \"15px\",\n                width: `${param.value * 10}px`,\n                backgroundColor: \"red\"\n              }}\n            ></div>\n            <div\n              style={{\n                display: \"inline-block\",\n                height: \"15px\",\n                width: `${(lim - param.value) * 10}px`,\n                backgroundColor: \"gray\"\n              }}\n            ></div>\n\n            <button\n              onClick={() => {\n                edit(param.name, 1);\n              }}\n            >\n              +\n            </button>\n            <span style={{ color: \"white\" }}>{param.name}</span>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div style={{position: 'absolute', top: '0'}}>\n        {paramItems}\n        {correctGradsItems}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default class AnswerI extends React.Component {\n  render() {\n    const { text, click, disabled, isHiding } = this.props;\n    const disClass = disabled ? (isHiding ? \"disabled\" : \"\") : \"undisabled\";\n    return (\n        <div>\n      <div\n        className={`answer ${disClass}`}\n        onClick={() => {\n          if (!disabled) click();\n        }}\n      >\n        {text.toUpperCase()}\n      </div>\n        </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default class PhraseText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isStart: true, curText: \"\", balText: \"\" };\n  }\n  nextLetterLoop() {\n    const { text, pAnsswerd, writingFinish, isPlayer } = this.props;\n\n    const { curText } = this.state;\n    if (text !== curText) {\n      const curLen = curText.length;\n      const newText = text.slice(0, curLen + 1);\n\n      const balText = text.slice(curLen + 1);\n\n      setTimeout(() => {\n        this.setState({ curText: newText, isStart: false, balText });\n        this.nextLetterLoop();\n      }, 20);\n    } else isPlayer ? pAnsswerd() : writingFinish();\n  }\n  render() {\n    const { isPlayer } = this.props;\n    const { isStart, curText, balText } = this.state;\n    if (isStart) this.nextLetterLoop();\n    const title = isPlayer ? \"Я\" : \"Она\";\n    const titleClass = isPlayer ? \"text-p\" : \"text-c\";\n    return (\n      <div className=\"phrase-text\">\n        <span className={titleClass}>{title}/</span> {curText}\n        <span className=\"bal-text\">{balText}</span>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport PhraseText from \"./PhraseText\";\n\nexport default class DialogBox extends React.Component {\n  constructor() {\n    super();\n    this.state = { isPAnsserd: false };\n  }\n\n  pAnsswerd = () => {\n    const { dDelay } = this.props;\n    setTimeout(() => {\n      this.setState({ isPAnsserd: true });\n    }, dDelay);\n  };\n  render() {\n    const { pPhrase, cPhrase, writingFinish, hiding } = this.props;\n    const { isPAnsserd } = this.state;\n\n    const hidingClass = hiding ? \"phrase-hiding\" : \"\";\n\n    const cAnswer = isPAnsserd ? (\n      <PhraseText text={cPhrase} writingFinish={writingFinish} />\n    ) : null;\n\n    return (\n      <div className=\"dialog-box\">\n        <div className={`phrase-interface ${hidingClass}`}>\n          <div className=\"phrase-content\">\n            <PhraseText text={pPhrase} isPlayer pAnsswerd={this.pAnsswerd} />\n            {cAnswer}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export default class ImgObject {\n  constructor(image, slot = \"\", min, max, param = null) {\n    this.image = image;\n    this.slot = slot;\n    this.min = min;\n    this.max = max;\n    this.param = param;\n  }\n}\n","export default class SceneObject {\n  constructor(x = 0, y = 0, imgName, width) {\n    this.x = x;\n    this.y = y;\n    this.imgName = imgName;\n    this.width = width\n  }\n}\n","import React from \"react\";\nimport ImgObject from \"./img-object\";\nimport SceneObject from \"./scene-object\";\nimport \"./style.css\";\n\nimport {\n  PARAM_EQUILIBRIUM,\n  PARAM_DETERMINATION\n} from \"../../../game/parameters\";\n\nexport default class Visual extends React.Component {\n  constructor(props) {\n    super(props);\n    this.c = null;\n    this.ctx = null;\n    this.objects = [\n      new ImgObject(\"road\", \"back\"),\n      new ImgObject(\"legs\", \"legs\"),\n      new ImgObject(\"doubt\", \"body\", 1, 5, PARAM_DETERMINATION),\n      new ImgObject(\"uncertainty\", \"body\", 6, 10, PARAM_DETERMINATION),\n      new ImgObject(\"readiness\", \"body\", 11, 15, PARAM_DETERMINATION),\n      //new ImgObject(\"tension\", \"body\"),\n      new ImgObject(\"squinted\", \"head\", 1, 5, PARAM_EQUILIBRIUM),\n      new ImgObject(\"horror\", \"head\", 6, 10, PARAM_EQUILIBRIUM),\n      new ImgObject(\"fear\", \"head\", 11, 15, PARAM_EQUILIBRIUM)\n      /* new ImgObject(\"apathy\", \"head\"),\n      new ImgObject(\"trembling\", \"head\")*/\n    ];\n\n    this.progress = 0;\n    this.maxProg = 1000;\n\n    this.positions = [\n      { prog: 0, camX: 915, camY: 386, camZoom: 20 },\n      { prog: 200, camX: 924, camY: 395, camZoom: 13.82 },\n      { prog: 400, camX: 933, camY: 410, camZoom: 8.24 },\n\n      { prog: 600, camX: 942, camY: 440, camZoom: 3.82 },\n      { prog: 800, camX: 951, camY: 480, camZoom: 1.98 },\n      { prog: 1000, camX: 960, camY: 540, camZoom: 1 }\n    ];\n\n    const girlX = 800;\n    const girlY = 345;\n    this.scene = {\n      back: new SceneObject(0, 0, \"road\", 1920),\n      legs: new SceneObject(girlX, girlY, \"legs\", 200),\n      body: new SceneObject(girlX, girlY, \"doubt\", 200),\n      head: new SceneObject(girlX, girlY, \"horror\", 200)\n    };\n    this.images = [];\n\n    const { landWidth, landHeight } = this.props.landSizes;\n\n    this.landWidth = landWidth;\n    this.landHeight = landHeight;\n\n    this.state = { isStarted: false };\n  }\n\n  getPosition() {\n    if (this.positions.length === 1) return this.positions[0];\n    for (let index = 0; index < this.positions.length; index++) {\n      const pos = this.positions[index];\n      if (this.progress < pos.prog) {\n        const first = this.positions[index - 1];\n        const last = pos;\n        const factor = (this.progress - first.prog) / (last.prog - first.prog);\n        const camZoom = first.camZoom + (last.camZoom - first.camZoom) * factor;\n        const camX = first.camX + (last.camX - first.camX) * factor;\n        const camY = first.camY + (last.camY - first.camY) * factor;\n        return { camZoom, camX, camY };\n      } else if (index === this.positions.length - 1) {\n\n        return pos;\n      }\n    }\n  }\n\n  drawImg = (obj, ctx) => {\n    const { img } = this.images.find(image => image.name === obj.imgName);\n    const { width, x, y } = obj;\n\n    const locFactor = width / img.width;\n    const height = img.height * locFactor;\n\n    const { camZoom, camX, camY } = this.getPosition();\n    if (this.progress < this.maxProg) this.progress += 0.1;\n\n    const screenWidth = this.landWidth / 2;\n    const screenHeight = this.landHeight / 2;\n\n    ctx.drawImage(\n      img,\n      (x - camX) * camZoom + screenWidth,\n      (y - camY) * camZoom + screenHeight,\n      width * camZoom,\n      height * camZoom\n    );\n  };\n  async componentDidMount() {\n    if (!this.c && this.refs.myCanvas) {\n      this.c = this.refs.myCanvas;\n      this.ctx = this.c.getContext(\"2d\");\n\n      this.loaderLoop();\n    }\n  }\n\n  loaderLoop() {\n    this.objects.forEach(object => {\n      this.loadImage(object);\n    });\n  }\n\n  loadImage(sceneObject) {\n    const { slot, image } = sceneObject;\n    let img = new Image();\n    let url = slot ? `${slot}/` : \"\";\n    url += image;\n    img.src = `${window.location.href}/img/${url}.png`;\n    img.onload = event => {\n      const { target } = event;\n      this.images.push({ name: image, img: target });\n      if (this.images.length === this.objects.length) {\n        const { loadFinished } = this.props;\n        loadFinished();\n      }\n    };\n  }\n\n  getCorrImgName(slotName) {\n    const { params } = this.props;\n    const corrImages = this.objects.filter(obj => obj.slot === slotName);\n    let corrImg = corrImages.find(obj => {\n      if (obj.param) {\n        const param = params.find(p => p.name === obj.param);\n\n        return param.value <= obj.max && param.value >= obj.min;\n      } else return false;\n    });\n\n    if (!corrImg) {\n      corrImg = corrImages.find(img => !img.param);\n    }\n    return corrImg.image;\n  }\n\n  drawSceneLopp = () => {\n    const { isStarted } = this.state;\n    if (!isStarted) this.setState({ isStarted: true });\n\n    const newCanvas = document.createElement(\"CANVAS\");\n    newCanvas.width = this.landWidth;\n    newCanvas.height = this.landHeight;\n    const newCtx = newCanvas.getContext(\"2d\");\n\n    for (let key in this.scene) {\n      const obj = this.scene[key];\n      obj.imgName = this.getCorrImgName(key);\n      this.drawImg(obj, newCtx);\n    }\n\n    this.ctx.drawImage(newCanvas, 0, 0);\n\n    window.requestAnimationFrame(this.drawSceneLopp);\n  };\n\n  render() {\n    const { width, height, isLoaded } = this.props;\n    const { isStarted } = this.state;\n\n    if (isLoaded && !isStarted) {\n      window.requestAnimationFrame(this.drawSceneLopp);\n    }\n\n    const className = isLoaded ? \"loaded\" : \"\";\n\n    return (\n      <div>\n        <canvas\n          className={className}\n          ref=\"myCanvas\"\n          width={this.landWidth}\n          height={this.landHeight}\n          style={{ width, height }}\n        ></canvas>\n      </div>\n    );\n  }\n}\n","export const PARAM_DETERMINATION = \"РЕШИМОСТЬ\";\nexport const PARAM_EQUILIBRIUM = \"УРАВНОВЕШЕННОСТЬ\";\n\nexport const PARAM_DOG = \"УЗНАЛ СОБ МЕРТВА\";\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default class Loading extends React.Component {\n  render() {\n    return <div className=\"lds-dual-ring\"></div>;\n  }\n}\n","import React from \"react\";\n\nimport Params from \"./Params\";\nimport AnswerI from \"./AnswerI/AnswerI\";\nimport DialogBox from \"./DialogBox/DialogBox\";\nimport \"./style.css\";\nimport Visual from \"./Visual/Visual\";\nimport Loading from \"./Loading/Loading\";\n\nexport default class UI extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loc = props.loc;\n    const currStageId = this.loc.getStartId();\n    const { cPhrase, answers } = this.getStageData(currStageId);\n    this.state = {\n      cPhrase,\n      pPhrase: \"О чем ты сейчас думаешь?\",\n      answers,\n      disabled: true,\n      currStageId,\n      isHiding: false,\n      dDelay: 2000,\n      isLoaded: false\n    };\n  }\n  getStageData(stageId) {\n    const interf = this.loc.getInterfaceStage(stageId);\n    const { answers, replic } = interf;\n    const { phrase } = replic;\n\n    return {\n      cPhrase: phrase,\n      answers\n    };\n  }\n  update(stuffId) {\n    const newStageId = this.loc.calcStuff(stuffId);\n    const pPhrase = this.loc.getCorrectPhrase(stuffId);\n    const { cPhrase, answers } = this.getStageData(newStageId);\n\n    this.setState({\n      isHiding: true,\n      disabled: true\n    });\n\n    setTimeout(() => {\n      this.setState({\n        pPhrase,\n        cPhrase,\n        currStageId: newStageId,\n        answers,\n        isHiding: false,\n        dDelay: 500 //ДОБАВИТЬ ЗАВИСИМОСТЬ ОТ ПОТРЯСЕНИЯ\n      });\n    }, 500);\n  }\n\n  writingFinish() {\n    this.setState({ disabled: false });\n  }\n  render() {\n    const {\n      pPhrase,\n      cPhrase,\n      currStageId,\n      answers,\n      disabled,\n      isHiding,\n      dDelay,\n      isLoaded\n    } = this.state;\n    const answersItems = answers.map(answer => {\n      return (\n        <AnswerI\n          key={answer.id}\n          text={answer.generalPhrase}\n          disabled={disabled}\n          isHiding={isHiding}\n          click={() => {\n            this.update(answer.id);\n          }}\n        />\n      );\n    });\n\n    const { width, height, landSizes } = this.props;\n\n    const gameUI = isLoaded ? (\n      <div>\n        <Params\n            params={this.loc.params}\n            lim={this.loc.lim}\n            edit={(paramName, term) => {\n              this.loc._editParams([this.loc.cChange(paramName, term)]);\n              this.forceUpdate();\n            }}\n            grads={this.loc.grads}\n            checkGrad={this.loc.checkGrad}\n        />\n        <div className=\"answers\">{answersItems}</div>\n        <DialogBox\n          hiding={isHiding}\n          key={currStageId}\n          pPhrase={pPhrase}\n          cPhrase={cPhrase}\n          dDelay={dDelay}\n          writingFinish={() => {\n            this.writingFinish();\n          }}\n        />\n      </div>\n    ) : null;\n\n    const loadingAnim = !isLoaded ? <Loading /> : null;\n\n    return (\n      <div>\n        <Visual\n            params={this.loc.params}\n          width={width}\n          height={height}\n          isLoaded={isLoaded}\n          loadFinished={() => this.setState({ isLoaded: true })}\n          landSizes={landSizes}\n        />\n        {gameUI}\n\n        {loadingAnim}\n      </div>\n    );\n  }\n}\n\n/*\n <Params\n          params={this.loc.params}\n          lim={this.loc.lim}\n          edit={(paramName, term) => {\n            this.loc._editParams([this.loc.cChange(paramName, term)]);\n            this.forceUpdate();\n          }}\n          grads={this.loc.grads}\n          checkGrad={this.loc.checkGrad}\n        />\n*/\n","import React from \"react\";\n\nexport default class FullScreen extends React.Component {\n  fullScreenOn() {\n    const screenDom = document.getElementById(\"screenDom\");\n    screenDom.requestFullscreen();\n  }\n  render = () => {\n    return (\n      <button\n        onClick={() => {\n          this.fullScreenOn();\n        }}\n      >\n        Full Screen\n      </button>\n    );\n  };\n}\n","import React from \"react\";\nimport FullScreen from \"./FullScreen\";\n\nexport default class Settings extends React.Component {\n  render() {\n    return (\n      <div className=\"settings\">\n        <FullScreen />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Settings from \"./Settings/Settiings\";\nimport \"./Settings/style.css\";\n\nexport default class Screen extends React.Component {\n  render() {\n    const { width, height } = this.props;\n    const style = {\n      width,\n      height,\n      display: \"inline-block\",\n      backgroundColor: \"black\",\n\n      marginLeft: `calc(50% - ${width / 2}px)`,\n      position: \"absolute\"\n      //overflow: \"hidden\"\n    };\n    return (\n      <div id=\"screenDom\">\n        <div style={style}>\n          {this.props.children}\n          <Settings />\n        </div>\n      </div>\n    );\n  }\n}\n","export default class Graduation {\n  constructor(name, rangesNames) {\n    this.name = name;\n    this.rangesNames = rangesNames;\n  }\n}\n","export default class Parameter {\n  constructor(name, value, isAchiev = false) {\n    this.name = name;\n    this.value = value;\n    this.isAchiev = isAchiev;\n  }\n}\n","export default class Phrase {\n  constructor(rangeName, text, isGeneral, id) {\n    this.rangeName = rangeName;\n    this.text = text;\n    this.isGeneral = isGeneral;\n    this.id = id;\n  }\n  stuff_id = null;\n}\n","export default class Range {\n  constructor(name, paramName, min, max) {\n    this.name = name;\n    this.paramName = paramName;\n    this.min = min;\n    this.max = max;\n  }\n}\n","export default class Stage {\n  constructor(isStart, id) {\n    this.id = id;\n    this.isStart = isStart\n  }\n  isBeen = false;\n  topic_id = null;\n}\n","export default class Stuff {\n  constructor(next_stage_id, changes = [], isA = false, id) {\n    this.next_stage_id = next_stage_id;\n    this.changes = changes;\n    this.isA = isA;\n    this.id = id;\n  }\n  stage_id = null;\n}\n","export default class Topic {\n  constructor(name, graduation, isFin, isStart, id) {\n    this.name = name;\n    this.graduation = graduation;\n    this.isFin = isFin;\n    this.isStart = isStart;\n    this.id = id;\n  }\n}\n","export default class Change {\n  constructor(paramName, term) {\n    this.paramName = paramName;\n    this.term = term;\n  }\n}\n","export default class Interf {\n  constructor(generalPhrase, phrase, id) {\n    this.generalPhrase = generalPhrase;\n    this.phrase = phrase;\n    this.id = id;\n  }\n}\n","import { Loc } from \"./../mlpa_engine\";\n\nimport {\n  PARAM_EQUILIBRIUM,\n  PARAM_DETERMINATION,\n  PARAM_DOG\n} from \"./parameters\";\n\nimport {\n  RANGE_PANIC,\n  RANGE_TENSION,\n  RANGE_STABILITY,\n  RANGE_APATHY,\n  RANGE_UNCERTAINTY,\n  RANGE_CONFIDENCE,\n  RANGE_DOG\n} from \"./ranges\";\n\nimport {\n  GRAD_PAN_APA,\n  GRAD_PAN_UNC,\n  GRAD_PAN_CON,\n  GRAD_TEN_APA,\n  GRAD_TEN_UNC,\n  GRAD_TEN_CON,\n  GRAD_STAB_APA,\n  GRAD_STAB_UNC,\n  GRAD_STAB_CON,\n  GRAD_DOG\n} from \"./grads\";\n\nconst locE = new Loc();\nlocE.addParams(\n  locE.cParam(PARAM_DETERMINATION, 2),\n  locE.cParam(PARAM_EQUILIBRIUM, 4),\n\n  locE.cParam(PARAM_DOG, false, true)\n);\n\nlocE.addRanges(\n  locE.cRange(RANGE_PANIC, 1, 5, PARAM_EQUILIBRIUM),\n  locE.cRange(RANGE_TENSION, 6, 10, PARAM_EQUILIBRIUM),\n  locE.cRange(RANGE_STABILITY, 11, 15, PARAM_EQUILIBRIUM),\n\n  locE.cRange(RANGE_APATHY, 1, 5, PARAM_DETERMINATION),\n  locE.cRange(RANGE_UNCERTAINTY, 6, 10, PARAM_DETERMINATION),\n  locE.cRange(RANGE_CONFIDENCE, 11, 15, PARAM_DETERMINATION),\n\n  locE.cRange(RANGE_DOG, true, true, PARAM_DOG)\n);\nlocE.addGrads(\n  locE.cGrad(GRAD_PAN_APA, RANGE_PANIC, RANGE_APATHY),\n  locE.cGrad(GRAD_PAN_UNC, RANGE_PANIC, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_PAN_CON, RANGE_PANIC, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_TEN_APA, RANGE_TENSION, RANGE_APATHY),\n  locE.cGrad(GRAD_TEN_UNC, RANGE_TENSION, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_TEN_CON, RANGE_TENSION, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_STAB_APA, RANGE_STABILITY, RANGE_APATHY),\n  locE.cGrad(GRAD_STAB_UNC, RANGE_STABILITY, RANGE_UNCERTAINTY),\n  locE.cGrad(GRAD_STAB_CON, RANGE_STABILITY, RANGE_CONFIDENCE),\n\n  locE.cGrad(GRAD_DOG, RANGE_DOG)\n);\n\nexport default locE;\n","import Parameter from \"./parameter\";\nimport Range from \"./range\";\nimport Graduation from \"./graduation\";\nimport Phrase from \"./phrase\";\nimport Stuff from \"./stuff\";\nimport Change from \"./change\";\nimport Stage from \"./stage\";\nimport Topic from \"./topic\";\nimport Interf from \"./interf\";\n\nexport default class Loc {\n  params = [];\n  ranges = [];\n  grads = [];\n  topics = [];\n\n  stuffs = [];\n  stages = [];\n  phrases = [];\n\n  lim = 15;\n\n  cParam(name, value, isAchiev) {\n    return new Parameter(name, value, isAchiev);\n  }\n  addParams(...params) {\n    this.params = this.params.concat(params);\n  }\n\n  cRange(name, min, max, paramName) {\n    return new Range(name, paramName, min, max);\n  }\n  addRanges(...ranges) {\n    this.ranges = this.ranges.concat(ranges);\n  }\n\n  cGrad(name, ...rangesNames) {\n    return new Graduation(name, rangesNames);\n  }\n  addGrads(...grads) {\n    this.grads = this.grads.concat(grads);\n  }\n\n  cTopic(name, gradName, isFin, isStart, ...stages) {\n    const topicId = this.getId(\"topics\");\n    this.addTopics(new Topic(name, gradName, isFin, isStart, topicId));\n    this.addStages(topicId, ...stages);\n  }\n\n  addTopics(...topics) {\n    this.topics = this.topics.concat(topics);\n  }\n\n  cStage(isStart, ...answers) {\n    const stageId = this.getId(\"stages\");\n    this.addStuffs(stageId, ...answers);\n    return new Stage(isStart, stageId);\n  }\n\n  addStages = (topicId, ...stages) => {\n    if (this._getTopic(topicId)) {\n      const newStages = stages.map(stage => {\n        return { ...stage, topic_id: topicId };\n      });\n      this.stages = this.stages.concat(newStages);\n    } else console.error(`Topic ${topicId} not found!`);\n  };\n\n  cStuff(props, ...phrases) {\n    const { id: nextStageId, changes = [], isA } = props ? props : {};\n    const stuffId = this.getId(\"stuffs\");\n\n    this.addPhrases(stuffId, phrases);\n    return new Stuff(\n      nextStageId,\n      !isA ? changes.filter(c => c.term) : [],\n      isA,\n      stuffId\n    );\n  }\n\n  addStuffs(stageId, ...stuffs) {\n    const newStuffs = stuffs.map(stuff => ({ ...stuff, stage_id: stageId }));\n    this.stuffs = this.stuffs.concat(newStuffs);\n  }\n\n  addPhrases(stuffId, phrases) {\n    const newPhrases = phrases.map(phrase => ({\n      ...phrase,\n      stuff_id: stuffId\n    }));\n\n    this.phrases = this.phrases.concat(newPhrases);\n  }\n\n  cPhrase(text, isGeneral = false, rangeName) {\n    const phraseId = this.getId(\"phrases\");\n    return new Phrase(rangeName, text, isGeneral, phraseId);\n  }\n\n  cChange(paramName, term) {\n    return new Change(paramName, term);\n  }\n\n  _getTopic(id) {\n    return this.topics.find(topic => topic.id === id);\n  }\n  _getStages = topicId => {\n    return this.stages.filter(stage => stage.topic_id === topicId);\n  };\n\n  _getStuffs = stageId => {\n    return this.stuffs.filter(stuff => stuff.stage_id === stageId);\n  };\n\n  _getPhrases = stuffId => {\n    return this.phrases.filter(phrase => phrase.stuff_id === stuffId);\n  };\n\n  _getParam = name => {\n    return this.params.find(param => param.name === name);\n  };\n\n  _getRange(name) {\n    return this.ranges.find(range => range.name === name);\n  }\n\n  _getGrad(name) {\n    return this.grads.find(grad => grad.name === name);\n  }\n\n  _editParams(changes) {\n    changes.forEach(change => {\n      const param = this._getParam(change.paramName);\n\n      if (param.isAchiev) {\n        param.value = true;\n      } else {\n        const newValue = param.value + change.term;\n        if (newValue > this.lim) {\n          param.value = this.lim;\n        } else if (newValue < 1) {\n          param.value = 1;\n        } else param.value = newValue;\n      }\n    });\n  }\n\n  checkStageFinal = stageId => {\n    const stuffs = this._getStuffs(stageId);\n    return !stuffs.find(s => !s.isA);\n  };\n\n  checkRange(rangeName) {\n    const range = this._getRange(rangeName);\n    const param = this._getParam(range.paramName);\n    const res = param.isAchiev\n      ? param.value === range.max\n      : param.value >= range.min && param.value <= range.max;\n    return res;\n  }\n\n  checkGrad = gradName => {\n    const grad = this._getGrad(gradName);\n    const ranges = grad.rangesNames.map(rName => this._getRange(rName));\n    const params = [];\n    ranges.forEach(range => {\n      if (!params[range.paramName]) {\n        params[range.paramName] = this.checkRange(range.name);\n      }\n    });\n    for (let key in params) {\n      if (!params[key]) return false;\n    }\n    return true;\n  };\n\n  idState = {};\n  getId = type => {\n    if (!this.idState[type]) this.idState[type] = 0;\n    this.idState[type]++;\n    return this.idState[type];\n  };\n\n  getStartId = () => {\n    const startTopic = this.topics.find(topic => topic.isStart);\n    const stages = this._getStages(startTopic.id);\n    const startStage = stages.find(stage => stage.isStart);\n    return startStage ? startStage.id : null;\n  };\n\n  calcStuff = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n\n    this._editParams(stuff.changes);\n    return stuff.next_stage_id;\n  };\n\n  getGeneralPhrase = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n    const phrases = this._getPhrases(stuff.id);\n    const generalPhrase = phrases.find(phrase => phrase.isGeneral);\n    return generalPhrase?.text;\n  };\n\n  getCorrectPhrase = stuffId => {\n    const stuff = this.stuffs.find(s => s.id === stuffId);\n    const phrases = this._getPhrases(stuff.id);\n    const neutralPhrase = phrases.find(phrase => !phrase.rangeName);\n    for (let i in phrases) {\n      const phrase = phrases[i];\n      if (phrase.rangeName && this.checkRange(phrase.rangeName))\n        return phrase.text;\n    }\n\n    return neutralPhrase.text;\n  };\n\n  _getCorrectStuffs(id) {\n    //НЕОБХОДИМОЕ ЧИСЛО ОТВЕТОВ\n    const necessity = 3;\n    const stuffs = this._getStuffs(id);\n\n    //ОГРАНИЧЕНИЕ ПО *БЫЛ ЗДЕСЬ*\n    const answersAll = stuffs.filter(stuff => {\n      if (stuff.isA) return false;\n      else {\n        const stage = this.stages.find(s => s.id === stuff.next_stage_id);\n        return !stage.isBeen;\n      }\n    });\n\n    const correctNeutAchiev = [];\n    const correctFinal = [];\n    const incrrectNeutral = [];\n\n    answersAll.forEach(stuff => {\n      const nextStage = this.stages.find(\n        stage => stage.id === stuff.next_stage_id\n      );\n      const topic = this._getTopic(nextStage.topic_id);\n      const grad = this._getGrad(topic.graduation);\n      const ranges = grad.rangesNames(rName => this._getRange(rName));\n      const params = ranges.rangesNames(r => this._getParam(r.paramName));\n\n      const isAchiev = params.find(p => p.isAchiev);\n      const correct = this.checkGrad(grad.name);\n      const { isFin } = topic;\n\n      if (correct) {\n        //подходящее по градации\n        //если не финал\n        if (!isFin) correctNeutAchiev.push(stuff);\n        //если финал\n        else correctFinal.push(stuff);\n      } else if (!isAchiev && !isFin) {\n        //неподходящие если не ачивный и не финальный\n        incrrectNeutral.push(stuff);\n      }\n    });\n\n    let resultStuffs = correctNeutAchiev.concat(incrrectNeutral);\n    //если пришло время для финалочек\n    if (false) resultStuffs = resultStuffs.concat(correctFinal);\n    return resultStuffs.slice(0, necessity);\n  }\n\n  checkAnswToGrad = stuff => {\n    const nextStage = this.stages.find(\n      stage => stage.id === stuff.next_stage_id\n    );\n    const topic = this._getTopic(nextStage.topic_id);\n    return this.checkGrad(topic.graduation);\n  };\n\n  //ДОБАВИТЬ БЕЗУСЛОВНЫЕ ОГРАНИЧЕНИЯ ДЛЯ ТЕМ ЗАВИСИМЫХ ОТ АЧИВОК\n  getInterfaceStage = id => {\n    //ДОБАВИТЬ ПОДКЛЮЧЕНИЕ ФИНАЛОЧЕК КОГДА НАДО\n\n    const stage = this.stages.find(s => s.id === id);\n    stage.isBeen = true;\n\n    const stuffs = this._getStuffs(id);\n\n    const replicStuff = stuffs.find(stuff => stuff.isA);\n    const replic = new Interf(null, this.getCorrectPhrase(replicStuff.id));\n\n    //ОГРАНИЧЕНИЯ ПО *БЫЛ ТУТ*\n    const answersAll = stuffs.filter(stuff => {\n      return !stuff.isA;\n    });\n\n    //РЕЗУЛЬТАТ\n    const resAnswers = answersAll;\n\n    const interf = {\n      answers: resAnswers.map(stuff => {\n        return new Interf(\n          this.getGeneralPhrase(stuff.id),\n          this.getCorrectPhrase(stuff.id),\n          stuff.id\n        );\n      }),\n      replic\n    };\n\n    return interf;\n  };\n\n  ssign = data => {\n    for (let key in data) {\n      if (![\"params\", \"grads\", \"ranges\"].find(k => k === key)) {\n        this[key] = data[key];\n      }\n    }\n  };\n}\n","export const RANGE_PANIC = \"ПАНИКА\";\nexport const RANGE_TENSION = \"НАПРЯЖЕННОСТЬ\";\nexport const RANGE_STABILITY = \"СТАБИЛЬНОСТЬ\";\n\nexport const RANGE_APATHY = \"АПАТИЯ\";\nexport const RANGE_UNCERTAINTY = \"НЕУВЕРЕННОСТЬ\";\nexport const RANGE_CONFIDENCE = \"УВЕРЕННОСТЬ\";\n\nexport const RANGE_DOG = \"ЗНАЕТ ПРО СОБАКУ\";\n","export const GRAD_PAN_APA = \"ПАН АПАТ\";\nexport const GRAD_PAN_UNC = \"ПАН НЕУВ\";\nexport const GRAD_PAN_CON = \"ПАН УВ\";\n\nexport const GRAD_TEN_APA = \"НАПР АПАТ\";\nexport const GRAD_TEN_UNC = \"НАПР НЕУВ\";\nexport const GRAD_TEN_CON = \"НАПР УВ\";\n\nexport const GRAD_STAB_APA = \"СТАБ АПАТ\";\nexport const GRAD_STAB_UNC = \"СТАБ НЕУВ\";\nexport const GRAD_STAB_CON = \"СТАБ УВ\";\n\nexport const GRAD_DOG = \"ЗНАЕТ ПРО СОБАКУ\";\n","import React from \"react\";\nimport UI from \"./UI\";\nimport Screen from \"./Screen\";\nimport locE from \"../../game/loc_example\";\nimport mlpaState from \"../../mlpa_state\";\n\nexport default class Game extends React.Component {\n  constructor() {\n    super();\n\n    this.landWidth = 1920;\n    this.landHeight = 1080;\n\n    this.loc = locE;\n    this.loc.ssign(mlpaState);\n    this.defaultParams();\n  }\n  defaultParams() {\n    this.loc.params.forEach(p => {\n      if (!p.isAchiev) p.value = 7;\n    });\n  }\n  getSizes() {\n    const { width, height } = window.screen;\n\n    const max = Math.max(width, height);\n    const min = Math.min(width, height);\n\n    let newWidth = max;\n\n    const factorW = newWidth / this.landWidth;\n    let newHeight = this.landHeight * factorW;\n    if (newHeight > min) {\n      newHeight = min;\n      const factorH = newHeight / this.landHeight;\n      newWidth = this.landWidth * factorH;\n    }\n    return { newWidth, newHeight };\n  }\n  render() {\n    const { newWidth, newHeight } = this.getSizes();\n    return (\n      <Screen width={newWidth} height={newHeight}>\n        <UI\n          loc={this.loc}\n          width={newWidth}\n          height={newHeight}\n          landSizes={{ landWidth: this.landWidth, landHeight: this.landHeight }}\n        />\n      </Screen>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class TopicItem extends React.Component {\n  render() {\n    const { topic, isSelect, click } = this.props;\n\n    const border = topic.isStart\n      ? \"solid 0.3rem red\"\n      : topic.isFin\n      ? \"solid 0.3rem aqua\"\n      : \"none\";\n\n    const style = {\n      backgroundColor: isSelect ? \"green\" : \"gray\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      cursor: \"pointer\",\n      color: \"white\",\n      border\n    };\n    return (\n      <div\n        style={style}\n        onClick={() => {\n          click(topic.id);\n        }}\n      >\n        {topic.name}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class StageItem extends React.Component {\n  render() {\n    const { stage, click, isSelect, stuffText, methods } = this.props;\n\n    const isFinal = methods.checkStageFinal(stage.id);\n    const border = stage.isStart\n      ? \"solid 0.3rem red\"\n      : isFinal\n      ? \"solid 0.3rem aqua\"\n      : \"none\";\n\n    const style = {\n      backgroundColor: isSelect ? \"blue\" : \"gray\",\n      cursor: \"pointer\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      color: \"white\",\n      border\n    };\n    return (\n      <div\n        onClick={() => {\n          click(stage.id);\n        }}\n        style={style}\n      >\n        {stuffText(stage.id)}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class StuffItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const nextStage = props.allStages.find(\n      s => s.id === props.stuff.next_stage_id\n    );\n    const currentTopic = nextStage?.topic_id;\n\n    this.state = {\n      currentTopic,\n      viewAchievs: false\n    };\n  }\n  render() {\n    const {\n      stuff,\n      methods,\n      range,\n      stat,\n      goStage,\n      allStages,\n      stuffText,\n      allTopics\n    } = this.props;\n\n    const phrase = methods.getPhrases(stuff.id).find(p => {\n      return (\n        p.rangeName === range ||\n        (range === \"none\" && !p.rangeName) ||\n        (range === \"GENERAL\" && p.isGeneral)\n      );\n    });\n\n    const { changes } = stuff;\n    const { currentTopic, viewAchievs } = this.state;\n\n    const changesItems = !stuff.isA\n      ? stat.params.map(p => {\n          const c = changes.find(change => change.paramName === p.name);\n\n          const term = c ? c.term : p.isAchiev ? false : 0;\n\n          const inputElem = p.isAchiev ? (\n            <input\n              type=\"checkbox\"\n              checked={term}\n              onChange={e => {\n                methods.updateStuff(stuff.id, stuff.next_stage_id, {\n                  paramName: p.name,\n                  term: Boolean(e.target.checked)\n                });\n              }}\n            />\n          ) : (\n            <input\n              type=\"number\"\n              style={{ width: \"40px\" }}\n              value={term}\n              onChange={e => {\n                methods.updateStuff(stuff.id, stuff.next_stage_id, {\n                  paramName: p.name,\n                  term: Number(e.target.value)\n                });\n              }}\n            />\n          );\n\n          if (!viewAchievs && p.isAchiev) return null;\n          return (\n            <span\n              style={{\n                display: \"inline-block\",\n                padding: \"0.5rem\",\n                backgroundColor: \"#ffccff\",\n                marginRight: \"0.5rem\"\n              }}\n              key={p.name}\n            >\n              {p.name}:{inputElem}\n            </span>\n          );\n        })\n      : null;\n\n    const style = {\n      backgroundColor: stuff.isA ? \"#ccffff\" : \"#D3D3D3\",\n      cursor: \"pointer\",\n      margin: \"0.2rem\",\n\n      paddingTop: stuff.isA ? \"1rem\" : \"0.5rem\",\n      paddingBottom: stuff.isA ? \"1rem\" : \"0.5rem\",\n\n      display: \"inline-block\",\n      width: \"40%\"\n    };\n\n    const text = phrase ? phrase.text : \"\";\n\n    const linkItems = methods.getStages(this.state.currentTopic).map(s => {\n      return (\n        <option value={s.id} key={s.id}>\n          {stuffText(s.id)}\n        </option>\n      );\n    });\n\n    if (!allStages.find(s => s.id === stuff.next_stage_id)) {\n      linkItems.unshift(\n        <option value={\"error\"} key=\"0\">\n          {stuff.next_stage_id} NOT FOUND\n        </option>\n      );\n    }\n\n    const linkThemesItems = allTopics.map(t => {\n      return (\n        <option value={t.id} key={t.id}>\n          {t.name}\n        </option>\n      );\n    });\n\n    const next = !stuff.isA ? (\n      <div style={{ display: \"inline-block\", marginRight: \"0.5rem\" }}>\n        <div\n          style={{\n            display: \"inline-block\",\n            backgroundColor: \"red\",\n            cursor: \"pointer\",\n            color: \"white\"\n          }}\n          onClick={() => {\n            goStage(stuff.next_stage_id);\n          }}\n        >\n          ===>\n        </div>\n        {currentTopic}\n\n        <select\n          value={this.state.currentTopic}\n          onChange={e => {\n            const newCurrTopic = Number(e.target.value);\n            this.setState({ currentTopic: newCurrTopic });\n            const topicStages = methods.getStages(newCurrTopic);\n\n            if (\n              topicStages.length &&\n              !topicStages.find(s => s.id === stuff.next_stage_id)\n            )\n              methods.updateStuff(stuff.id, topicStages[0].id);\n          }}\n        >\n          {linkThemesItems}\n        </select>\n\n        <select\n          value={stuff.next_stage_id}\n          onChange={e => {\n            methods.updateStuff(stuff.id, Number(e.target.value));\n          }}\n        >\n          {linkItems}\n        </select>\n      </div>\n    ) : null;\n\n    const removeButton = !stuff.isA ? (\n      <button onClick={() => methods.removeStuff(stuff.id)}>X</button>\n    ) : null;\n\n    const viewBox = stuff.isA ? null : (\n      <input\n        type=\"checkbox\"\n        checked={viewAchievs}\n        onChange={e => {\n          this.setState({ viewAchievs: e.target.checked });\n        }}\n      />\n    );\n\n    return (\n      <div>\n        {removeButton}\n        <div style={style}>\n          ({stuff.id}){\" \"}\n          <input\n            value={text}\n            style={{ width: \"90%\" }}\n            onChange={e => {\n              methods.updatePhrase(\n                stuff.id,\n                range === \"none\" ? null : range,\n                phrase ? phrase.id : null,\n                e.target.value\n              );\n            }}\n          />\n        </div>\n        {next}\n        {changesItems}\n        {viewBox}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class RangeItem extends React.Component {\n  render() {\n    const { range, isSelect, click } = this.props;\n\n    const style = {\n      backgroundColor: isSelect ? \"orange\" : \"gray\",\n      cursor: \"pointer\",\n      display: \"inline-block\",\n      margin: \"0.2rem\",\n      padding: \"0.5rem\",\n      color: \"white\"\n    };\n    return (\n      <div\n        style={style}\n        onClick={() => {\n          click(range.name);\n        }}\n      >\n        {range.name}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class AddStuff extends React.Component {\n  render() {\n    const { methods, stageId, topic } = this.props;\n\n    const nextStageId = methods.getStages(topic.id)[0].id;\n\n    return (\n      <div>\n        <button\n          onClick={() => {\n            methods.addStuff(stageId, false, nextStageId, []);\n          }}\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport StuffItem from \"../Stuffs/StuffItem\";\nimport RangeItem from \"../Ranges/RangeItem\";\nimport AddStuff from \"../Stuffs/AddStuff\";\n\nexport default class Stage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { currentRange: \"none\", acheivs: false };\n  }\n\n  click = name => {\n    this.setState({ currentRange: name });\n  };\n  splitStuffs(stuffs) {\n    const answer = stuffs.find(stuff => stuff.isA);\n    const pAnswers = stuffs.filter(stuff => !stuff.isA);\n    return { answer, pAnswers };\n  }\n  render() {\n    const {\n      stage,\n      methods,\n      stat,\n      changeStage,\n      allStages,\n      stuffText,\n      topic,\n      allTopics\n    } = this.props;\n\n    const stuffs = methods.getStuffs(stage.id);\n\n    const { answer, pAnswers } = this.splitStuffs(stuffs);\n\n    const stuffsItems = [answer, ...pAnswers].map(stuff => {\n      const res = stuff ? (\n        <StuffItem\n          stat={stat}\n          range={this.state.currentRange}\n          methods={methods}\n          key={stuff.id}\n          stuff={stuff}\n          goStage={changeStage}\n          allStages={allStages}\n          allTopics={allTopics}\n          stuffText={stuffText}\n        />\n      ) : null;\n\n      return res;\n    });\n\n    if (\"GENERAL\" === this.state.currentRange) {\n      stuffsItems.shift();\n    }\n\n    const { ranges } = stat;\n\n    const generStuff = (\n      <RangeItem\n        isSelect={\"GENERAL\" === this.state.currentRange}\n        range={{ name: \"GENERAL\" }}\n        click={this.click}\n      />\n    );\n\n    const noRanges = (\n      <RangeItem\n        isSelect={\"none\" === this.state.currentRange}\n        range={{ name: \"none\" }}\n        click={this.click}\n      />\n    );\n\n    const rangesItems = ranges\n      .filter(r => {\n        const param = methods.getParam(r.paramName);\n        return this.state.acheivs || !param.isAchiev;\n      })\n      .map(range => (\n        <RangeItem\n          isSelect={range.name === this.state.currentRange}\n          key={range.name}\n          range={range}\n          click={this.click}\n        />\n      ));\n\n    return (\n      <div>\n        <h2 align=\"center\">\n          {stuffText(stage.id)}{\" \"}\n          <button\n            onClick={() => {\n              methods.removeStage(stage.id);\n            }}\n          >\n            X\n          </button>{\" \"}\n          <input\n            type=\"checkbox\"\n            checked={stage.isStart}\n            onChange={e => {\n              methods.updateStage(stage.id, e.target.checked);\n            }}\n          />\n        </h2>\n        {generStuff}\n        {noRanges}\n        {rangesItems}\n        <input\n          type=\"checkbox\"\n          checked={this.state.acheivs}\n          onChange={e => {\n            this.setState({ acheivs: e.target.checked });\n          }}\n        />\n        {stuffsItems}\n        <AddStuff topic={topic} methods={methods} stageId={stage.id} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport StageItem from \"../Stages/StageItem\";\nimport Stage from \"../Stages/Stage\";\n\nexport default class Topic extends React.Component {\n  constructor() {\n    super();\n    this.state = { newStageStart: false };\n  }\n  stuffText = id => {\n    if (id) {\n      const { methods } = this.props;\n\n      const nextStuff = methods.getStuffs(id).find(stuff => stuff.isA);\n\n      if (nextStuff) {\n        const nextPhrases = methods.getPhrases(nextStuff.id);\n        const nextPhrase = nextPhrases.find(p => !p.rangeName);\n\n        if (nextPhrase) {\n          return `(${id}) ${nextPhrase.text.slice(0, 7)}...`;\n        } else return `(${id}) NOT PHRASE...`;\n      } else return \"NOT FOUND\";\n    }\n    return null;\n  };\n  render() {\n    const {\n      topic,\n      stat,\n      methods,\n      currentStage,\n      click,\n      changeStage,\n      allStages,\n      allTopics\n    } = this.props;\n\n    const { grads } = stat;\n    const { graduation } = topic;\n\n    const stages = methods.getStages(topic.id);\n    const stagesItems = stages.map(stage => {\n      const isSelect = stage.id === currentStage;\n\n      return (\n        <StageItem\n          methods={methods}\n          stuffText={this.stuffText}\n          key={stage.id}\n          stage={stage}\n          isSelect={isSelect}\n          click={click}\n        />\n      );\n    });\n\n    const optItems = grads.map(grad => {\n      return (\n        <option value={grad.name} key={grad.name}>\n          {grad.name}\n        </option>\n      );\n    });\n\n    const curStage = stages.find(stage => stage.id === currentStage);\n\n    const stageView = currentStage ? (\n      <Stage\n        stage={curStage}\n        methods={methods}\n        stat={stat}\n        allStages={allStages}\n        allTopics={allTopics}\n        changeStage={changeStage}\n        stuffText={this.stuffText}\n        topic={topic}\n      />\n    ) : null;\n\n    return (\n      <div>\n        <h1 align=\"center\">\n          Topic{\" \"}\n          <input\n            value={topic.name}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                e.target.value,\n                topic.graduation,\n                topic.isFin,\n                topic.isStart\n              );\n            }}\n          />\n          , grad:\n          <select\n            value={graduation}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                e.target.value,\n                topic.isFin,\n                topic.isStart\n              );\n            }}\n          >\n            {optItems}\n          </select>\n          Start:\n          <input\n            type=\"checkbox\"\n            checked={topic.isStart}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                topic.graduation,\n                topic.isFin,\n                e.target.checked\n              );\n            }}\n          />\n          Final:\n          <input\n            type=\"checkbox\"\n            checked={topic.isFin}\n            onChange={e => {\n              methods.updateTopic(\n                topic.id,\n                topic.name,\n                topic.graduation,\n                e.target.checked,\n                topic.isStart\n              );\n            }}\n          />\n          <button\n            onClick={() => {\n              methods.removeTopic(topic.id);\n            }}\n            style={{ marginLeft: \"1rem\" }}\n          >\n            X\n          </button>\n        </h1>\n\n        <br />\n        <div>\n          <input\n            type=\"checkbox\"\n            checked={this.state.newStageStart}\n            onChange={e => {\n              this.setState({ newStageStart: e.target.checked });\n            }}\n          />\n          <button\n            onClick={() => {\n              methods.addStage(topic.id, this.state.newStageStart);\n            }}\n          >\n            +\n          </button>\n        </div>\n        {stagesItems}\n        <br />\n        {stageView}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class AddTopic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graduation: props.stat.grads[0].name,\n      name: \"\",\n      isFin: false,\n      isStart: false\n    };\n  }\n\n  render() {\n    const { graduation, name, isFin, isStart } = this.state;\n    const { stat, methods } = this.props;\n    const { grads } = stat;\n    const optItems = grads.map(grad => (\n      <option value={grad.name} key={grad.name}>\n        {grad.name}\n      </option>\n    ));\n\n    return (\n      <div>\n        <input\n          value={name}\n          onChange={e => {\n            this.setState({ name: e.target.value });\n          }}\n        />\n        <select\n          value={graduation}\n          onChange={e => {\n            this.setState({ graduation: e.target.value });\n          }}\n        >\n          {optItems}\n        </select>\n        Start:\n        <input\n          type=\"checkbox\"\n          checked={isStart}\n          onChange={e => {\n            this.setState({ isStart: e.target.checked });\n          }}\n        />\n        Final:\n        <input\n          type=\"checkbox\"\n          checked={isFin}\n          onChange={e => {\n            this.setState({ isFin: e.target.checked });\n          }}\n        />\n        <button\n          onClick={() => {\n            methods.addTopic(name, graduation, isFin, isStart);\n          }}\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport locE from \"../../game/loc_example\";\n//import locE from \"./../../game/loc_example\";\nimport TopicItem from \"./Topics/TopicItem\";\nimport Topic from \"./Topics/Topic\";\nimport AddTopic from \"./Topics/AddTopic\";\nimport exportFromJSON from \"export-from-json\";\nimport mlpaState from \"../../mlpa_state\";\n\nexport default class Editor extends React.Component {\n  constructor() {\n    super();\n    this.myStorage = window.localStorage;\n    this.loc = {};\n    this.import(true);\n    const { topicId, stageId } = this.getTopStag();\n    this.state = { currentTopic: topicId, currentStage: stageId };\n  }\n\n  import(firstTime) {\n    this.loc = locE;\n\n    this.loc.ssign({ ...mlpaState });\n    if (!firstTime) this.forceUpdate();\n  }\n\n  getTopStag() {\n    const topicId = this.loc.topics[0] ? this.loc.topics[0].id : null;\n    const stageId = this.loc._getStages(topicId)[0]\n      ? this.loc._getStages(topicId)[0].id\n      : null;\n    return { topicId, stageId };\n  }\n\n  exportFile() {\n    const data = this.loc;\n    const fileName = \"mlpa_state\";\n    const exportType = \"json\";\n\n    exportFromJSON({ data, fileName, exportType });\n  }\n\n  saveLoc() {\n    const locData = JSON.stringify(this.loc);\n    this.myStorage.setItem(\"locData\", locData);\n  }\n\n  addTopic = (name, gradName, isFin, isStart) => {\n    this.loc.cTopic(name, gradName, isFin, isStart);\n    this.forceUpdate();\n  };\n\n  addStage = (topicId, isStart) => {\n    this.loc.addStages(\n      topicId,\n      this.loc.cStage(\n        isStart,\n        this.loc.cStuff({ isA: true }, this.loc.cPhrase(\"space\"))\n      )\n    );\n    this.forceUpdate();\n  };\n  updateStage = (id, isStart) => {\n    const stage = this.loc.stages.find(s => s.id === id);\n    stage.isStart = isStart;\n    this.forceUpdate();\n  };\n  updateTopic = (topicId, name, gradName, isFin, isStart) => {\n    const topic = this.loc._getTopic(topicId);\n    topic.name = name;\n    topic.graduation = gradName;\n    topic.isFin = isFin;\n    topic.isStart = isStart;\n    this.forceUpdate();\n  };\n  addPhrase = (stuffId, range, text, isGeneral) => {\n    this.loc.addPhrases(stuffId, [this.loc.cPhrase(text, isGeneral, range)]);\n    this.forceUpdate();\n  };\n\n  updatePhrase = (stuffId, range, id, newText) => {\n    const phrase = this.loc.phrases.find(p => p.id === id);\n    if (phrase) {\n      phrase.text = newText;\n      if (!newText && !phrase.isGeneral && phrase.rangeName)\n        this.removePhrase(phrase.id);\n    } else {\n      this.addPhrase(stuffId, range, newText);\n    }\n    this.forceUpdate();\n  };\n\n  addStuff = (stageId, isA, nextStageId, changes = []) => {\n    const newStaff = this.loc.cStuff(\n      {\n        isA,\n        id: nextStageId\n      },\n      this.loc.cPhrase(\"space\"),\n      this.loc.cPhrase(\"generalSpace\", true)\n    );\n\n    this.loc.addStuffs(stageId, newStaff);\n\n    this.forceUpdate();\n  };\n  updateStuff = (id, nextStageId, ...changes) => {\n    const stuff = this.loc.stuffs.find(s => s.id === id);\n    stuff.next_stage_id = nextStageId;\n    changes.forEach(change => {\n      const changeIndex = stuff.changes.findIndex(\n        c => c.paramName === change.paramName\n      );\n      const thisStuffCh = stuff.changes[changeIndex];\n\n      const changeTerm = change.term;\n\n      if (!thisStuffCh) {\n        stuff.changes.push(this.loc.cChange(change.paramName, changeTerm));\n      } else {\n        if (changeTerm) thisStuffCh.term = changeTerm;\n        else stuff.changes.splice(changeIndex, 1);\n        console.log(thisStuffCh);\n      }\n    });\n    this.forceUpdate();\n  };\n\n  removeTopic = id => {\n    const index = this.loc.topics.findIndex(t => t.id === id);\n    this.loc.topics.splice(index, 1);\n    const stages = this.loc._getStages(id);\n    stages.forEach(s => {\n      this.removeStage(s.id);\n    });\n\n    this.setState({ currentTopic: null, currentStage: null });\n    this.forceUpdate();\n  };\n  removeStage = id => {\n    const index = this.loc.stages.findIndex(s => s.id === id);\n    this.loc.stages.splice(index, 1);\n    const stuffs = this.loc._getStuffs(id);\n    stuffs.forEach(s => {\n      if (s.next_stage_id === id) {\n        s.next_stage_id = null;\n      }\n      this.removeStuff(s.id);\n    });\n    this.setState({ currentStage: null });\n    this.forceUpdate();\n  };\n  removeStuff = id => {\n    const index = this.loc.stuffs.findIndex(s => s.id === id);\n    this.loc.stuffs.splice(index, 1);\n    const phrases = this.loc._getPhrases(id);\n    phrases.forEach(p => {\n      this.removePhrase(p.id);\n    });\n    this.forceUpdate();\n  };\n  removePhrase = id => {\n    const index = this.loc.phrases.findIndex(p => p.id === id);\n    this.loc.phrases.splice(index, 1);\n    this.forceUpdate();\n  };\n\n  click = id => {\n    const firstStage = this.loc._getStages(id)[0];\n    if (firstStage) this.changeStage(firstStage.id);\n    else this.setState({ currentTopic: id, currentStage: null });\n    this.forceUpdate();\n  };\n  changeStage = id => {\n    const stage = this.loc.stages.find(s => s.id === id);\n    if (stage) {\n      this.setState({ currentTopic: stage.topic_id, currentStage: id });\n    }\n\n    this.forceUpdate();\n  };\n\n  render() {\n    const { topics, grads, params, ranges } = this.loc;\n    const stat = {\n      grads,\n      params,\n      ranges\n    };\n\n    const { currentStage, currentTopic } = this.state;\n\n    const methods = {\n      addTopic: this.addTopic,\n      addStage: this.addStage,\n      updateStage: this.updateStage,\n      updateTopic: this.updateTopic,\n      removeTopic: this.removeTopic,\n      removeStage: this.removeStage,\n      updateStuff: this.updateStuff,\n      removeStuff: this.removeStuff,\n      getStages: this.loc._getStages,\n      getStuffs: this.loc._getStuffs,\n      getPhrases: this.loc._getPhrases,\n      addStuff: this.addStuff,\n      updatePhrase: this.updatePhrase,\n      addPhrase: this.addPhrase,\n      removePhrase: this.removePhrase,\n      getParam: this.loc._getParam,\n      checkStageFinal: this.loc.checkStageFinal\n    };\n\n    const topicItems = topics.map(topic => {\n      const isSelect = topic.id === currentTopic;\n      return (\n        <TopicItem\n          key={topic.id}\n          topic={topic}\n          methods={methods}\n          isSelect={isSelect}\n          click={this.click}\n        />\n      );\n    });\n\n    const topicView = currentTopic ? (\n      <Topic\n        allTopics={this.loc.topics}\n        allStages={this.loc.stages}\n        currentStage={currentStage}\n        topic={topics.find(topic => topic.id === this.state.currentTopic)}\n        stat={stat}\n        methods={methods}\n        goTopic={this.click}\n        click={this.changeStage}\n        changeStage={this.changeStage}\n      />\n    ) : null;\n\n    console.log(this.loc);\n    return (\n      <div>\n        <button onClick={() => this.import()}>import</button>\n        <button onClick={() => this.exportFile()}>export</button>\n        <br />\n        <AddTopic methods={methods} stat={stat} />\n        {topicItems}\n        {topicView}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Game from \"./components/Game/Game\";\nimport Editor from \"./components/Editor/Editor\";\n\nfunction App() {\n  return (\n    <div>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}